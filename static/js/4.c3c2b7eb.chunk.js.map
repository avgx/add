{"version":3,"sources":["components/WidgetEditor/WidgetEditorTitle.tsx","components/WidgetEditor/WidgetEditorLoadingEventFields.tsx","components/WidgetEditor/WidgetEditorLoadingPossibleValues.tsx","components/WidgetEditor/WidgetEditorLoadingPossiblePeriods.tsx","components/QueryEditor/QueryEditorSelect.tsx","components/QueryEditor/QueryEditorFilter.tsx","components/QueryEditor/QueryEditorTimeperiod.tsx","components/QueryEditor/QueryEditor.tsx","components/VisualizeEditor/VisualizeType.tsx","components/VisualizeEditor/VisualizeTypeChart.tsx","components/VisualizeEditor/VisualizeTypePie.tsx","components/VisualizeEditor/VisualizeTypeCounter.tsx","components/VisualizeEditor/VisualizeTypeTable.tsx","components/VisualizeEditor/VisualizeTypePivotTable.tsx","components/VisualizeEditor/VisualizeTypeEvents.tsx","components/VisualizeEditor/VisualizeTypeMarkdown.tsx","components/VisualizeEditor/VisualizeEditor.tsx","components/WidgetPreview/WidgetPreviewChart.tsx","components/WidgetPreview/WidgetPreviewPie.tsx","components/WidgetPreview/WidgetAggregationTable.tsx","components/WidgetPreview/WidgetEvents.tsx","components/WidgetPreview/WidgetPivotTable.tsx","components/WidgetPreview/WidgetCounter.tsx","components/WidgetPreview/WidgetMarkdown.tsx","components/WidgetEditor/WidgetEditorRaw.tsx","components/WidgetEditor/WidgetEditor.tsx","components/Dashboard/Dashboard.tsx","components/Dashboard/DashboardRaw.tsx","components/Dashboard/DashboardListDialog.tsx","components/App/LoadingDashboards.tsx","components/App/Main.tsx"],"names":["WidgetEditorTitle","props","Paper","variant","elevation","Grid","container","spacing","direction","alignItems","item","TextField","id","size","label","value","title","onChange","event","newValue","target","console","log","onChangeTitle","fullWidth","InputLabelProps","shrink","description","onChangeDescription","multiline","WidgetEditorLoadingEventFields","state","err","undefined","url1","this","api","lang","requestOptions","method","headers","Authorization","token","fetch","then","response","json","data","onChangeEventFields","catch","e","setState","message","justify","style","height","margin","padding","Typography","display","justifyContent","React","WidgetEditorLoadingPossibleValues","fetchField1","field","a","fieldType","descriptor","type","fieldName","name","fieldsSet","eventFields","filter","x","fieldsDictionary","setValues","Map","dictionaryValues","setPromise","Promise","all","map","ok","content","set","result","dictionaryPromise","JSON","stringify","possibleValues","Immutable","dictionary","onChangePossibleValues","WidgetEditorLoadingPossiblePeriods","onLoadPossiblePeriods","QueryEditorSelect","anchorEl","setAnchorEl","handleDelete","onRemoveField","handleSelect","onAddField","created","groupBy","available","groupByAvailable","find","xx","IconButton","edge","aria-label","onClick","currentTarget","Chip","key","onDelete","translation","Menu","keepMounted","open","Boolean","onClose","MenuItem","QueryEditorFilter","setOpen","keyOpHardcoded","valueOpHardcoded","numberOpHardcoded","filterField","setFilterField","filterOp","setFilterOp","filterValue","setFilterValue","onRemoveFilterItem","handleSelectValue","handleOk","first","op","onAddFilterItem","list","filterFieldType","possibleSet","has","get","possibleDictionary","okEnabled","filterItemsList","filterItems","index","itemTranslated","itemType","values","Dialog","disableBackdropClick","disableEscapeKeyDown","maxWidth","aria-labelledby","DialogTitle","DialogContent","dividers","select","childs","newOp","p","DialogActions","Button","autoFocus","color","disabled","QueryEditorTimeperiod","timeperiods","possiblePeriods","className","onTimeperiod","period","QueryEditor","VisualizeType","VisualizeTypeChart","itemByName","availableFieldsX","chart","y","series","availableFieldsY","availableFieldsS","groupByItems","xType","yType","sType","availableOp","newChart","onChartChange","option","FormControlLabel","control","Switch","checked","brush","VisualizeTypePie","VisualizeTypeCounter","handleSelectField","newCounter","counter","onCounterChange","handleSelectFieldGroupBy","fieldGroupBy","handleSelectOp","handleWithReferenceValue","referenceValue","referenceOp","handleReferenceValue","Number","handleReferenceOp","needGroupByField","withReferenceValue","xs","sm","VisualizeTypeTable","newTable","table","onTableChange","handleAggregationFieldInGroupBy","isAggregationFieldInGroupBy","aggregateByField","aggregateByFieldType","aggregateByFieldOp","includes","List","ListItem","dense","ListItemText","primary","secondary","VisualizeTypePivotTable","availableFieldsRows","pivot","columns","availableFieldsColumns","rows","availableFieldsValues","rowsType","columnsType","valuesType","columnsFieldName","columnsFieldType","columnsValues","availableDeltaA","availableDeltaB","availableReference","concat","newPivot","onPivotTableChange","fixed1","delta","defaultValue","deltaTitle","Checkbox","deltaOnly","deltaA","deltaB","referenceColumn","VisualizeTypeEvents","VisualizeTypeMarkdown","bottom","onMarkdownBottomChange","VisualizeEditor","visualizeType","pdfMake","vfs","pdfFonts","WidgetPreviewChart","openFullscreen","lineChart","barChart","areaChart","handleFullscreenOpen","prevState","handleFullscreenClose","handleEdit","onEditWidget","onDeleteWidget","stringToColour","str","hash","i","length","charCodeAt","colour","ii","toString","substr","download","document","getElementById","image","toDataURL","replace","setAttribute","exportChart","asSVG","chartSVG","ReactDOM","findDOMNode","children","svgURL","XMLSerializer","serializeToString","docDefinition","Blob","getAttribute","footer","currentPage","pageCount","text","Date","alignment","svg","width","createPdf","svgBlob","outerHTML","FileSaver","saveAs","svgToPng","resolve","reject","canvas","createElement","ctx","getContext","fillStyle","fillRect","xml","dataUrl","encodeURIComponent","img","Image","onload","drawImage","imageData","onerror","src","handleDownloadSvg","handleDownloadPng","pngData","href","click","handleDownloadPdf","handleDownload","handleDownload1","handleDownload111","loadData","chartState","d","keys","numbers","parseFloat","lists","fields","body","Error","r","handleClick","payload","handleClickLine","activeLabel","prevProps","Card","CardContent","seriesField","seriesFieldName","seriesFieldType","seriesValues","seriesInDataValues","reduce","coll","s","add","Set","sv","v","currentX","valueForX","vv","sortBy","toArray","dd","theChart","ref","top","right","left","dataKey","stroke","strokeDasharray","serieVal","connectNulls","isAnimationActive","activeDot","prop","fill","fillOpacity","CardHeader","action","subheader","isEditMode","CardActions","disableSpacing","fullScreen","Toolbar","WidgetPreviewPie","kk","align","gutterBottom","cx","cy","innerRadius","outerRadius","nameKey","entry","icon","MatIcon","forwardRef","tableIcons","Add","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowDownward","ThirdStateCheck","Remove","ViewColumn","WidgetAggregationTable","selected","tableState","aggregateByFieldTranslation","itemValues","itemLookup","itemLookupObject","Object","fromEntries","entries","lookup","aggColumn","allColumns","theTable","icons","onColumnDragged","sourceIndex","destinationIndex","options","showTitle","exportAllData","exportButton","exportFileName","moment","format","rowStyle","rowData","backgroundColor","tableData","onRowClick","evt","selectedRow","isLoading","components","Container","Component","WidgetEvents","openEventFullscreen","handleEventFullscreenOpen","handleEventFullscreenClose","limit","events","hidden","render","button","component","NavLink","to","headerStyle","font","selection","toolbarButtonAlignment","draggable","actions","tooltip","selectedCount","alert","selectedEvent","WidgetPivotTable","columnsField","rowsField","rowsFieldName","rowsFieldType","rowsFieldTranslation","rowsValues","columnsInDataValues","rowsInDataValues","withDelta","onlyDeltaColumn","b","highlight","res","rowsLookup","rowsLookupObject","xColumn","tableColumns","deltaColumn","tableRows","fixedColumns","WidgetCounter","handleRefresh","loadCounter","counterState","isAlert","aria-haspopup","WidgetMarkdown","WidgetEditorRaw","rawValue","setRawValue","Tooltip","raw","onChangeRaw","WidgetEditor","real","uuidv4","handleChangeTitle","handleChangeDescription","handleChange","handleTimeperiod","handleAddField","push","handleRemoveField","handleChartChange","handleTableChange","handlePivotTableChange","handleCounterChange","handleMarkdownBottomChange","handleAddFilterItem","handleRemoveFilterItem","handleRaw","parse","handleEditorDialogSave","onChangeWidgetEditorState","internal","possiblePeriodsLoaded","groupByAvailableLoaded","possibleValuesLoaded","Breadcrumbs","separator","dashboardId","onLoadPossibleValues","onLoadEventFields","Dashboard","widgets","markdownTopWidgets","markdownBottomWidgets","chartWidgets","pieWidgets","counterWidgets","tableWidgets","pivotWidgets","eventsWidgets","isCommonFilterEnabled","alignContent","refreshTime","DashboardRaw","isReadonly","DashboardListDialog","handleClose","onSelectWidgets","Divider","ListSubheader","board","LoadingDashboards","dashboardsJsonUrl","ms","setTimeout","waitMs","onLoadedDashboards","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","Main","classes","useParams","dashboardFile","widgetId","widgetMode","eventId","defaultList","dashboardListData","useState","setList","tutorial","tutorialData","appTitle","setAppTitle","setEditMode","setApi","setToken","setLang","setCommonFilterEnabled","setRefreshTime","openBackendDialog","setOpenBackendDialog","openEditorDialog","setOpenEditorDialog","handleBackendDialogClose","handleEditorDialogClose","tokenParsed","atob","split","parseJwt","tokenDescription","setWidgets","widgetEditorInternalState","setWidgetEditorInternalState","handleLoadEventFields","valuesSorted","sort","bandA","toUpperCase","bandB","comparison","handleLoadPossibleValues","handleLoadPossiblePeriods","decodeURIComponent","loadedList","handleEditWidget","handleDeleteWidget","Box","displayPrint","AppBar","position","w","ww","l","w1","widgetRoot","querySelector","header","DialogContentText","helperText","widget"],"mappings":"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","file":"static/js/4.c3c2b7eb.chunk.js","sourcesContent":["import * as React from \"react\";\n// import Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\n// import Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\n// import Container from \"@material-ui/core/Paper\";\nimport { Grid } from \"@material-ui/core\";\n\ntype WidgetEditorTitleProps = {\n  title?: string;\n  description?: string;\n  onChangeTitle: (title: string) => void;\n  onChangeDescription: (description: string) => void;\n};\n\nfunction WidgetEditorTitle(props: WidgetEditorTitleProps) {\n\n  const handleTitleValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value && event.target.value !== \"\" ? event.target.value : \"\";\n    console.log(\"newTitleValue \" + newValue);\n    props.onChangeTitle(newValue);\n  };\n\n  const handleDescriptionValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value && event.target.value !== \"\" ? event.target.value : \"\";\n    console.log(\"newDescriptionValue \" + newValue);\n    props.onChangeDescription(newValue);\n  };\n\n  return (\n    <Paper variant=\"elevation\" elevation={0}>\n      <Grid container spacing={2} direction=\"column\" alignItems=\"stretch\">\n        <Grid item spacing={2}>\n          <div>\n            <TextField\n              id=\"title-text\"\n              size=\"small\"\n              label=\"Title\"              \n              value={props.title}\n              onChange={handleTitleValue}\n              fullWidth\n              InputLabelProps={{ shrink: true }}\n              variant=\"outlined\"\n            />\n          </div>\n        </Grid>\n        <Grid item spacing={2}>\n          <TextField\n            id=\"description-text\"\n            size=\"small\"\n            label=\"Description\"\n            value={props.description}\n            onChange={handleDescriptionValue}\n            fullWidth\n            multiline\n            variant=\"outlined\"\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default WidgetEditorTitle;\n","import * as React from \"react\";\nimport { EventField, Lang } from \"./types\";\nimport { Container, Typography, Grid } from \"@material-ui/core\";\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n\ntype WidgetEditorLoadingEventFieldsProps = {\n  api: string;\n  token: string;\n  lang: Lang;\n  onChangeEventFields: (values: EventField[]) => void;\n};\n\ntype WidgetEditorLoadingEventFieldsState = {\n  err?: string;\n};\n\nclass WidgetEditorLoadingEventFields extends React.Component<\n  WidgetEditorLoadingEventFieldsProps,\n  WidgetEditorLoadingEventFieldsState\n> {\n  state: WidgetEditorLoadingEventFieldsState = {\n    err: undefined,\n  };\n  componentDidMount() {\n    // Simple POST request with a JSON body using fetch\n    //noauth=true&\n    const url1 =\n      this.props.api +\n      \"/api/v1/ad-dictionary/events/fields?lang=\" +\n      this.props.lang;\n    const requestOptions: RequestInit = {\n      method: \"GET\",\n      //mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.props.token,\n      },\n    };\n    fetch(url1, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        this.props.onChangeEventFields(data);\n      })\n      .catch((e) => {\n        this.setState({ err: e.message });\n      });\n  }\n\n  render() {\n    if (this.state.err) {\n      return (\n        <div>\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ height: '90vh', margin: 0, padding: 0 }}>\n            <Grid item>\n              <Container>\n                <Typography>Error: {this.state.err}</Typography>\n              </Container>\n            </Grid>\n          </Grid>          \n        </div>\n      );\n    }\n\n    return (\n      <div style={{\n        height: '90vh', margin: 0, padding: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}>\n        <DashboardIcon/>&nbsp;&nbsp;Loading event fields...\n      </div>      \n    );\n  }\n}\n\nexport default WidgetEditorLoadingEventFields;\n","import * as React from \"react\";\nimport {\n  EventField,\n  PossibleValues,\n  PossibleValueDictionary,\n} from \"./types\";\nimport { Container, Typography, Grid } from \"@material-ui/core\";\n//import { Map, List, fromJS } from \"immutable\";\nimport * as Immutable from \"immutable\";\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n\ntype WidgetEditorLoadingPossibleValuesProps = {\n  api: string,\n  token: string,\n  eventFields: EventField[],\n  onChangePossibleValues: (values: PossibleValues) => void;\n};\n\n// const loadJson = () =>\n//   fetch(\"https://api.coinmarketcap.com/v1/ticker/?limit=1\")\n//     .then(res => (res.ok ? res : Promise.reject(res)))\n//     .then(res => res.json())\n\nclass WidgetEditorLoadingPossibleValues extends React.Component<WidgetEditorLoadingPossibleValuesProps> {\n  \n  // fetchField = (field: EventField) => {\n  //   const fieldType = \"set\";\n  //   const fieldName = field.name;\n  //   console.log(\"fetch set \" +fieldName);\n  //   const url1 = this.props.api + \"/api/v2/ad-query/field/\"+fieldType+\"/\"+fieldName;\n  //   const requestOptions = {\n  //     method: 'GET',\n  //     headers: { \n  //       'Content-Type': 'application/json',\n  //       'Authorization': \"Bearer \" + this.props.token,\n  //     },\n  //     //body: JSON.stringify({ title: 'React POST Request Example' })\n  //   };\n  //   fetch(url1, requestOptions)\n  //     .then(response => response.json())\n  //     .then(data => {\n  //       console.log(data)\n  //     });\n  // };\n\n  fetchField1 = async (field: EventField) => {\n    const fieldType = field.descriptor.type;\n    const fieldName = field.name;\n    console.log(\"fetch \" + fieldType + \" \" + fieldName);\n    const url1 = this.props.api + \"/api/v2/ad-query/field/\"+fieldType+\"/\"+fieldName; //+\"?noauth=true\";\n    const requestOptions: RequestInit = {\n      method: 'GET',\n      //mode: \"no-cors\",\n      headers: { \n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + this.props.token,\n      },\n      //body: JSON.stringify({ title: 'React POST Request Example' })\n    };\n\n    // let response = await fetch(url1, requestOptions)\n    // if (response.ok) return await response.json()\n    // throw new Error(response.status)\n\n    return fetch(url1, requestOptions)\n      // .then(response => response.json())\n      .catch(err => {\n        console.log('Error: ' + url1, err)\n      })\n  };\n\n  async componentDidMount(): Promise<void> {\n    console.log(\"WidgetEditorLoadingPossibleValues componentDidMount\")\n    const fieldsSet = this.props.eventFields\n      .filter((x) => x.descriptor.type === \"set\");\n    const fieldsDictionary = this.props.eventFields\n      .filter((x) => x.descriptor.type === \"dictionary\");\n    \n    var setValues: Map<string, string[]> = new Map<string, string[]>();\n    var dictionaryValues: Map<string, PossibleValueDictionary[]> = new Map<string, PossibleValueDictionary[]>();\n    \n    let setPromise = Promise.all(fieldsSet.map(async (x) => {\n      let response = await this.fetchField1(x);\n      //console.log(\"response=\"+response);\n      if (response && response.ok) {\n        let content = await response.json();\n        //console.log(x.name + \" content=\"+content.result);\n        setValues.set(x.name, content.result);\n      } else {\n        setValues.set(x.name, []);\n      }\n      \n    }));\n    \n    let dictionaryPromise = Promise.all(fieldsDictionary.map(async (x) => {\n      let response = await this.fetchField1(x);\n      //console.log(\"response=\"+response);\n      if (response && response.ok) {\n        let content = await response.json();\n        //console.log(x.name + \" content=\"+content.result);\n        dictionaryValues.set(x.name, content.result);\n      } else {\n        dictionaryValues.set(x.name, []);\n      }\n      \n    }));\n\n    console.log(\"before Promise.all\");\n    await Promise.all([setPromise, dictionaryPromise]);    \n    console.log(\"after Promise.all\");\n\n    console.log(\"setValues=\"+JSON.stringify(setValues));\n    console.log(\"dictionaryValues=\"+JSON.stringify(dictionaryValues));\n\n    const possibleValues: PossibleValues = {\n      set: Immutable.fromJS(setValues),\n      dictionary: Immutable.fromJS(dictionaryValues),\n    };\n\n    this.props.onChangePossibleValues(possibleValues);\n     \n  }\n\n  // possibleValues: {\n  //   set: fromJS({\n  //     \"event.detector.faceAppeared.gender2\":\n  //       fieldSetEventDetectorFaceAppearedGender2.result,\n  //     \"event.detector.faceAppeared.phase\":\n  //       fieldSetEventDetectorFaceAppearedPhase.result,\n  //     type: fieldSetType.result,\n  //   }),\n  //   dictionary: fromJS({\n  //     \"event.detector.type\": fieldDictionaryEventDetectorType.result,\n  //     \"source.server\": fieldDictionarySourceServer.result,\n  //     \"source.video\": fieldDictionarySourceVideo.result,\n  //   }),\n  // },\n\n  // componentDidMount () {\n  //   console.log(\"WidgetEditorLoadingPossibleValues componentDidMount\")\n  //   // Simple POST request with a JSON body using fetch\n  //   const fields = this.props.eventFields.filter((x) => x.descriptor.type == \"set\");\n  //   fields.forEach((x) => {\n  //     this.fetchField(x);\n  //   });\n  // }\n\n  render() {\n    return (\n      <div style={{\n        height: '90vh', margin: 0, padding: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}>\n        <DashboardIcon/>&nbsp;&nbsp;Loading possible values...\n      </div>      \n      )\n  }\n}\n\nexport default WidgetEditorLoadingPossibleValues;","import * as React from \"react\";\nimport { TimePeriod, Lang } from \"./types\";\nimport { Container, Typography, Grid } from \"@material-ui/core\";\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n\ntype Props = {\n  api: string;\n  token: string;\n  lang: Lang;\n  onLoadPossiblePeriods: (values: TimePeriod[]) => void;\n};\n\ntype State = {\n  err?: string;\n};\n\nclass WidgetEditorLoadingPossiblePeriods extends React.Component<\n  Props,\n  State\n> {\n  state: State = {\n    err: undefined,\n  };\n  componentDidMount() {\n    // Simple POST request with a JSON body using fetch\n    //noauth=true&\n    const url1 = this.props.api + \"/api/v1/ad-dictionary/timeperiods?lang=\" + this.props.lang;\n    const requestOptions: RequestInit = {\n      method: \"GET\",\n      //mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.props.token,\n      },\n    };\n    fetch(url1, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        this.props.onLoadPossiblePeriods(data);\n      })\n      .catch((e) => {\n        this.setState({ err: e.message });\n      });\n  }\n\n  render() {\n    if (this.state.err) {\n      return (\n        <div>\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" style={{ height: '90vh', margin: 0, padding: 0 }}>\n            <Grid item>\n              <Container>\n                <Typography>Error: {this.state.err}</Typography>\n              </Container>\n            </Grid>\n          </Grid>   \n        </div>\n      );\n    }\n\n    return (\n      <div style={{\n        height: '90vh', margin: 0, padding: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}>\n        <DashboardIcon/>&nbsp;&nbsp;Loading timeperiods...\n      </div>      \n    );\n  }\n}\n\nexport default WidgetEditorLoadingPossiblePeriods;\n","import * as React from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport { EventField } from \"../WidgetEditor/types\";\nimport * as Immutable from \"immutable\";\nimport { Paper } from \"@material-ui/core\";\n\ntype QueryEditorSelectProps = {\n  groupBy: Immutable.List<string>;\n  groupByAvailable: EventField[];\n  onAddField: (item: EventField) => void;\n  onRemoveField: (item: EventField) => void;\n};\n\nfunction QueryEditorSelect(props: QueryEditorSelectProps) {\n  //const [open, setOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  // const open = Boolean(anchorEl);\n\n  const handleDelete = (item: EventField) => () => {\n    props.onRemoveField(item);\n  };\n\n  const handleOpenMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleSelect = (item: EventField) => () => {\n    props.onAddField(item);\n    setAnchorEl(null);\n  };\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  const created = props.groupBy;\n  const available = props.groupByAvailable.filter(\n    (x) =>\n      !created.find((xx) => xx === x.name) && x.descriptor.type !== \"complex\"\n  );\n\n  const itemByName = (name: string) => {\n    return props.groupByAvailable.find((x) => x.name === name)\n  };\n\n  return (\n    <Paper variant=\"elevation\" elevation={0} title=\"Select fields that will be used in the result dataset\">\n      <Typography variant=\"h6\">\n        Select\n        <IconButton edge=\"end\" aria-label=\"filter\" onClick={handleOpenMenu} title=\"Add field\" >\n          <AddCircleOutlineOutlinedIcon />\n        </IconButton>\n      </Typography>\n\n      {Immutable.List(props.groupBy).map((x) => itemByName(x)).filter((x) => !!x).map((x)=> x!).map((item) => (\n        <Chip\n          key={item.name}\n          variant=\"outlined\"\n          size=\"small\"\n          onDelete={handleDelete(item)}\n          label={item.translation}\n        />\n      ))}\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}\n      >\n        {available.map((item) => (\n          <MenuItem key={item.name} onClick={handleSelect(item)}>\n            {item.translation}\n          </MenuItem>\n        ))}\n      </Menu>\n    </Paper>\n  );\n}\n\nexport default QueryEditorSelect;\n","import * as React from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport FilterListOutlinedIcon from \"@material-ui/icons/FilterListOutlined\";\n//import Paper from '@material-ui/core/Paper';\nimport {\n  EventField,\n  QueryFilterKey,\n  QueryFilterKeyOperation,\n  QueryFilterValueOperation,\n  QueryFilterNumberOperation,\n  PossibleValues,\n} from \"../WidgetEditor/types\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport * as Immutable from \"immutable\";\nimport { Paper } from \"@material-ui/core\";\n\ntype QueryEditorFilterProps = {\n  groupByAvailable: EventField[];\n  filterItems: Immutable.List<QueryFilterKey>;\n  possibleValues: PossibleValues;\n  onAddFilterItem: (item: QueryFilterKey) => void;\n  onRemoveFilterItem: (item: QueryFilterKey) => void;\n};\n\nfunction QueryEditorFilter(props: QueryEditorFilterProps) {\n  const [open, setOpen] = React.useState(false);\n\n  const keyOpHardcoded: { value: QueryFilterKeyOperation; label: string }[] = [\n    { value: \"eq\", label: \"==\" },\n    { value: \"neq\", label: \"!=\" },\n  ];\n\n  const valueOpHardcoded: {\n    value: QueryFilterValueOperation;\n    label: string;\n  }[] = [\n    { value: \"contains\", label: \"contains\" },\n    { value: \"notcontains\", label: \"notcontains\" },\n  ];\n\n  const numberOpHardcoded: {\n    value: QueryFilterNumberOperation;\n    label: string;\n  }[] = [\n    { value: \"gt\", label: \">\" },\n    { value: \"lt\", label: \"<\" },\n    { value: \"gte\", label: \">=\" },\n    { value: \"lte\", label: \"<=\" },\n    { value: \"eq\", label: \"==\" },\n    { value: \"neq\", label: \"!=\" },\n  ];\n\n  const [filterField, setFilterField] = React.useState(\"\");\n  const [filterOp, setFilterOp] = React.useState(\"\");\n  const [filterValue, setFilterValue] = React.useState(\"\");\n\n  const handleDelete = (item: QueryFilterKey) => () => {\n    console.log(\"handleDelete \" + JSON.stringify(item));\n    props.onRemoveFilterItem(item);\n  };\n\n  const handleSelectField = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //setName(event.target.value);\n    console.log(\"handleSelectField \" + event.target.value);\n    const item = props.groupByAvailable.find(\n      (x) => x.name === event.target.value\n    );\n\n    console.log(\"handleSelectField item \" + item?.name);\n    const newValue =\n      event.target.value && event.target.value !== \"\" ? event.target.value : \"\";\n    //const newOp = item?.descriptor.type != \"number\" ? \"count\" : props.chart?.op;\n    console.log(\"handleSelectField \" + newValue);\n    setFilterField(newValue);    \n\n    \n  };\n\n  const handleSelectOp = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //setName(event.target.value);\n    console.log(\"handleSelectOp \" + event.target.value);\n    const newOp =\n      event.target.value && event.target.value !== \"\" ? event.target.value : \"\";\n    console.log(\"newOp \" + newOp);\n    setFilterOp(newOp);\n  };\n\n  const handleSelectValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //setName(event.target.value);\n    console.log(\"handleSelectValue \" + event.target.value);\n    const newValue =\n      event.target.value && event.target.value !== \"\" ? event.target.value : \"\";\n    console.log(\"newValue \" + newValue);\n    setFilterValue(newValue);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  \n  const handleCancel = () => {\n    setOpen(false);\n  };\n\n  const handleOk = () => {\n    setOpen(false);\n\n    const list = Immutable.List(props.groupByAvailable);\n    const type: string = list\n      .filter((x) => x.name === filterField)\n      .map((x) => x.descriptor.type)\n      .first() ?? \"\";\n\n    const item: QueryFilterKey = {\n      field: filterField,\n      type: type,\n      op: filterOp,\n      value: filterValue,\n    };\n\n    props.onAddFilterItem(item);\n    setFilterValue(\"\");    \n    setFilterOp(\"\");\n    setFilterField(\"\");\n  };\n\n  const list = Immutable.List(props.groupByAvailable);\n  const filterFieldType: string =\n    list\n      .filter((x) => x.name === filterField)\n      .map((x) => x.descriptor.type)\n      .first() ?? \"\";\n  const possibleSet: string[] =\n    filterFieldType === \"set\"\n      ? props.possibleValues.set.has(filterField)\n        ? props.possibleValues.set.get(filterField)!\n        : []\n      : [];\n\n  const possibleDictionary: any[] =\n    filterFieldType === \"dictionary\"\n      ? props.possibleValues.dictionary.has(filterField)\n        ? props.possibleValues.dictionary.get(filterField)!\n        : []\n      : [];\n\n  // possibleDictionary.map((p, idx) => {\n  //   //console.log(\"possibleDictionary [\" + idx + \"] = \" + JSON.stringify(p));\n  //   const key = p.get(\"key\");\n  //   const value = p.get(\"value\");\n  //   //console.log(\"possibleDictionary [\" + key + \"] = \" + value);\n  // })\n\n  //console.log(\"possibleDictionary = \" + JSON.stringify(possibleDictionary));\n  const okEnabled = filterField !== \"\" && filterOp !== \"\" && filterValue !== \"\";\n\n  const filterItemsList = Immutable.List(props.filterItems);\n  console.log(filterItemsList);\n  return (\n    <Paper variant=\"elevation\" elevation={0} title=\"Filter the result dataset\">\n      <Typography variant=\"h6\">\n        Filter\n        <IconButton edge=\"end\" aria-label=\"filter\" onClick={handleClickOpen} title=\"Add filter\">\n          <FilterListOutlinedIcon />\n        </IconButton>\n      </Typography>\n      {filterItemsList.map((item, index) => {\n        const key = item.field + \".\" + item.op + \".\" + item.value;\n        const itemTranslated: string =\n          list\n            .filter((x) => x.name === item.field)\n            .map((x) => x.translation)\n            .first() ?? item.field;\n        const itemType: string =\n          list\n            .filter((x) => x.name === item.field)\n            .map((x) => x.descriptor.type)\n            .first() ?? \"\";\n        const op =\n          itemType === \"number\"\n            ? Immutable.List(numberOpHardcoded)\n                .filter((x) => x.value === item.op)\n                .map((x) => x.label)\n                .first() ?? item.op\n            : itemType === \"set\" || itemType === \"dictionary\"\n            ? Immutable.List(keyOpHardcoded)\n                .filter((x) => x.value === item.op)\n                .map((x) => x.label)\n                .first() ?? item.op\n            : itemType === \"string\"\n            ? Immutable.List(valueOpHardcoded)\n                .filter((x) => x.value === item.op)\n                .map((x) => x.label)\n                .first() ?? item.op\n            : item.op;\n\n        //TODO: тут кривость с any, но пока не понятно что там, но явно не то что я описал в типах\n        const values: any[] = props.possibleValues.dictionary.has(item.field)\n          ? props.possibleValues.dictionary.get(item.field)!\n          : [];\n\n        //console.log(\"values = \" + JSON.stringify(values));\n\n        const value =\n          itemType === \"dictionary\"\n            ? Immutable.List(values)\n                .filter((x) => x.key === item.value)\n                .map((x) => x.value)\n                .first() ?? item.value\n            : item.value;\n\n        const label = itemTranslated + \" \" + op + \" \" + value;\n\n        return (\n          <Chip\n            key={key}\n            variant=\"outlined\"\n            size=\"small\"\n            onDelete={handleDelete(item)}\n            label={label}\n          />\n        );\n      })}\n\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        maxWidth=\"xs\"\n        fullWidth\n        aria-labelledby=\"confirmation-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">Filter by</DialogTitle>\n        <DialogContent dividers>\n          <Grid container spacing={2} direction=\"column\" alignItems=\"stretch\">\n            <Grid item>\n              <TextField\n                id=\"field-textfield\"\n                label={\n                  filterFieldType !== \"\"\n                    ? \"Field / \" + filterFieldType\n                    : \"Field\"\n                }\n                size=\"small\"\n                select\n                fullWidth\n                value={filterField}\n                onChange={handleSelectField}\n                variant=\"outlined\"\n              >\n                {props.groupByAvailable.map((field, index) => {\n                  if (field.descriptor.childs != null) {\n                    return null;\n                  } else {\n                    return (\n                      <MenuItem key={field.name} value={field.name}>\n                        {field.translation}\n                      </MenuItem>\n                    );\n                  }\n                })}\n              </TextField>\n            </Grid>\n            <Grid item>\n              {filterFieldType === \"number\" ||\n              filterFieldType === \"string\" ||\n              filterFieldType === \"set\" ||\n              filterFieldType === \"dictionary\" ? (\n                <TextField\n                  id=\"op-value-textfield\"\n                  label=\"op\"\n                  size=\"small\"\n                  select\n                  fullWidth\n                  value={filterOp}\n                  onChange={handleSelectOp}\n                  variant=\"outlined\"\n                >\n                  {filterFieldType === \"number\"\n                    ? numberOpHardcoded.map((op, index) => {\n                        return (\n                          <MenuItem key={op.value} value={op.value}>\n                            {op.label}\n                          </MenuItem>\n                        );\n                      })\n                    : null}\n                  {filterFieldType === \"set\" || filterFieldType === \"dictionary\"\n                    ? keyOpHardcoded.map((op, index) => {\n                        return (\n                          <MenuItem key={op.value} value={op.value}>\n                            {op.label}\n                          </MenuItem>\n                        );\n                      })\n                    : null}\n                  {filterFieldType === \"string\"\n                    ? valueOpHardcoded.map((op, index) => {\n                        return (\n                          <MenuItem key={op.value} value={op.value}>\n                            {op.label}\n                          </MenuItem>\n                        );\n                      })\n                    : null}\n                  {/* <MenuItem key=\"[no value]\" value=\"\">[No value]</MenuItem> */}\n                </TextField>\n              ) : null}\n            </Grid>\n            <Grid item>\n              {filterFieldType === \"number\" || filterFieldType === \"string\" ? (\n                <TextField\n                  id=\"value-textfield\"\n                  label=\"Value\"\n                  size=\"small\"\n                  fullWidth\n                  value={filterValue}\n                  onChange={handleSelectValue}\n                  variant=\"outlined\"\n                />\n              ) : null}\n              {filterFieldType === \"set\" ? (\n                <TextField\n                  id=\"value-textfield\"\n                  label=\"Value\"\n                  size=\"small\"\n                  fullWidth\n                  select\n                  value={filterValue}\n                  onChange={handleSelectValue}\n                  variant=\"outlined\"\n                >\n                  <MenuItem key=\"\" value=\"\">\n                    [No value]\n                  </MenuItem>\n                  {possibleSet.map((p) => {\n                    return (\n                      <MenuItem key={p} value={p}>\n                        {p}\n                      </MenuItem>\n                    );\n                  })}\n                </TextField>\n              ) : null}\n              {filterFieldType === \"dictionary\" ? (\n                <TextField\n                  id=\"value-textfield\"\n                  label=\"Value\"\n                  size=\"small\"\n                  fullWidth\n                  select\n                  value={filterValue}\n                  onChange={handleSelectValue}\n                  variant=\"outlined\"\n                >\n                  <MenuItem key=\"\" value=\"\">\n                    [No value]\n                  </MenuItem>\n                  {possibleDictionary.map((p) => {\n                    const key = p.key;\n                    const value = p.value;\n                    // const key = p.get(\"key\");\n                    // const value = p.get(\"value\");\n                    return (\n                      <MenuItem key={key} value={key}>\n                        {value}\n                      </MenuItem>\n                    );\n                  })}\n                </TextField>\n              ) : null}\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleCancel} color=\"primary\">\n            Cancel\n          </Button>\n          {okEnabled ? (\n            <Button onClick={handleOk} color=\"primary\">\n              Ok\n            </Button>\n          ) : (\n            <Button onClick={handleOk} disabled color=\"primary\">\n              Ok\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </Paper>\n  );\n}\n\nexport default QueryEditorFilter;\n","import * as React from \"react\";\n// import Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n//import sampleData from \"./timeperiods.json\";\nimport { TimePeriod } from \"../WidgetEditor/types\";\n\ntype QueryEditorTimeperiodProps = {\n  period: TimePeriod;\n  possiblePeriods: TimePeriod[];\n  onTimeperiod: (item: TimePeriod) => void;\n};\n\nfunction QueryEditorTimeperiod(props: QueryEditorTimeperiodProps) {\n  const timeperiods = props.possiblePeriods;\n\n  const handleTimeperiod = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleTimeperiod \" + event.target.value);\n    const item: TimePeriod =\n      timeperiods.find((x) => x.type === event.target.value) ?? timeperiods[0];\n    console.log(\"handleSelectSerie item \" + item?.type);\n    props.onTimeperiod(item);\n  };\n\n  return (\n    <div className=\"QueryEditorTimeperiod\">\n      <TextField\n        id=\"outlined-select-timeperiod\"\n        size=\"small\"\n        select\n        label=\"Timeperiod\"\n        variant=\"outlined\"\n        onChange={handleTimeperiod}\n        value={props.period.type}\n      >\n        {props.possiblePeriods.map((period, index) => (\n          <MenuItem key={period.type} value={period.type}>\n            {period.translation}\n          </MenuItem>\n        ))}\n      </TextField>\n    </div>\n  );\n}\n\nexport default QueryEditorTimeperiod;\n","import * as React from \"react\";\n//import Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Typography from \"@material-ui/core/Typography\";\n//import TextField from '@material-ui/core/TextField';\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n// import Hidden from \"@material-ui/core/Hidden\";\n//import QueryEditorFields from './QueryEditorFields';\nimport QueryEditorSelect from \"./QueryEditorSelect\";\nimport QueryEditorFilter from \"./QueryEditorFilter\";\nimport QueryEditorTimeperiod from \"./QueryEditorTimeperiod\";\nimport {\n  EventField,\n  TimePeriod,\n  QueryFilterKey,\n  PossibleValues,\n} from \"../WidgetEditor/types\";\nimport * as Immutable from \"immutable\";\nimport { Tooltip } from \"@material-ui/core\";\n\ntype QueryEditorProps = {\n  // isHelpOn: boolean;\n  groupBy: Immutable.List<string>;\n  groupByAvailable: EventField[];\n  possibleValues: PossibleValues;\n  possiblePeriods: TimePeriod[];\n  filterItems: Immutable.List<QueryFilterKey>;\n  period: TimePeriod;\n  onAddField: (item: EventField) => void;\n  onRemoveField: (item: EventField) => void;\n  onTimeperiod: (item: TimePeriod) => void;\n  onAddFilterItem: (item: QueryFilterKey) => void;\n  onRemoveFilterItem: (item: QueryFilterKey) => void;\n};\n\nfunction QueryEditor(props: QueryEditorProps) {\n  // const filterItems: QueryFilterKey[] = [\n  //   { field: \"source.video\", op: \"equal\", value: \"Shop1\"},\n  //   { field: \"Детектор\", op: \"==\", value: \"Подсчет посетителей 1\" }\n  // ];\n\n  return (\n    <Paper variant=\"elevation\" elevation={0} title=\"Create query by selecting fields of the result dataset in 'Select' section and filter the result dataset by filters from 'Filter' section\">\n      \n      <Typography variant=\"h5\">Query</Typography>\n      \n      <Grid container spacing={2} alignItems=\"stretch\">\n        {/* <Hidden smDown>\n          <Grid item>\n            <QueryEditorFields \n              groupBy={props.groupBy} \n              groupByAvailable={props.groupByAvailable}\n              onAddField={props.onAddField} />\n          </Grid> \n        </Hidden> */}\n        <Grid item>\n          <Grid container spacing={2} direction=\"column\" alignItems=\"stretch\">\n            <Grid item>\n              <QueryEditorSelect\n                groupBy={props.groupBy}\n                groupByAvailable={props.groupByAvailable}\n                onAddField={props.onAddField}\n                onRemoveField={props.onRemoveField}\n              />\n            </Grid>\n            <Grid item>\n              <QueryEditorFilter\n                filterItems={props.filterItems}\n                possibleValues={props.possibleValues}\n                groupByAvailable={props.groupByAvailable}\n                onAddFilterItem={props.onAddFilterItem}\n                onRemoveFilterItem={props.onRemoveFilterItem}\n              />\n            </Grid>\n            <Grid item>\n              <QueryEditorTimeperiod\n                period={props.period}\n                possiblePeriods={props.possiblePeriods}\n                onTimeperiod={props.onTimeperiod}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default QueryEditor;\n","import * as React from \"react\";\nimport TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { WidgetType } from \"../WidgetEditor/types\";\nimport { Paper } from \"@material-ui/core\";\n\ntype VisualizeTypeProps = {\n  value: WidgetType;\n  onChange?: ((event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => void) | undefined;\n};\n\nfunction VisualizeType(props: VisualizeTypeProps) {\n  return (\n    <Paper variant=\"elevation\" elevation={0} title=\"Choose vizualization (widget) type\">\n      <TextField\n        id=\"outlined-select-currency\"\n        size=\"small\"\n        select\n        fullWidth\n        label=\"VisualizeType\"\n        variant=\"outlined\"\n        onChange={props.onChange}\n        value={props.value}\n      >\n        <MenuItem key=\"Events\" value=\"Events\">\n          Events\n        </MenuItem>\n        <MenuItem key=\"Table\" value=\"Table\">\n          Aggregation\n        </MenuItem>\n        <MenuItem key=\"PivotTable\" value=\"PivotTable\">\n          Pivot\n        </MenuItem>        \n        <MenuItem key=\"Chart\" value=\"Chart\">\n          Chart\n        </MenuItem>\n        <MenuItem key=\"Pie\" value=\"Pie\">\n          Pie\n        </MenuItem>\n        <MenuItem key=\"Counter\" value=\"Counter\">\n          Counter\n        </MenuItem>\n        <MenuItem key=\"Markdown\" value=\"Markdown\">\n          Markdown\n        </MenuItem>\n      </TextField>\n    </Paper>\n  );\n}\n\nexport default VisualizeType;\n","import * as React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport * as Immutable from \"immutable\";\nimport { EventField, ChartState, EventFieldOp, ChartType } from \"../WidgetEditor/types\";\nimport { FormControlLabel, Switch, Paper } from \"@material-ui/core\";\n\ntype VisualizeTypeChartProps = {\n  chart?: ChartState;\n  groupBy: Immutable.List<string>;\n  groupByAvailable: EventField[];\n  onChartChange: (chart: ChartState) => void;\n};\n\nfunction VisualizeTypeChart(props: VisualizeTypeChartProps) {\n  const valueOpHardcoded: EventFieldOp[] = [\n    \"count\",\n    \"avg\",\n    \"sum\",\n    \"min\",\n    \"max\",\n  ];\n\n  const itemByName = (name: string) => {\n    return props.groupByAvailable.find((x) => x.name === name)\n  };\n\n  const handleSelectType = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectType \" + event.target.value);\n    const newChart = { ...props.chart, type: event.target.value as ChartType };\n    props.onChartChange(newChart);\n  };\n\n  const handleBrush = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleBrush \" + event.target.value);\n    const x: boolean = event.target.checked;\n    const newChart = { ...props.chart, brush: x };\n    props.onChartChange(newChart);\n  };\n\n  const handleSelectX = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //setName(event.target.value);\n    console.log(\"handleSelectX \" + event.target.value);\n    const item = props.groupBy.map((x) => itemByName(x)).filter((x) => !!x).map((x)=> x!).find((x) => x.name === event.target.value);\n    console.log(\"handleSelectX item \" + item?.name);\n    const newValue =\n      event.target.value && event.target.value !== \"\"\n        ? event.target.value\n        : undefined;\n    const newChart = { ...props.chart, x: newValue };\n    props.onChartChange(newChart);\n  };\n\n  const handleSelectY = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectY \" + event.target.value);\n    const item = props.groupBy.map((x) => itemByName(x)).filter((x) => !!x).map((x)=> x!).find((x) => x.name === event.target.value);\n    console.log(\"handleSelectY item \" + item?.name);\n    const newValue =\n      event.target.value && event.target.value !== \"\"\n        ? event.target.value\n        : undefined;\n    const newOp = item?.descriptor.type !== \"number\" ? \"count\" : props.chart?.op;\n    const newChart = { ...props.chart, y: newValue, op: newOp };\n    props.onChartChange(newChart);\n  };\n\n  const handleSelectYOp = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectYOp \" + event.target.value);\n    const newChart = { ...props.chart, op: event.target.value as EventFieldOp };\n    props.onChartChange(newChart);\n  };\n\n  const handleSelectSerie = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectSerie \" + event.target.value);\n    const item = props.groupBy.map((x) => itemByName(x)).filter((x) => !!x).map((x)=> x!).find((x) => x.name === event.target.value);\n    console.log(\"handleSelectSerie item \" + item?.name);\n    const newValue =\n      event.target.value && event.target.value !== \"\"\n        ? event.target.value\n        : undefined;\n    const newChart = { ...props.chart, series: newValue };\n    props.onChartChange(newChart);\n  };\n\n  const availableFieldsX = props.groupBy.map((x) => itemByName(x)).filter((x) => !!x).map((x)=> x!).filter(\n    (x) => !(x.name === props.chart?.y || x.name === props.chart?.series)\n  );\n  const availableFieldsY = props.groupBy.map((x) => itemByName(x)).filter((x) => !!x).map((x)=> x!).filter(\n    (x) => !(x.name === props.chart?.x || x.name === props.chart?.series)\n  );\n  const availableFieldsS = props.groupBy.map((x) => itemByName(x)).filter((x) => !!x).map((x)=> x!).filter(\n    (x) => !(x.name === props.chart?.x || x.name === props.chart?.y)\n  );\n\n  const groupByItems = Immutable.List(props.groupBy)\n    .map((x) => itemByName(x)).filter((x) => !!x).map((x)=> x!)\n  const xType: string =\n    groupByItems\n      .filter((x) => x.name === props.chart?.x)\n      .map((x) => x.descriptor.type)\n      .first() ?? \"\";\n  const yType: string =\n    groupByItems\n      .filter((x) => x.name === props.chart?.y)\n      .map((x) => x.descriptor.type)\n      .first() ?? \"\";\n  const sType: string =\n    groupByItems\n      .filter((x) => x.name === props.chart?.series)\n      .map((x) => x.descriptor.type)\n      .first() ?? \"\";\n\n  const availableOp = yType !== \"number\" ? [\"count\"] : valueOpHardcoded;\n  const availableType: ChartType[] = [\n    \"Line\", \"Bar\", \"Area\"\n  ];\n\n  return (\n    <Paper variant=\"elevation\" elevation={0} title=\"Widget type: Chart. To build chart it is required to select which field be at axis x, which field be at axis y and how it must be aggregated, which field will form series\">\n      <Typography variant=\"h6\">Chart</Typography>\n      <Typography variant=\"subtitle2\">&nbsp;</Typography>\n      <Grid container spacing={2} direction=\"column\" alignItems=\"stretch\">\n        <Grid item>\n          <TextField\n            id=\"type-outlined-text\"\n            label=\"Type\"\n            size=\"small\"\n            select\n            fullWidth\n            value={props.chart?.type}\n            onChange={handleSelectType}\n            variant=\"outlined\"\n          >\n            {availableType.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"x-outlined-text\"\n            label={xType !== \"\" ? (\"X Field / \" + xType) : \"X Field\"}\n            size=\"small\"\n            select\n            fullWidth\n            value={props.chart?.x ?? \"\"}\n            onChange={handleSelectX}\n            variant=\"outlined\"\n          >\n            <MenuItem key=\"[no value]\" value=\"\">\n              [ No value ]\n            </MenuItem>\n            {availableFieldsX.map((item) => (\n              <MenuItem key={item.name} value={item.name}>\n                {item.translation}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"y-outlined-text\"\n            label={yType !== \"\" ? (\"Y Field / \" + yType) : \"Y Field\"}\n            size=\"small\"\n            select\n            fullWidth\n            value={props.chart?.y ?? \"\"}\n            onChange={handleSelectY}\n            variant=\"outlined\"\n          >\n            <MenuItem key=\"[no value]\" value=\"\">\n              [ No value ]\n            </MenuItem>\n            {availableFieldsY.map((item) => (\n              <MenuItem key={item.name} value={item.name}>\n                {item.translation}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"value-outlined-text\"\n            label=\"Value op\"\n            size=\"small\"\n            select\n            fullWidth\n            value={props.chart?.op}\n            onChange={handleSelectYOp}\n            variant=\"outlined\"\n          >\n            {availableOp.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"series-outlined-text\"\n            label={\n              sType !== \"\" ? (\"Series Field / \" + sType) : \"Series Field\"\n            }\n            size=\"small\"\n            select\n            fullWidth\n            value={props.chart?.series ?? \"\"}\n            onChange={handleSelectSerie}\n            variant=\"outlined\"\n          >\n            <MenuItem key=\"[no value]\" value=\"\">\n              [ No value ]\n            </MenuItem>\n            {availableFieldsS.map((item) => (\n              <MenuItem key={item.name} value={item.name}>\n                {item.translation}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={props.chart?.brush ?? false}\n                onChange={handleBrush}\n                size=\"small\"\n              />\n            }\n            label=\"Brush\"\n          />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default VisualizeTypeChart;\n","import * as React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport * as Immutable from \"immutable\";\nimport { EventField, ChartState, EventFieldOp } from \"../WidgetEditor/types\";\n\ntype VisualizeTypePieProps = {\n  chart?: ChartState;\n  groupBy: Immutable.List<string>;\n  groupByAvailable: EventField[];\n  onChartChange: (chart: ChartState) => void;\n};\n\nfunction VisualizeTypePie(props: VisualizeTypePieProps) {\n  const valueOpHardcoded: EventFieldOp[] = [\n    \"count\",\n    \"avg\",\n    \"sum\",\n    \"min\",\n    \"max\",\n  ];\n\n  const itemByName = (name: string) => {\n    return props.groupByAvailable.find((x) => x.name === name)\n  };\n\n  const handleSelectX = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //setName(event.target.value);\n    console.log(\"handleSelectX \" + event.target.value);\n    const item = props.groupBy.map((x) => itemByName(x)).filter((x) => x != null).map((x)=> x!).find((x) => x.name === event.target.value);\n    console.log(\"handleSelectX item \" + item?.name);\n    const newValue =\n      event.target.value && event.target.value !== \"\"\n        ? event.target.value\n        : undefined;\n    const newChart = { ...props.chart, x: newValue };\n    props.onChartChange(newChart);\n  };\n\n  const handleSelectY = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectY \" + event.target.value);\n    const item = props.groupBy.map((x) => itemByName(x)).filter((x) => x != null).map((x)=> x!).find((x) => x.name === event.target.value);\n    console.log(\"handleSelectY item \" + item?.name);\n    const newValue =\n      event.target.value && event.target.value !== \"\"\n        ? event.target.value\n        : undefined;\n    const newOp = item?.descriptor.type !== \"number\" ? \"count\" : props.chart?.op;\n    const newChart = { ...props.chart, y: newValue, op: newOp };\n    props.onChartChange(newChart);\n  };\n\n  const handleSelectYOp = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectYOp \" + event.target.value);\n    const newChart = { ...props.chart, op: event.target.value as EventFieldOp };\n    props.onChartChange(newChart);\n  };\n\n  const handleSelectSerie = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectSerie \" + event.target.value);\n    const item = props.groupBy.map((x) => itemByName(x)).filter((x) => x != null).map((x)=> x!).find((x) => x.name === event.target.value);\n    console.log(\"handleSelectSerie item \" + item?.name);\n    const newValue =\n      event.target.value && event.target.value !== \"\"\n        ? event.target.value\n        : undefined;\n    const newChart = { ...props.chart, series: newValue };\n    props.onChartChange(newChart);\n  };\n\n  const availableFieldsX = props.groupBy.map((x) => itemByName(x)).filter((x) => x != null).map((x)=> x!).filter(\n    (x) => !(x.name === props.chart?.y || x.name === props.chart?.series)\n  );\n  const availableFieldsY = props.groupBy.map((x) => itemByName(x)).filter((x) => x != null).map((x)=> x!).filter(\n    (x) => !(x.name === props.chart?.x || x.name === props.chart?.series)\n  );\n  const availableFieldsS = props.groupBy.map((x) => itemByName(x)).filter((x) => x != null).map((x)=> x!).filter(\n    (x) => !(x.name === props.chart?.x || x.name === props.chart?.y)\n  );\n\n  const groupByItems = Immutable.List(props.groupBy)\n    .map((x) => itemByName(x)).filter((x) => !!x).map((x)=> x!)\n  const xType: string =\n    groupByItems\n      .filter((x) => x.name === props.chart?.x)\n      .map((x) => x.descriptor.type)\n      .first() ?? \"\";\n  const yType: string =\n    groupByItems\n      .filter((x) => x.name === props.chart?.y)\n      .map((x) => x.descriptor.type)\n      .first() ?? \"\";\n  const sType: string =\n    groupByItems\n      .filter((x) => x.name === props.chart?.series)\n      .map((x) => x.descriptor.type)\n      .first() ?? \"\";\n\n  const availableOp = yType !== \"number\" ? [\"count\"] : valueOpHardcoded;\n\n  return (\n    <div title=\"VisualizeType\">\n      <Typography variant=\"h6\">Pie</Typography>\n      <Typography variant=\"subtitle2\">&nbsp;</Typography>\n      <Grid container spacing={2} direction=\"column\" alignItems=\"stretch\">\n        <Grid item>\n          <TextField\n            id=\"x-outlined-text\"\n            label={xType !== \"\" ? (\"Name Field / \" + xType) : \"Name Field\"}\n            size=\"small\"\n            select\n            fullWidth\n            value={props.chart?.x ?? \"\"}\n            onChange={handleSelectX}\n            variant=\"outlined\"\n          >\n            <MenuItem key=\"[no value]\" value=\"\">\n              [ No value ]\n            </MenuItem>\n            {availableFieldsX.map((item) => (\n              <MenuItem key={item.name} value={item.name}>\n                {item.translation}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"y-outlined-text\"\n            label={yType !== \"\" ? (\"Value Field / \" + yType) : \"Value Field\"}\n            size=\"small\"\n            select\n            fullWidth\n            value={props.chart?.y ?? \"\"}\n            onChange={handleSelectY}\n            variant=\"outlined\"\n          >\n            <MenuItem key=\"[no value]\" value=\"\">\n              [ No value ]\n            </MenuItem>\n            {availableFieldsY.map((item) => (\n              <MenuItem key={item.name} value={item.name}>\n                {item.translation}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"value-outlined-text\"\n            label=\"Value op\"\n            size=\"small\"\n            select\n            fullWidth\n            value={props.chart?.op}\n            onChange={handleSelectYOp}\n            variant=\"outlined\"\n          >\n            {availableOp.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"series-outlined-text\"\n            label={\n              sType !== \"\" ? (\"Series Field / \" + sType) : \"Series Field\"\n            }\n            size=\"small\"\n            select\n            fullWidth\n            value={props.chart?.series ?? \"\"}\n            onChange={handleSelectSerie}\n            variant=\"outlined\"\n          >\n            <MenuItem key=\"[no value]\" value=\"\">\n              [ No value ]\n            </MenuItem>\n            {availableFieldsS.map((item) => (\n              <MenuItem key={item.name} value={item.name}>\n                {item.translation}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default VisualizeTypePie;\n","import * as React from \"react\";\n// import Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Grid, MenuItem, FormControlLabel, Switch } from \"@material-ui/core\";\nimport {\n  CounterState,\n  EventField,\n  EventFieldOp,\n  QueryFilterNumberOperation,\n} from \"../WidgetEditor/types\";\nimport * as Immutable from \"immutable\";\n\ntype VisualizeTypeCounterProps = {\n  counter?: CounterState;\n  groupBy: Immutable.List<string>;\n  groupByAvailable: EventField[];\n  onCounterChange: (counter: CounterState) => void;\n};\n\nconst valueOpHardcoded: EventFieldOp[] = [\"count\", \"avg\", \"sum\", \"min\", \"max\"];\n\nclass VisualizeTypeCounter extends React.Component<VisualizeTypeCounterProps> {\n  handleSelectField = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectField \" + event.target.value);\n    const newCounter: CounterState = {\n      ...this.props.counter,\n      field: event.target.value,\n      // fieldGroupBy: this.props.counter.fieldGroupBy,\n      op: this.props.counter?.op ?? \"count\",\n    };\n    this.props.onCounterChange(newCounter);\n  };\n\n  handleSelectFieldGroupBy = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectFieldGroupBy \" + event.target.value);\n    const newCounter: CounterState = {\n      ...this.props.counter,\n      // field: this.props.counter.field,\n      fieldGroupBy: event.target.value,\n      op: this.props.counter?.op ?? \"count\",\n    };\n    this.props.onCounterChange(newCounter);\n  };\n\n  handleSelectOp = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectYOp \" + event.target.value);\n    const newCounter: CounterState = {\n      ...this.props.counter,\n      // field: this.props.counter.field,\n      // fieldGroupBy: this.props.counter.fieldGroupBy,\n      op: event.target.value as EventFieldOp,\n    };\n    this.props.onCounterChange(newCounter);\n  };\n\n  handleWithReferenceValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleWithReferenceValue \" + event.target.value);\n    const x: boolean = event.target.checked;\n    const newCounter = {\n      ...this.props.counter,\n      referenceValue: x ? 0 : undefined,\n      referenceOp: x ? this.props.counter?.referenceOp ?? \"eq\" : undefined,\n    };\n    this.props.onCounterChange(newCounter);\n  };\n  handleReferenceValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleReferenceValue \" + event.target.value);\n    const newCounter = {\n      ...this.props.counter,\n      referenceValue: Number(event.target.value),\n    };\n    this.props.onCounterChange(newCounter);\n  };\n  handleReferenceOp = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectYOp \" + event.target.value);\n    const newCounter: CounterState = {\n      ...this.props.counter,\n      // field: this.props.counter.field,\n      // fieldGroupBy: this.props.counter.fieldGroupBy,\n      referenceOp: event.target.value as QueryFilterNumberOperation,\n    };\n    this.props.onCounterChange(newCounter);\n  };\n\n  render() {\n    const itemByName = (name: string) => {\n      return this.props.groupByAvailable.find((x) => x.name === name);\n    };\n\n    const fieldType: string =\n      Immutable.List(this.props.groupBy)\n        .map((x) => itemByName(x))\n        .filter((x) => !!x)\n        .map((x) => x!)\n        .filter((x) => x.name === this.props.counter?.field)\n        .map((x) => x.descriptor.type)\n        .first() ?? \"\";\n    const availableOp = fieldType !== \"number\" ? [\"count\"] : valueOpHardcoded;\n\n    //if we use number field we need group by other field!!!\n    const needGroupByField = fieldType === \"number\";\n\n    const numberOpHardcoded: {\n      value: QueryFilterNumberOperation;\n      label: string;\n    }[] = [\n      { value: \"gt\", label: \">\" },\n      { value: \"lt\", label: \"<\" },\n      { value: \"gte\", label: \">=\" },\n      { value: \"lte\", label: \"<=\" },\n      { value: \"eq\", label: \"==\" },\n      { value: \"neq\", label: \"!=\" },\n    ];\n\n    const withReferenceValue: boolean =\n      this.props.counter?.referenceValue !== undefined;\n\n    return (\n      <div>\n        <Typography variant=\"h6\">Counter</Typography>\n        <Typography variant=\"subtitle2\">\n          Note: result must contain only 1 item. This can be achived via\n          filters.\n        </Typography>\n        <Typography variant=\"subtitle2\">&nbsp;</Typography>\n        <Grid container spacing={2} direction=\"column\" alignItems=\"stretch\">\n          <Grid item>\n            <TextField\n              id=\"value-outlined-text\"\n              label={fieldType !== \"\" ? \"Field / \" + fieldType : \"Field\"}\n              size=\"small\"\n              select\n              fullWidth\n              value={this.props.counter?.field}\n              onChange={this.handleSelectField}\n              variant=\"outlined\"\n            >\n              {this.props.groupBy\n                .map((x) => itemByName(x))\n                .filter((x) => !!x)\n                .map((x) => x!)\n                .map((item) => (\n                  <MenuItem key={item.name} value={item.name}>\n                    {item.translation}\n                  </MenuItem>\n                ))}\n            </TextField>\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"value-outlined-text\"\n              label=\"Value op\"\n              size=\"small\"\n              select\n              fullWidth\n              value={this.props.counter?.op}\n              onChange={this.handleSelectOp}\n              variant=\"outlined\"\n            >\n              {availableOp.map((option) => (\n                <MenuItem key={option} value={option}>\n                  {option}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n\n          {needGroupByField ? (\n            <Grid item>\n              <TextField\n                id=\"value-outlined-text\"\n                label=\"Group by\"\n                size=\"small\"\n                select\n                fullWidth\n                value={this.props.counter?.fieldGroupBy}\n                onChange={this.handleSelectFieldGroupBy}\n                variant=\"outlined\"\n              >\n                {this.props.groupBy\n                  .map((x) => itemByName(x))\n                  .filter((x) => !!x)\n                  .map((x) => x!)\n                  .filter(\n                    (item) =>\n                      item.descriptor.type === \"set\" ||\n                      item.descriptor.type === \"dictionary\"\n                  )\n                  .map((item) => (\n                    <MenuItem key={item.name} value={item.name}>\n                      {item.translation}\n                    </MenuItem>\n                  ))}\n              </TextField>\n            </Grid>\n          ) : null}\n          <Grid item>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={withReferenceValue}\n                  onChange={this.handleWithReferenceValue}\n                  size=\"small\"\n                />\n              }\n              label=\"Highlight if\"\n            />\n          </Grid>\n          {withReferenceValue ? (\n            <Grid item>\n              <Grid container spacing={2} direction=\"row\" alignItems=\"stretch\">\n                <Grid item xs={3} sm={3}>\n                  <Typography>Value</Typography>                  \n                </Grid>\n                <Grid item xs={3} sm={3}>\n                  <TextField\n                    id=\"op-value-textfield\"\n                    label=\"compare operation\"\n                    size=\"small\"\n                    select\n                    fullWidth\n                    value={this.props.counter?.referenceOp}\n                    onChange={this.handleReferenceOp}\n                    variant=\"outlined\"\n                  >\n                    {numberOpHardcoded.map((op, index) => {\n                      return (\n                        <MenuItem key={op.value} value={op.value}>\n                          {op.label}\n                        </MenuItem>\n                      );\n                    })}\n                  </TextField>\n                </Grid>\n                <Grid item xs={3} sm={3}>\n                  <TextField\n                    id=\"reference-outlined-number\"\n                    label=\"Reference\"\n                    size=\"small\"\n                    fullWidth\n                    value={this.props.counter?.referenceValue}\n                    onChange={this.handleReferenceValue}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          ) : null}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default VisualizeTypeCounter;\n","import * as React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\n// import { Paper } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport RootRef from \"@material-ui/core/RootRef\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport {\n  List as ListMUI,\n  ListItem,\n  ListItemText,\n  // ListItemIcon,\n  IconButton,\n  ListItemSecondaryAction,\n  List,\n  FormControlLabel,\n  Switch,\n} from \"@material-ui/core\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport * as Immutable from \"immutable\";\nimport { EventField, EventFieldOp, TableState } from \"../WidgetEditor/types\";\n\nconst reorder = (\n  list: string[],\n  startIndex: number,\n  endIndex: number\n): string[] => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\nconst sortByArray = (\n  list: Immutable.List<EventField>,\n  order: string[]\n): Immutable.List<EventField> => {\n  const res = list.sort((a: EventField, b: EventField) => {\n    const aOrder: number = order.findIndex((x) => x === a.name);\n    const bOrder: number = order.findIndex((x) => x === b.name);\n\n    if (bOrder === -1 && aOrder === -1) {\n      return a.translation < b.translation\n        ? -1\n        : a.translation > b.translation\n        ? 1\n        : 0;\n    }\n\n    if (aOrder === -1) {\n      return 1;\n    }\n\n    if (bOrder === -1) {\n      return -1;\n    }\n\n    if (aOrder < bOrder) {\n      return -1;\n    }\n    if (bOrder < aOrder) {\n      return 1;\n    }\n\n    return 0;\n  });\n  return res;\n};\n\nconst getItemStyle = (isDragging: any, draggableStyle: any) => ({\n  // styles we need to apply on draggables\n  ...draggableStyle,\n\n  ...(isDragging && {\n    background: \"rgb(235,235,235)\",\n  }),\n});\n\nconst getListStyle = (isDraggingOver: any) => ({\n  //background: isDraggingOver ? 'lightblue' : 'lightgrey',\n});\n\ntype VisualizeTypeTableProps = {\n  table?: TableState;\n  groupBy: Immutable.List<string>;\n  groupByAvailable: EventField[];\n  onTableChange: (table: TableState) => void;\n};\n\nconst valueOpHardcoded: EventFieldOp[] = [\"count\", \"avg\", \"sum\", \"min\", \"max\"];\n\nclass VisualizeTypeTable extends React.Component<VisualizeTypeTableProps> {\n  handleSelectField = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectField \" + event.target.value);\n    const newTable: TableState = {\n      ...this.props.table,\n      field: event.target.value,\n      // op: this.props.table?.op ?? \"count\",\n      // order: this.props.table?.order ?? this.props.groupBy.toArray(),\n      // visible: [],\n    };\n    this.props.onTableChange(newTable);\n  };\n\n  handleSelectOp = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectYOp \" + event.target.value);\n    const newTable: TableState = {\n      ...this.props.table,\n      // field: this.props.table.field,\n      op: event.target.value as EventFieldOp,\n      // order: this.props.table?.order ?? this.props.groupBy.toArray(),\n      // visible: [],\n    };\n    this.props.onTableChange(newTable);\n  };\n\n  handleAggregationFieldInGroupBy = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleAggregationFieldInGroupBy \" + event.target.value);\n    const x: boolean = event.target.checked;\n    const newTable: TableState = {\n      ...this.props.table,\n      isAggregationFieldInGroupBy: x\n    };\n    this.props.onTableChange(newTable);\n  };\n\n  render() {\n    const itemByName = (name: string) => {\n      return this.props.groupByAvailable.find((x) => x.name === name);\n    };\n\n    const groupByItems = Immutable.List(this.props.groupBy)\n      .map((x) => itemByName(x))\n      .filter((x) => !!x)\n      .map((x) => x!);\n\n    // const sortedGroupBy = sortByArray(\n    //   groupByItems,\n    //   this.props.table?.order ?? []\n    // );\n\n    const aggregateByField = this.props.table?.field ?? Immutable.List(this.props.groupBy).first() ?? \"\";\n\n    const aggregateByFieldType: string =\n      groupByItems\n        .filter((x) => x.name === aggregateByField)\n        .map((x) => x.descriptor.type)\n        .first() ?? \"\";\n    const availableOp = aggregateByFieldType !== \"number\" ? [\"count\"] : valueOpHardcoded;\n    const currentOpAvailable = availableOp.includes(this.props.table?.op ?? \"\");\n    const aggregateByFieldOp: EventFieldOp = currentOpAvailable  ? (this.props.table?.op ?? \"count\") : \"count\";\n\n    return (\n      <div title=\"VisualizeTypeTable\">\n        <Typography variant=\"h6\">Group by</Typography>\n        <Grid container spacing={2} direction=\"column\" alignItems=\"stretch\">\n          <Grid item>\n            <List>              \n              {groupByItems.map((item) => (\n                <ListItem\n                  dense\n                  key={item.name}\n                >              \n                  <ListItemText primary={item.translation} secondary={item.descriptor.type} />              \n                </ListItem>\n              ))}        \n            </List>\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"value-outlined-text\"\n              label={aggregateByFieldType !== \"\" ? \"Aggregate by / \" + aggregateByFieldType : \"Aggregate by\"}\n              size=\"small\"\n              select\n              fullWidth\n              value={aggregateByField}\n              onChange={this.handleSelectField}\n              variant=\"outlined\"\n            >\n              {groupByItems.map((item) => (\n                  <MenuItem key={item.name} value={item.name}>\n                    {item.translation}\n                  </MenuItem>\n                ))}\n            </TextField>\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"value-outlined-text\"\n              label=\"Aggregate op\"\n              size=\"small\"\n              select\n              fullWidth\n              value={aggregateByFieldOp}\n              onChange={this.handleSelectOp}\n              variant=\"outlined\"\n            >\n              {availableOp.map((option) => (\n                <MenuItem key={option} value={option}>\n                  {option}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Grid>\n          <Grid item>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={this.props.table?.isAggregationFieldInGroupBy ?? false}\n                onChange={this.handleAggregationFieldInGroupBy}\n                size=\"small\"\n              />\n            }\n            label=\"Include aggregation field in group by\"\n          />\n        </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default VisualizeTypeTable;\n","import * as React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport * as Immutable from \"immutable\";\nimport {\n  EventField,\n  ChartState,\n  EventFieldOp,\n  ChartType,\n  PivotTableState,\n  PossibleValues,\n  PossibleValueDictionary,\n  QueryFilterNumberOperation,\n} from \"../WidgetEditor/types\";\nimport { FormControlLabel, Switch, Checkbox } from \"@material-ui/core\";\nimport RemoveIcon from '@material-ui/icons/Remove';\n\ntype Props = {\n  pivot?: PivotTableState;\n  groupBy: Immutable.List<string>;\n  groupByAvailable: EventField[];\n  possibleValues: PossibleValues;\n  onPivotTableChange: (pivotTable: PivotTableState) => void;\n};\n\nfunction VisualizeTypePivotTable(props: Props) {\n  const valueOpHardcoded: EventFieldOp[] = [\n    \"count\",\n    \"avg\",\n    \"sum\",\n    \"min\",\n    \"max\",\n  ];\n\n  const itemByName = (name: string) => {\n    return props.groupByAvailable.find((x) => x.name === name);\n  };\n\n  const handleSelectRows = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectRows \" + event.target.value);\n    const item = props.groupBy\n      .map((x) => itemByName(x))\n      .filter((x) => !!x)\n      .map((x) => x!)\n      .find((x) => x.name === event.target.value);\n    console.log(\"handleSelectRows item \" + item?.name);\n    const newValue =\n      event.target.value && event.target.value !== \"\"\n        ? event.target.value\n        : undefined;\n    const newPivot = { ...props.pivot, rows: newValue };\n    props.onPivotTableChange(newPivot);\n  };\n  const handleSelectColumns = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectColumns \" + event.target.value);\n    const item = props.groupBy\n      .map((x) => itemByName(x))\n      .filter((x) => !!x)\n      .map((x) => x!)\n      .find((x) => x.name === event.target.value);\n    console.log(\"handleSelectColumns item \" + item?.name);\n    const newValue =\n      event.target.value && event.target.value !== \"\"\n        ? event.target.value\n        : undefined;\n    const newPivot = { ...props.pivot, columns: newValue };\n    props.onPivotTableChange(newPivot);\n  };\n\n  const handleSelectValues = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectValues \" + event.target.value);\n    const item = props.groupBy\n      .map((x) => itemByName(x))\n      .filter((x) => !!x)\n      .map((x) => x!)\n      .find((x) => x.name === event.target.value);\n    console.log(\"handleSelectValues item \" + item?.name);\n    const newValue =\n      event.target.value && event.target.value !== \"\"\n        ? event.target.value\n        : undefined;\n    const newOp =\n      item?.descriptor.type !== \"number\" ? \"count\" : props.pivot?.op;\n    const newPivot = { ...props.pivot, values: newValue, op: newOp };\n    props.onPivotTableChange(newPivot);\n  };\n\n  const handleSelectValuesOp = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectValuesOp \" + event.target.value);\n    const newPivot = { ...props.pivot, op: event.target.value as EventFieldOp };\n    props.onPivotTableChange(newPivot);\n  };\n  const handleFixed1 = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleFixed1 \" + event.target.value);\n    const x: boolean = event.target.checked;\n    const newPivot = { ...props.pivot, fixed1: x };\n    props.onPivotTableChange(newPivot);\n  };\n  const handleDeltaColumn = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleFixed1 \" + event.target.value);\n    const x: boolean = event.target.checked;\n    const newPivot = { ...props.pivot, delta: x };\n    props.onPivotTableChange(newPivot);\n  };\n  const handleDeltaColumnTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleDeltaColumnTitle \" + event.target.value);\n    const newPivot = { ...props.pivot, deltaTitle: event.target.value };\n    props.onPivotTableChange(newPivot);\n  };\n  const handleDeltaColumnOnly = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleFixed1 \" + event.target.value);\n    const x: boolean = event.target.checked;\n    const newPivot = { ...props.pivot, deltaOnly: x };\n    props.onPivotTableChange(newPivot);\n  };\n  \n  const handleSelectDeltaA = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectDeltaA \" + event.target.value);\n    const newValue =\n      event.target.value && event.target.value !== \"\"\n        ? event.target.value\n        : undefined;\n    const newPivot = { ...props.pivot, deltaA: newValue };\n    props.onPivotTableChange(newPivot);\n  };\n  const handleSelectDeltaB = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleSelectDeltaB \" + event.target.value);\n    const newValue =\n      event.target.value && event.target.value !== \"\"\n        ? event.target.value\n        : undefined;\n    const newPivot = { ...props.pivot, deltaB: newValue };\n    props.onPivotTableChange(newPivot);\n  };\n  const handleWithReferenceValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleWithReferenceValue \" + event.target.value);\n    const x: boolean = event.target.checked;\n    const newPivot = {\n      ...props.pivot,\n      referenceValue: x ? 0 : undefined,\n      referenceOp: x ? props.pivot?.referenceOp ?? \"eq\" : undefined,\n    };\n    props.onPivotTableChange(newPivot);\n  };\n  const handleReferenceColumn = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleReferenceColumn \" + event.target.value);\n    const newPivot = {\n      ...props.pivot,\n      referenceColumn: event.target.value,\n    };\n    props.onPivotTableChange(newPivot);\n  };\n  const handleReferenceValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleReferenceValue \" + event.target.value);\n    const newPivot = {\n      ...props.pivot,\n      referenceValue: Number(event.target.value),\n    };\n    props.onPivotTableChange(newPivot);\n  };\n  const handleReferenceOp = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleReferenceOp \" + event.target.value);\n    const newPivot: PivotTableState = {\n      ...props.pivot,\n      // field: this.props.counter.field,\n      // fieldGroupBy: this.props.counter.fieldGroupBy,\n      referenceOp: event.target.value as QueryFilterNumberOperation,\n    };\n    props.onPivotTableChange(newPivot);\n  };\n\n  const availableFieldsRows = props.groupBy\n    .map((x) => itemByName(x))\n    .filter((x) => !!x)\n    .map((x) => x!)\n    .filter(\n      (x) =>\n        !(x.name === props.pivot?.values || x.name === props.pivot?.columns)\n    );\n  const availableFieldsColumns = props.groupBy\n    .map((x) => itemByName(x))\n    .filter((x) => !!x)\n    .map((x) => x!)\n    .filter(\n      (x) => !(x.name === props.pivot?.rows || x.name === props.pivot?.values)\n    );\n  const availableFieldsValues = props.groupBy\n    .map((x) => itemByName(x))\n    .filter((x) => !!x)\n    .map((x) => x!)\n    .filter(\n      (x) => !(x.name === props.pivot?.rows || x.name === props.pivot?.columns)\n    );\n\n  const groupByItems = Immutable.List(props.groupBy)\n    .map((x) => itemByName(x))\n    .filter((x) => !!x)\n    .map((x) => x!);\n  const rowsType: string =\n    groupByItems\n      .filter((x) => x.name === props.pivot?.rows)\n      .map((x) => x.descriptor.type)\n      .first() ?? \"\";\n  const columnsType: string =\n    groupByItems\n      .filter((x) => x.name === props.pivot?.columns)\n      .map((x) => x.descriptor.type)\n      .first() ?? \"\";\n  const valuesType: string =\n    groupByItems\n      .filter((x) => x.name === props.pivot?.values)\n      .map((x) => x.descriptor.type)\n      .first() ?? \"\";\n  \n\n  const availableOp = valuesType !== \"number\" ? [\"count\"] : valueOpHardcoded;\n\n  //for delta column we need all possible column names (from possibleValues)  \n  const columnsFieldName: string = props.pivot?.columns ?? \"\";\n  const columnsFieldType: string = columnsType;\n  var columnsValues: PossibleValueDictionary[] = [];\n  if (columnsFieldType === \"set\") {\n    columnsValues =\n      props.possibleValues.set.get(columnsFieldName)?.map((xx) => {\n        return {\n          key: xx,\n          value: xx,\n        };\n      }) || [];\n  } else if (columnsFieldType === \"dictionary\") {\n    columnsValues =\n      props.possibleValues.dictionary.get(columnsFieldName) || [];\n    columnsValues = columnsValues.map((xx) => {\n      return {\n        key: xx.key,\n        value: xx.value && xx.value !== \"\" ? xx.value : xx.key,\n      };\n    });\n  }\n\n  console.log(\"columnsValues = \" + JSON.stringify(columnsValues));\n  const availableDeltaA = columnsValues; //.filter((c) => c.key !== props.pivot?.deltaB);\n  const availableDeltaB = columnsValues; //.filter((c) => c.key !== props.pivot?.deltaA);\n  const anyColumn = {\n    key: \"*\",\n    value: \"*\",\n  };\n  const availableReference = [anyColumn].concat(columnsValues);\n\n  const numberOpHardcoded: {\n    value: QueryFilterNumberOperation;\n    label: string;\n  }[] = [\n    { value: \"gt\", label: \">\" },\n    { value: \"lt\", label: \"<\" },\n    { value: \"gte\", label: \">=\" },\n    { value: \"lte\", label: \"<=\" },\n    { value: \"eq\", label: \"==\" },\n    { value: \"neq\", label: \"!=\" },\n  ];\n\n  const withReferenceValue: boolean = props.pivot?.referenceValue !== undefined;\n\n  return (\n    <div title=\"VisualizeTypePivotTable\">\n      <Typography variant=\"h6\">Pivot table</Typography>\n      <Typography variant=\"subtitle2\">&nbsp;</Typography>\n      <Grid container spacing={2} direction=\"column\" alignItems=\"stretch\">\n        <Grid item>\n          <TextField\n            id=\"rows-outlined-text\"\n            label={rowsType !== \"\" ? \"Rows Field / \" + rowsType : \"Rows Field\"}\n            size=\"small\"\n            select\n            fullWidth\n            value={props.pivot?.rows ?? \"\"}\n            onChange={handleSelectRows}\n            variant=\"outlined\"\n          >\n            <MenuItem key=\"[no value]\" value=\"\">\n              [ No value ]\n            </MenuItem>\n            {availableFieldsRows.map((item) => (\n              <MenuItem key={item.name} value={item.name}>\n                {item.translation}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"columns-outlined-text\"\n            label={\n              columnsType !== \"\"\n                ? \"Columns Field / \" + columnsType\n                : \"Columns Field\"\n            }\n            size=\"small\"\n            select\n            fullWidth\n            value={props.pivot?.columns ?? \"\"}\n            onChange={handleSelectColumns}\n            variant=\"outlined\"\n          >\n            <MenuItem key=\"[no value]\" value=\"\">\n              [ No value ]\n            </MenuItem>\n            {availableFieldsColumns.map((item) => (\n              <MenuItem key={item.name} value={item.name}>\n                {item.translation}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"values-outlined-text\"\n            label={valuesType !== \"\" ? \"Values Field / \" + valuesType : \"Values Field\"}\n            size=\"small\"\n            select\n            fullWidth\n            value={props.pivot?.values ?? \"\"}\n            onChange={handleSelectValues}\n            variant=\"outlined\"\n          >\n            <MenuItem key=\"[no value]\" value=\"\">\n              [ No value ]\n            </MenuItem>\n            {availableFieldsValues.map((item) => (\n              <MenuItem key={item.name} value={item.name}>\n                {item.translation}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            id=\"values-op-outlined-text\"\n            label=\"Value op\"\n            size=\"small\"\n            select\n            fullWidth\n            value={props.pivot?.op}\n            onChange={handleSelectValuesOp}\n            variant=\"outlined\"\n          >\n            {availableOp.map((option) => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n        </Grid>\n        <Grid item>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={props.pivot?.fixed1 ?? false}\n                onChange={handleFixed1}\n                size=\"small\"\n              />\n            }\n            label=\"Fixed 1 column\"\n          />\n        </Grid>\n        <Grid item>\n          <Grid container spacing={2} direction=\"row\" alignItems=\"center\" justify=\"flex-start\">\n            <Grid item xs={3} sm={3}>\n              <FormControlLabel\n                control={\n                  <Switch\n                    checked={props.pivot?.delta ?? false}\n                    onChange={handleDeltaColumn}\n                    size=\"small\"\n                  />\n                }\n                label=\"Delta column\"\n              />\n            </Grid>\n            {(props.pivot?.delta ?? false) ? (\n            <Grid item>\n              <TextField\n                id=\"delta-title-outlined-text\"\n                label=\"Title\"\n                size=\"small\"\n                fullWidth\n                defaultValue=\"Δ\"\n                value={props.pivot?.deltaTitle}\n                onChange={handleDeltaColumnTitle}\n                variant=\"outlined\" />\n            </Grid>\n            ) : null }\n            {(props.pivot?.delta ?? false) ? (\n            <Grid item>\n              {/* <FormControlLabel\n                control={\n                  <Switch\n                    checked={props.pivot?.deltaOnly ?? false}\n                    onChange={handleDeltaColumnOnly}\n                    size=\"small\"\n                  />\n                }\n                label=\"Hide others\"\n              /> */}\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={props.pivot?.deltaOnly ?? false}\n                    onChange={handleDeltaColumnOnly}\n                    name=\"deltaOnly\"\n                  />\n                }\n                label=\"Hide others\"\n              />\n            </Grid>\n            ) : null }\n          </Grid>\n        </Grid>\n        {(props.pivot?.delta ?? false) ? (\n        <Grid item>\n            <Grid container spacing={2} direction=\"row\" alignItems=\"center\" justify=\"flex-start\">\n              <Grid item xs={3} sm={3}>\n                <TextField\n                  id=\"values-op-outlined-text\"\n                  label=\"A\"\n                  size=\"small\"\n                  select\n                  fullWidth\n                  value={props.pivot?.deltaA}\n                  onChange={handleSelectDeltaA}\n                  variant=\"outlined\"\n                >\n                  {availableDeltaA.map((option) => (\n                    <MenuItem key={option.key} value={option.value}>\n                      {option.value}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n              <Grid item justify=\"center\" alignItems=\"center\">\n                <RemoveIcon/>\n              </Grid>\n              <Grid item xs={3} sm={3}>\n                <TextField\n                  id=\"values-op-outlined-text\"\n                  label=\"B\"\n                  size=\"small\"\n                  select\n                  fullWidth\n                  value={props.pivot?.deltaB}\n                  onChange={handleSelectDeltaB}\n                  variant=\"outlined\"\n                >\n                  {availableDeltaB.map((option) => (\n                    <MenuItem key={option.key} value={option.value}>\n                      {option.value}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n        </Grid>\n        ) : null }\n        \n        <Grid item>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={withReferenceValue}\n                  onChange={handleWithReferenceValue}\n                  size=\"small\"\n                />\n              }\n              label=\"Highlight row if\"\n            />\n          </Grid>\n          {withReferenceValue ? (\n            <Grid item>              \n              <Grid container spacing={2} direction=\"row\" alignItems=\"stretch\">\n                <Grid item xs={3} sm={3}>\n                  <TextField\n                    id=\"reference-outlined-column\"\n                    label=\"Column\"\n                    size=\"small\"\n                    select\n                    fullWidth\n                    value={props.pivot?.referenceColumn ?? \"*\"}\n                    onChange={handleReferenceColumn}                    \n                    variant=\"outlined\"\n                  >\n                    {availableReference.map((option) => (\n                      <MenuItem key={option.key} value={option.value}>\n                        {option.value}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item xs={3} sm={3}>\n                  <TextField\n                    id=\"op-value-textfield\"\n                    label=\"compare operation\"\n                    size=\"small\"\n                    select\n                    fullWidth\n                    value={props.pivot?.referenceOp}\n                    onChange={handleReferenceOp}\n                    variant=\"outlined\"\n                  >\n                    {numberOpHardcoded.map((op, index) => {\n                      return (\n                        <MenuItem key={op.value} value={op.value}>\n                          {op.label}\n                        </MenuItem>\n                      );\n                    })}\n                  </TextField>\n                </Grid>\n                <Grid item xs={3} sm={3}>\n                  <TextField\n                    id=\"reference-outlined-number\"\n                    label=\"Reference\"\n                    size=\"small\"\n                    fullWidth\n                    value={props.pivot?.referenceValue}\n                    onChange={handleReferenceValue}\n                    type=\"number\"\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n            </Grid>\n          ) : null}\n      </Grid>\n    </div>\n  );\n}\n\nexport default VisualizeTypePivotTable;\n","import * as React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nclass VisualizeTypeEvents extends React.Component {\n\n  render() {\n    \n    return (\n      <div title=\"VisualizeTypeTable\">\n        <Typography variant=\"h6\">Events support is ugly on server. Can't select fields. Response with strange names not found in field list. To be fixed in future.</Typography>\n        <Typography variant=\"subtitle2\">&nbsp;</Typography>\n        <Typography variant=\"subtitle2\">TODO: add limit option</Typography>        \n      </div>\n    );\n  }\n}\n\nexport default VisualizeTypeEvents;\n","import * as React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport * as Immutable from \"immutable\";\nimport {\n  EventField,\n  ChartState,\n  EventFieldOp,\n  ChartType,\n  PivotTableState,\n} from \"../WidgetEditor/types\";\nimport { FormControlLabel, Switch } from \"@material-ui/core\";\n\ntype Props = {\n  bottom?: boolean;\n  onMarkdownBottomChange: (bottom: boolean) => void;\n};\n\nfunction VisualizeTypeMarkdown(props: Props) {\n  const handleMarkdownBottomChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(\"handleMarkdownBottomChange \" + event.target.value);\n    const x: boolean = event.target.checked;\n    props.onMarkdownBottomChange(x);\n  };\n\n  return (\n    <div title=\"VisualizeTypePivotTable\">\n      <Typography variant=\"h6\">Markdown</Typography>\n      <Typography variant=\"subtitle2\">&nbsp;</Typography>\n      <Grid container spacing={2} direction=\"column\" alignItems=\"stretch\">\n        <Grid item>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={props.bottom ?? false}\n                onChange={handleMarkdownBottomChange}\n                size=\"small\"\n              />\n            }\n            label=\"at bottom\"\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default VisualizeTypeMarkdown;\n","import * as React from \"react\";\n// import Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Typography from \"@material-ui/core/Typography\";\n// import TextField from \"@material-ui/core/TextField\";\nimport VisualizeType from \"./VisualizeType\";\nimport VisualizeTypeChart from \"./VisualizeTypeChart\";\nimport VisualizeTypePie from \"./VisualizeTypePie\";\nimport VisualizeTypeCounter from \"./VisualizeTypeCounter\";\nimport VisualizeTypeTable from \"./VisualizeTypeTable\";\nimport VisualizeTypePivotTable from \"./VisualizeTypePivotTable\";\nimport VisualizeTypeEvents from \"./VisualizeTypeEvents\";\nimport VisualizeTypeMarkdown from \"./VisualizeTypeMarkdown\";\nimport { Paper } from \"@material-ui/core\";\nimport * as Immutable from \"immutable\";\nimport { EventField, ChartState, TableState, PivotTableState, CounterState, WidgetType, PossibleValues } from \"../WidgetEditor/types\";\n\ntype VisualizeEditorProps = {\n  // using `interface` is also ok\n  //message: string;\n  visualizeType: WidgetType; // like this\n  chart?: ChartState;\n  table?: TableState;\n  pivot?: PivotTableState;\n  bottom?: boolean;\n  counter?: CounterState;\n  groupBy: Immutable.List<string>;\n  groupByAvailable: EventField[];\n  possibleValues: PossibleValues;\n  onChange: (event: any) => void;\n  onChartChange: (chart: ChartState) => void;\n  onTableChange: (table: TableState) => void;\n  onPivotTableChange: (pivot: PivotTableState) => void;\n  onCounterChange: (counter: CounterState) => void;\n  onMarkdownBottomChange: (bottom: boolean) => void;\n};\n\nclass VisualizeEditor extends React.Component<VisualizeEditorProps> {\n  // state: MyState = {\n  //   // optional second annotation for better type inference\n  //   visualizeType: \"Chart\",\n  // };\n\n  // handleChange = (event: any) => {\n  //   console.log(event.target.value);\n  //   this.setState({ visualizeType: event.target.value})\n  // };\n\n  render() {\n    return (\n      <Paper variant=\"elevation\" elevation={0} title=\"Choose the way in which the result dataset or some static information will be presented\">\n        <Typography variant=\"h5\">Visualize</Typography>\n        <Typography variant=\"subtitle2\">&nbsp;</Typography>\n        <VisualizeType\n          value={this.props.visualizeType}\n          onChange={this.props.onChange}\n        />\n        <Typography variant=\"subtitle2\">&nbsp;</Typography>\n        {this.props.visualizeType === \"Chart\" ? (\n          <VisualizeTypeChart\n            chart={this.props.chart}\n            groupBy={this.props.groupBy}\n            groupByAvailable={this.props.groupByAvailable}\n            onChartChange={this.props.onChartChange}\n          />\n        ) : null}\n        {this.props.visualizeType === \"Pie\" ? (\n          <VisualizeTypePie\n            chart={this.props.chart}\n            groupBy={this.props.groupBy}\n            groupByAvailable={this.props.groupByAvailable}\n            onChartChange={this.props.onChartChange}\n          />\n        ) : null}\n        {this.props.visualizeType === \"Counter\" ? (\n          <VisualizeTypeCounter \n            counter={this.props.counter}\n            groupBy={this.props.groupBy}\n            groupByAvailable={this.props.groupByAvailable}\n            onCounterChange={this.props.onCounterChange}\n          />\n        ) : null}\n        {this.props.visualizeType === \"Table\" ? (\n          <VisualizeTypeTable\n            table={this.props.table}\n            groupBy={this.props.groupBy}\n            groupByAvailable={this.props.groupByAvailable}\n            onTableChange={this.props.onTableChange}\n          />\n        ) : null}\n        {this.props.visualizeType === \"PivotTable\" ? (\n          <VisualizeTypePivotTable\n            pivot={this.props.pivot}\n            groupBy={this.props.groupBy}\n            groupByAvailable={this.props.groupByAvailable}\n            possibleValues={this.props.possibleValues}\n            onPivotTableChange={this.props.onPivotTableChange}\n          />\n        ) : null}\n        {this.props.visualizeType === \"Events\" ? (\n          <VisualizeTypeEvents />\n        ) : null}\n        {this.props.visualizeType === \"Markdown\" ? (\n          <VisualizeTypeMarkdown \n            bottom={this.props.bottom}\n            onMarkdownBottomChange={this.props.onMarkdownBottomChange}\n          />\n        ) : null}\n        <Typography variant=\"subtitle2\">&nbsp;</Typography>\n      </Paper>\n    );\n  }\n}\n\nexport default VisualizeEditor;\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { v4 as uuidv4 } from 'uuid';\nimport Typography from \"@material-ui/core/Typography\";\nimport { Card, CardContent, IconButton, CardHeader, Dialog, AppBar, Toolbar, List, Button, DialogTitle, DialogContent, CardActions } from \"@material-ui/core\";\n// import MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport {\n  LineChart,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  Line,\n  Legend,\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  AreaChart,\n  Area,\n  Brush,\n} from \"recharts\";\nimport {\n  ChartState,\n  QueryFilterKey,\n  TimePeriod,\n  PossibleValues,\n  EventField,\n  PossibleValueDictionary,\n} from \"../WidgetEditor/types\";\nimport * as Immutable from \"immutable\";\nimport FileSaver from \"file-saver\";\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\nimport { join } from \"path\";\n\n//TODO: вот сюда зашиваются нужные шрифты!\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\ntype WidgetPreviewChartProps = {\n  isEditMode: boolean;\n  api: string;\n  token: string;\n  refreshTime?: Date;\n\n  id: string;\n  title?: string;\n  description?: string;\n  chartState: ChartState;\n  filterItems: Immutable.List<QueryFilterKey>;\n  period: TimePeriod;\n  possibleValues: PossibleValues;\n  groupByAvailable: EventField[];\n\n  onEditWidget?: ((id: string) => void) | undefined;\n  onDeleteWidget?: ((id: string) => void) | undefined;\n};\n\ntype WidgetPreviewChartState = {\n  rows?: any;\n  err?: string;\n  openFullscreen: boolean;\n};\n\nclass WidgetPreviewChart extends React.Component<\n  WidgetPreviewChartProps,\n  WidgetPreviewChartState\n> {\n  state: WidgetPreviewChartState = {\n    rows: undefined,\n    err: undefined,\n    openFullscreen: false\n  };\n\n  lineChart: LineChart | null = null;\n  barChart: BarChart | null = null;\n  areaChart: AreaChart | null = null;\n\n  handleFullscreenOpen = () => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        openFullscreen: true\n      };\n    });\n  };\n\n  handleFullscreenClose = () => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        openFullscreen: false\n      };\n    });\n  };\n\n  handleEdit = () => {\n    console.log(\"handleEdit \" + this.props.id);\n    if (this.props.onEditWidget) {\n      this.props.onEditWidget(this.props.id);\n    }    \n  };\n  handleDelete = () => {\n    console.log(\"handleDelete \" + this.props.id);\n    if (this.props.onDeleteWidget) {\n      this.props.onDeleteWidget(this.props.id);\n    }    \n  };\n\n  stringToColour = (str: string) => {\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    var colour = \"#\";\n    for (var ii = 0; ii < 3; ii++) {\n      var value = (hash >> (ii * 8)) & 0xff;\n      colour += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return colour;\n  };\n\n  download = () => {\n    var download = document.getElementById(\"download\")!;\n    let myCanvas: HTMLCanvasElement = document.getElementById('myCanvas') as HTMLCanvasElement;\n    var image = myCanvas.toDataURL(\"image/png\")\n        .replace(\"image/png\", \"image/octet-stream\");\n    download.setAttribute(\"href\", image);\n    //download.setAttribute(\"download\",\"archive.png\");\n  }\n\n  // Exports the graph as embedded JS or PNG\n  exportChart = (asSVG: boolean) => {\n    const chart = this.lineChart ?? this.barChart ?? this.areaChart;\n    if (chart) {\n      // A Recharts component is rendered as a div that contains namely an SVG\n      // which holds the chart. We can access this SVG by calling upon the first child/\n      let chartSVG = (ReactDOM.findDOMNode(chart!) as Element).children[0];\n\n      if (asSVG) {\n          let svgURL = new XMLSerializer().serializeToString(chartSVG);\n          let svgBlob = new Blob([svgURL], {type: \"image/svg+xml;charset=utf-8\"});\n          //FileSaver.saveAs(svgBlob, this.props.title + \".svg\");\n          // console.log(chartSVG);\n          // console.log(svgURL);\n          // console.log(svgBlob);\n          //если есть анимация то валится рендеринг в pdf\n          //REPLACE stroke-dasharray=\"660.372314453125px 0px\" \n          //WITH    stroke-dasharray=\"660.372314453125px 1px\" \n          //при отключенной анимации всё норм.\n\n          let width = chartSVG.getAttribute('width') ?? \"1920\";\n          let height = chartSVG.getAttribute('height') ?? \"1080\";\n          \n          var docDefinition: any = {\n            //header: ,\n            footer: function(currentPage: any, pageCount: any) { \n              return { text: 'Created at ' + (new Date()), alignment: 'center' }\n            },\n            content: [\n              this.props.title,              \n              '\\n',\n              this.props.description,\n              '\\n',\n              'something more can be added',\n              {\n                svg: svgURL,\n                width: 500,//Number(width),\n                //height: Number(height)\n              },\n              \n            ],\n          };\n      \n          pdfMake.createPdf(docDefinition).download(this.props.title + \".pdf\");\n\n      } else {\n          let svgBlob = new Blob([chartSVG.outerHTML], {type: \"text/html;charset=utf-8\"});\n          FileSaver.saveAs(svgBlob, this.props.title + \".html\");\n      }\n\n      \n    }\n  };\n\n  svgToPng = (svg: any, width: number, height: number) => {\n    return new Promise((resolve, reject) => {\n\n      let canvas: HTMLCanvasElement = document.createElement('canvas');\n      canvas.width = width;\n      canvas.height = height;\n      let ctx: CanvasRenderingContext2D = canvas.getContext('2d')!;\n\n      // Set background to white\n      ctx.fillStyle = '#ffffff';\n      ctx.fillRect(0, 0, width, height);\n\n      let xml = new XMLSerializer().serializeToString(svg);\n      let dataUrl = 'data:image/svg+xml;utf8,' + encodeURIComponent(xml);\n      let img = new Image(width, height);\n\n      img.onload = () => {\n        ctx.drawImage(img, 0, 0);\n        let imageData = canvas.toDataURL('image/png', 1.0);\n\n        resolve(imageData)\n      }\n\n      img.onerror = () => reject();\n\n      img.src = dataUrl;\n    });\n  };\n\n  handleDownloadSvg = () => {\n    const chart = this.lineChart ?? this.barChart ?? this.areaChart;\n    if (chart) {\n      // A Recharts component is rendered as a div that contains namely an SVG\n      // which holds the chart. We can access this SVG by calling upon the first child/\n      let chartSVG = (ReactDOM.findDOMNode(chart!) as Element).children[0];\n      let svgURL = new XMLSerializer().serializeToString(chartSVG);\n      let svgBlob = new Blob([svgURL], {type: \"image/svg+xml;charset=utf-8\"});\n      FileSaver.saveAs(svgBlob, this.props.title + \".svg\");\n    }\n  }\n\n  handleDownloadPng = async () => {\n    const chart = this.lineChart ?? this.barChart ?? this.areaChart\n    if (chart) {\n      let chartSVG = (ReactDOM.findDOMNode(chart!) as Element).children[0];\n\n      let width = chartSVG.getAttribute('width') ?? \"1920\";\n      let height = chartSVG.getAttribute('height') ?? \"1080\";\n      \n      const pngData: any = await this.svgToPng(chartSVG, Number(width), Number(height));\n      //document.write('<img src=\"'+pngData+'\"/>') // <------\n      var image = pngData.replace(\"image/png\", \"image/octet-stream\");\n      let pngBlob = new Blob([pngData], {type: \"image/png\"});\n      //FileSaver.saveAs(pngBlob, this.props.title + \".png\");\n\n      // var download = document.getElementById(\"pngdownload\")!;\n      // //let myCanvas: HTMLCanvasElement = document.getElementById('myCanvas') as HTMLCanvasElement;\n      // //var image = myCanvas.toDataURL(\"image/png\")\n      // //    .replace(\"image/png\", \"image/octet-stream\");\n      // download.setAttribute(\"href\", image);\n\n      var a = document.createElement(\"a\"); //Create <a>\n      a.href = pngData;//\"data:image/png;base64,\" + ImageBase64; //Image Base64 Goes here\n      a.download = this.props.title + \".png\"; //File name Here\n      a.click(); //Downloaded file\n    }\n  }\n\n  handleDownloadPdf = () => {\n    this.exportChart(true);\n  }\n\n  handleDownload = () => {\n    this.exportChart(true);\n\n    return;\n\n    // var docDefinition: any = {\n    //   content: [\n    //     'SVG nodes behave similar to images by supporting width/height or fit',\n    //     'It is however not yet possible to use svg files or to have a library of svgs in the document definition',\n    //     '\\n',\n    //     'Note that before you can use SVG nodes you must install svg-to-pdfkit as it is not included with pdfmake to keep bundle size down',\n    //     {\n    //       svg: highchartSvg,\n    //       width: 600,\n    //       height: 400\n    //     },\n    //     'If you specify width, svg will scale proportionally',\n    //     {\n    //       svg: highchartSvg,\n    //       width: 200\n    //     },\n    //     'You can also fit the svg inside a rectangle',\n    //     {\n    //       svg: highchartSvg,\n    //       fit: [100, 100],\n    //     },\n    //   ],\n    // };\n\n    // var pdf = new PdfPrinter({\n    //   // Roboto: {\n    //   //   normal: join(__dirname, \"../../fonts\", \"Roboto-Regular.ttf\"),\n    //   //   bold: join(__dirname, \"../../fonts\", \"Roboto-Bold.ttf\"),\n    //   //   italics: join(__dirname, \"../../fonts\", \"Roboto-Regular.ttf\"),\n    //   //   bolditalics: join(__dirname, \"../../fonts\", \"Roboto-Regular.ttf\"),\n    //   // },\n    // });\n\n    //pdfMake.createPdf(docDefinition).download()\n\n    // var doc = pdf.createPdfKitDocument(docDefinition);\n\n    // const chunks: any = []\n\n    // doc.on('data', (chunk) => {\n    //   chunks.push(chunk)\n    // })\n    // doc.on('end', () => {\n    //   const result = Buffer.concat(chunks)\n    //   //callback('data:application/pdf;base64,' + result.toString('base64'))\n    //   let blob = new Blob([result.toString('base64')], {type: \"application/pdf;base64\"});\n    //   FileSaver.saveAs(blob, this.props.title + \".pdf\");\n    // })\n    // doc.end()\n    \n    // doc.pipe(res);\n    // doc.end();\n\n    // let svgBlob = new Blob([chartSVG.outerHTML], {type: \"text/html;charset=utf-8\"});\n    // FileSaver.saveAs(svgBlob, this.props.title + \".html\");\n  };\n\n  handleDownload1 = async () => {\n    const chart = this.lineChart ?? this.barChart ?? this.areaChart\n    if (chart) {\n      let chartSVG = (ReactDOM.findDOMNode(chart!) as Element).children[0];\n\n      const pngData: any = await this.svgToPng(chartSVG, 900, 500)\n      //document.write('<img src=\"'+pngData+'\"/>') // <------\n      var image = pngData.replace(\"image/png\", \"image/octet-stream\");\n      var download = document.getElementById(\"download\")!;\n      download.setAttribute(\"href\", image);\n    }\n  }\n\n  handleDownload111 = async () => {\n    const chart = this.lineChart ?? this.barChart ?? this.areaChart\n    if (chart) {\n      let chartSVG = (ReactDOM.findDOMNode(chart!) as Element).children[0];\n\n      const pngData: any = await this.svgToPng(chartSVG, 546, 300)\n      //document.write('<img src=\"'+pngData+'\"/>') // <------\n      //var image = pngData.replace(\"image/png\", \"image/octet-stream\");\n      //var download = document.getElementById(\"download\")!;\n      //download.setAttribute(\"href\", image);\n\n      var docDefinition: any = {\n        content: [\n          'SVG nodes behave similar to images by supporting width/height or fit',\n          'It is however not yet possible to use svg files or to have a library of svgs in the document definition',\n          '\\n',\n          'Note that before you can use SVG nodes you must install svg-to-pdfkit as it is not included with pdfmake to keep bundle size down',\n          {\n            image: pngData,\n            width: 546,\n            height: 300\n          },\n          \n        ],\n      };\n  \n      pdfMake.createPdf(docDefinition).download(\"chart.pdf\");\n    }\n  }\n\n  loadData = () => {\n    console.log(\"WidgetPreviewChart loadData\");\n    this.setState({ rows: undefined, err: undefined });\n    //Simple POST request with a JSON body using fetch\n    const url1 = this.props.api + \"/api/v2/ad-query/aggregation/table\";\n\n    const { x, y, op, series } = this.props.chartState;\n\n    const d = {\n      filter: {\n        keys: this.props.filterItems\n          .filter((xx) => xx.type === \"set\" || xx.type === \"dictionary\")\n          .map((xx) => {\n            return {\n              field: xx.field,\n              op: xx.op,\n              value: xx.value,\n            };\n          }),\n        numbers: this.props.filterItems\n          .filter((xx) => xx.type === \"number\")\n          .map((xx) => {\n            return {\n              field: xx.field,\n              op: xx.op,\n              value: Number.parseFloat(xx.value),\n            };\n          }),\n        lists: [],\n        period: this.props.period,\n      },\n      groupBy: [x, y, series],\n      fields: [\n        {\n          field: y,\n          op: op,\n        },\n      ],\n    };\n    const requestOptions: RequestInit = {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.props.token,\n      },\n      body: JSON.stringify(d),\n    };\n    fetch(url1, requestOptions)\n      //.then(r => r.json().then(json => ({ok: r.ok, status: r.status, json})))\n      //.then( r => r.ok ? r.json: Promise.reject(r))\n      .then((response) => response.json())\n      .then((data) => {\n        //this.props.onChangeEventFields(data);\n        if (data.result == null) {\n          throw Error(\"no rows in result\" + JSON.stringify(data));\n        } else {\n          const r = data.result;\n          // .map((item: any)=>{\n          //   return item;\n          // });\n          console.log(\"WidgetPreviewLineChart r=\" + JSON.stringify(r));\n          this.setState({ rows: r });\n        }\n        console.log(\"WidgetPreviewLineChart data=\" + JSON.stringify(data));\n      })\n      .catch((e) => {\n        this.setState({ err: e.message });\n      });\n  };\n  \n  handleClick = (data: any, index: number) => {\n    // this.setState({\n    //   activeIndex: index,\n    // });\n    if(data) {\n      console.log(\"onClick \" + this.props.title + \" index=\" + index + \" data[index]=\" + JSON.stringify(data.payload));\n    }\n  }\n\n  handleClickLine = (data: any, index: any) => {\n    // this.setState({\n    //   activeIndex: index,\n    // });\n    if(data) {\n      console.log(\"onClick \" + this.props.title + \" activeLabel=\" + data.activeLabel);\n    }\n  }\n\n  componentDidMount() {\n    console.log(\n      \"WidgetPreviewChart componentDidMount \" +\n        JSON.stringify(this.props.chartState)\n    );\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps: WidgetPreviewChartProps) {\n    console.log(\n      \"WidgetPreviewChart componentDidUpdate \" +\n        JSON.stringify(this.props.chartState)\n    );\n    if (JSON.stringify(this.props) !== JSON.stringify(prevProps)) {\n      // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\n      this.loadData();\n    }\n  }\n\n  render() {\n    if (this.state.err) {\n      return (\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>Error: {this.state.err}</Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    if (!this.props.chartState) {\n      return (\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>Error: no chartState</Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    const { type, x, y, op, series } = this.props.chartState!;\n\n    if (!type) {\n      return (\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>Error: no type</Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    if (!x || !y || !op || !series) {\n      return (\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>\n              Error: chartState content {JSON.stringify(this.props.chartState!)}\n            </Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    if (!this.state.rows) {\n      return (\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>Error: no rows</Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    const data = this.state.rows!;\n\n    const seriesField = this.props.groupByAvailable.filter(\n      (xx) => xx.name === this.props.chartState.series\n    );\n    const seriesFieldName: string = this.props.chartState!.series!;\n    const seriesFieldType: string = seriesField[0].descriptor.type;\n    // const seriesValues: PossibleValueDictionary[] = seriesFieldType == \"dictionary\"\n    //   ? this.props.possibleValues.dictionary.get(seriesFieldName) ?? []\n    //   : [];\n    // console.log(seriesValues);\n    var seriesValues: PossibleValueDictionary[] = [];\n\n    if (seriesFieldType === \"set\") {\n      seriesValues =\n        this.props.possibleValues.set.get(seriesFieldName)?.map((xx) => {\n          return {\n            key: xx,\n            value: xx,\n          };\n        }) || [];\n    } else if (seriesFieldType === \"dictionary\") {\n      seriesValues =\n        this.props.possibleValues.dictionary.get(seriesFieldName) || [];\n    }\n\n    console.log(seriesValues);\n\n    //filter to series in data\n    const seriesInDataValues: Set<string> = data.reduce(\n      (coll: any, item: any) => {\n        const s = item[series];\n        coll.add(s);\n        return coll;\n      },\n      new Set()\n    );\n\n    seriesValues = seriesValues.filter((sv) => {\n      return seriesInDataValues.has(sv.key);\n    });\n\n    const v = data.reduce((coll: any, item: any) => {\n      const currentX = item[x];\n      const valueForX = coll.get(currentX) || { x: currentX };\n\n      valueForX[item[series]] = item[op + \"_\" + y];\n      coll.set(currentX, valueForX);\n\n      return coll;\n    }, new Map());\n\n    console.log(v);\n\n    const vv = Immutable.List(v.values()).sortBy((i: any) => i.x);\n\n    console.log(vv.toArray());\n    const dd: any[] = vv.toArray();\n    //const stateDictionary = [\"in\", \"out\"];\n    // const dataIn = sampleData.result.filter((x1: any) => x1[\"event.detector.People.state\"] === \"in\").sort((a,b) => {\n    //   let comparison = 0;\n    //   if ( a[\"time.hour\"] > b[\"time.hour\"]) {\n    //     comparison = 1;\n    //   } else if (a[\"time.hour\"] < b[\"time.hour\"]) {\n    //     comparison = -1;\n    //   }\n    //   return comparison;\n    // });\n\n    var theChart = (\n      <Typography>Error: unknown type {type}</Typography>\n    );\n\n    if (type === \"Line\") {\n      theChart = (        \n          <LineChart\n            ref={(chart) => this.lineChart = chart}\n            width={400}\n            height={300}\n            data={dd}\n            margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n            onClick={this.handleClickLine}\n          >\n            <XAxis dataKey=\"x\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <CartesianGrid stroke=\"#f5f5f5\" strokeDasharray=\"5 5\" />\n            {seriesValues.map((serieVal) => (\n              <Line\n                type=\"monotone\"\n                connectNulls\n                stroke={this.stringToColour(serieVal.key)}\n                //strokeDasharray=\"1000 1\"\n                isAnimationActive={false}\n                dataKey={serieVal.key}\n                name={serieVal.value}     \n                //dot={{onClick: (prop: any) => console.log('dot: ', prop) }} \n                //activeDot={{fill: \"#f50000\" , onClick: (prop: any) => console.log('activeDot: ', prop) }}         \n                activeDot={{ onClick: (prop: any) => console.log('activeDot: ', prop) }}         \n              />\n            ))}\n            {this.props.chartState.brush ? (\n              <Brush />\n            ) : null }\n          </LineChart>        \n      );\n    }\n\n    if (type === \"Bar\") {\n      theChart = (        \n          <BarChart\n            ref={(chart) => this.barChart = chart}\n            width={400}\n            height={300}\n            data={dd}\n            margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n            onClick={this.handleClickLine}\n          >\n            <XAxis dataKey=\"x\" />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <CartesianGrid stroke=\"#f5f5f5\" strokeDasharray=\"5 5\" />\n            {seriesValues.map((serieVal) => (\n              <Bar\n                stroke={this.stringToColour(serieVal.key)}\n                fill={this.stringToColour(serieVal.key)}\n                dataKey={serieVal.key}\n                name={serieVal.value}\n                onClick={this.handleClick}\n              />\n            ))}\n            {this.props.chartState.brush ? (\n              <Brush />\n            ) : null }\n          </BarChart>        \n      );\n    }\n\n    if (type === \"Area\") {\n      theChart = (        \n        <AreaChart\n          ref={(chart) => this.areaChart = chart}\n          width={400}\n          height={300}\n          data={dd}\n          margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n          onClick={this.handleClickLine}\n        >\n          <XAxis dataKey=\"x\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <CartesianGrid stroke=\"#f5f5f5\" strokeDasharray=\"5 5\" />\n          {seriesValues.map((serieVal) => (\n            <Area\n              type=\"monotone\"\n              connectNulls\n              stroke={this.stringToColour(serieVal.key)}\n              fill={this.stringToColour(serieVal.key)}\n              fillOpacity={0.5}\n              dataKey={serieVal.key}\n              name={serieVal.value}              \n            />\n          ))}\n          {this.props.chartState.brush ? (\n            <Brush />\n          ) : null }\n          \n        </AreaChart>        \n      );\n    }\n\n    return (\n      <div id={this.props.id}>\n        <Card variant=\"outlined\">     \n          <CardHeader\n            action={              \n              <IconButton aria-label=\"fullscreen\" onClick={this.handleFullscreenOpen}>\n                <FullscreenIcon />\n              </IconButton>\n              // <IconButton aria-label=\"settings\">\n              //   <MoreVertIcon />\n              // </IconButton>\n            }\n            title={this.props.title}\n            subheader={this.props.description}\n          />     \n          <CardContent>\n                          \n            <ResponsiveContainer width=\"95%\" height={300}>\n            { theChart }\n            </ResponsiveContainer>\n            \n          </CardContent>\n          {this.props.isEditMode ? (\n            <CardActions disableSpacing>\n              <IconButton aria-label=\"edit\" onClick={this.handleEdit}>\n                <EditIcon />\n              </IconButton>\n              <IconButton aria-label=\"delete\" onClick={this.handleDelete}>\n                <DeleteIcon />\n              </IconButton>\n            </CardActions>\n          ) : null }\n        </Card>\n\n        <Dialog \n          fullScreen \n          open={this.state.openFullscreen} \n          onClose={this.handleFullscreenClose} \n        >\n          <DialogTitle id=\"editor-dialog-title\">\n            <Toolbar variant=\"dense\">\n                <IconButton edge=\"start\" color=\"inherit\" onClick={this.handleFullscreenClose} aria-label=\"close\">\n                  <CloseIcon />\n                </IconButton>\n                <Typography variant=\"h6\">\n                  {this.props.title}\n                </Typography>\n                <Button color=\"inherit\" onClick={this.handleDownloadPdf}>\n                  PDF\n                </Button>\n                <Button color=\"inherit\" onClick={this.handleDownloadSvg}>\n                  SVG\n                </Button>\n                <Button color=\"inherit\" onClick={this.handleDownloadPng}>\n                  PNG\n                </Button>\n              </Toolbar>\n          </DialogTitle>\n          <DialogContent>\n            <Typography variant=\"h6\">{this.props.description}</Typography>\n            <ResponsiveContainer width=\"95%\" height={700}>\n            { theChart }\n            </ResponsiveContainer>\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n\n  }\n}\n\nexport default WidgetPreviewChart;\n","import * as React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Card, CardContent, CardActions, IconButton } from \"@material-ui/core\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  Pie,\n  PieChart,\n  Cell,\n} from \"recharts\";\nimport {\n  ChartState,\n  QueryFilterKey,\n  TimePeriod,\n  PossibleValues,\n  EventField,\n  PossibleValueDictionary,\n} from \"../WidgetEditor/types\";\nimport * as Immutable from \"immutable\";\n\ntype WidgetPreviewPieProps = {\n  isEditMode: boolean;\n  api: string;\n  token: string;\n  refreshTime?: Date;\n\n  id: string;\n  title?: string;\n  description?: string;\n  chartState: ChartState;\n  filterItems: Immutable.List<QueryFilterKey>;\n  period: TimePeriod;\n  possibleValues: PossibleValues;\n  groupByAvailable: EventField[];\n\n  onEditWidget?: ((id: string) => void) | undefined;\n  onDeleteWidget?: ((id: string) => void) | undefined;\n};\n\ntype WidgetPreviewPieState = {\n  rows?: any;\n  err?: string;\n};\n\nclass WidgetPreviewPie extends React.Component<\n  WidgetPreviewPieProps,\n  WidgetPreviewPieState\n> {\n  state: WidgetPreviewPieState = {\n    rows: undefined,\n    err: undefined,\n  };\n\n  handleEdit = () => {\n    console.log(\"handleEdit \" + this.props.id);\n    if (this.props.onEditWidget) {\n      this.props.onEditWidget(this.props.id);\n    }\n  };\n  handleDelete = () => {\n    console.log(\"handleDelete \" + this.props.id);\n    if (this.props.onDeleteWidget) {\n      this.props.onDeleteWidget(this.props.id);\n    }\n  };\n\n  loadData = () => {\n    console.log(\"WidgetPreviewPie loadData\");\n    this.setState({ rows: undefined, err: undefined });\n    //Simple POST request with a JSON body using fetch\n    const url1 = this.props.api + \"/api/v2/ad-query/aggregation/table\";\n\n    const { x, y, op, series } = this.props.chartState;\n\n    const d = {\n      filter: {\n        keys: this.props.filterItems\n          .filter((xx) => xx.type === \"set\" || xx.type === \"dictionary\")\n          .map((xx) => {\n            return {\n              field: xx.field,\n              op: xx.op,\n              value: xx.value,\n            };\n          }),\n        numbers: this.props.filterItems\n          .filter((xx) => xx.type === \"number\")\n          .map((xx) => {\n            return {\n              field: xx.field,\n              op: xx.op,\n              value: Number.parseFloat(xx.value),\n            };\n          }),\n        lists: [],\n        period: this.props.period,\n      },\n      groupBy: [x, y, series],\n      fields: [\n        {\n          field: y,\n          op: op,\n        },\n      ],\n    };\n    const requestOptions: RequestInit = {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.props.token,\n      },\n      body: JSON.stringify(d),\n    };\n    fetch(url1, requestOptions)\n      //.then(r => r.json().then(json => ({ok: r.ok, status: r.status, json})))\n      //.then( r => r.ok ? r.json: Promise.reject(r))\n      .then((response) => response.json())\n      .then((data) => {\n        //this.props.onChangeEventFields(data);\n        if (data.result == null) {\n          throw Error(\"no rows in result\" + JSON.stringify(data));\n        } else {\n          const r = data.result;\n          // .map((item: any)=>{\n          //   return item;\n          // });\n          console.log(\"WidgetPreviewLineChart r=\" + JSON.stringify(r));\n          this.setState({ rows: r });\n        }\n        console.log(\"WidgetPreviewLineChart data=\" + JSON.stringify(data));\n      })\n      .catch((e) => {\n        this.setState({ err: e.message });\n      });\n  };\n\n  componentDidMount() {\n    console.log(\n      \"WidgetPreviewPie componentDidMount \" +\n        JSON.stringify(this.props.chartState)\n    );\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps: WidgetPreviewPieProps) {\n    console.log(\n      \"WidgetPreviewPie componentDidUpdate \" +\n        JSON.stringify(this.props.chartState)\n    );\n    if (JSON.stringify(this.props) !== JSON.stringify(prevProps)) {\n      // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\n      this.loadData();\n    }\n  }\n\n  render() {\n    if (this.state.err) {\n      return (\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>Error: {this.state.err}</Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    if (!this.props.chartState) {\n      return (\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>Error: no chartState</Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    const { x, y, op, series } = this.props.chartState!;\n\n    if (!x || !y || !op || !series) {\n      return (\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>\n              Error: chartState content {JSON.stringify(this.props.chartState!)}\n            </Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    if (!this.state.rows) {\n      return (\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>Error: no rows</Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    const data = this.state.rows!;\n\n    const seriesField = this.props.groupByAvailable.filter(\n      (xx) => xx.name === this.props.chartState.series\n    );\n    const seriesFieldName: string = this.props.chartState!.series!;\n    const seriesFieldType: string = seriesField[0].descriptor.type;\n    // const seriesValues: PossibleValueDictionary[] = seriesFieldType == \"dictionary\"\n    //   ? this.props.possibleValues.dictionary.get(seriesFieldName) ?? []\n    //   : [];\n    // console.log(seriesValues);\n    var seriesValues: PossibleValueDictionary[] = [];\n\n    if (seriesFieldType === \"set\") {\n      seriesValues =\n        this.props.possibleValues.set.get(seriesFieldName)?.map((xx) => {\n          return {\n            key: xx,\n            value: xx,\n          };\n        }) || [];\n    } else if (seriesFieldType === \"dictionary\") {\n      seriesValues =\n        this.props.possibleValues.dictionary.get(seriesFieldName) || [];\n    }\n\n    console.log(seriesValues);\n\n    //filter to series in data\n    const seriesInDataValues: Set<string> = data.reduce(\n      (coll: any, item: any) => {\n        const s = item[series];\n        coll.add(s);\n        return coll;\n      },\n      new Set()\n    );\n\n    seriesValues = seriesValues.filter((sv) => {\n      return seriesInDataValues.has(sv.key);\n    });\n\n    const v = data.reduce((coll: any, item: any) => {\n      //const currentX = item[x];\n      const currentX = item[series] + \"(\" + item[x] + \")\";\n      const valueForX = coll.get(currentX) || { x: currentX };\n\n      //valueForX[item[series]] = item[op + \"_\" + y];\n      valueForX[\"value\"] = item[op + \"_\" + y];\n      coll.set(currentX, valueForX);\n\n      return coll;\n    }, new Map());\n\n    console.log(v);\n\n    const kk = Immutable.List(v.keys()).sortBy((i: any) => i.x);\n    const vv = Immutable.List(v.values()).sortBy((i: any) => i.x);\n\n    console.log(kk.toArray());\n    console.log(vv.toArray());\n    const dd: any[] = vv.toArray();\n    //const stateDictionary = [\"in\", \"out\"];\n    // const dataIn = sampleData.result.filter((x1: any) => x1[\"event.detector.People.state\"] === \"in\").sort((a,b) => {\n    //   let comparison = 0;\n    //   if ( a[\"time.hour\"] > b[\"time.hour\"]) {\n    //     comparison = 1;\n    //   } else if (a[\"time.hour\"] < b[\"time.hour\"]) {\n    //     comparison = -1;\n    //   }\n    //   return comparison;\n    // });\n\n    const stringToColour = function (str: string) {\n      var hash = 0;\n      for (var i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n      }\n      var colour = \"#\";\n      for (var ii = 0; ii < 3; ii++) {\n        var value = (hash >> (ii * 8)) & 0xff;\n        colour += (\"00\" + value.toString(16)).substr(-2);\n      }\n      return colour;\n    };\n\n    return (\n      <Card variant=\"outlined\">\n        <CardContent>\n          <Typography align=\"center\" color=\"textSecondary\" gutterBottom>\n            {this.props.title}\n          </Typography>\n          <ResponsiveContainer width=\"95%\" height={400}>\n            <PieChart\n              width={400}\n              height={400}\n              margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n            >\n              <Tooltip />\n              <Legend />\n\n              <Pie\n                cx=\"50%\"\n                cy=\"50%\"\n                data={dd}\n                label\n                innerRadius={80}\n                outerRadius={100}\n                //stroke={stringToColour(serieVal.key)}\n                //fill={stringToColour(serieVal.key)}\n                dataKey=\"value\"\n                nameKey=\"x\"\n                key=\"value\"\n              >\n                {dd.map((entry, index) => (\n                  <Cell\n                    key={`cell-${index}`}\n                    fill={stringToColour(entry[\"x\"])}\n                  />\n                ))}\n              </Pie>\n            </PieChart>\n          </ResponsiveContainer>\n          <Typography align=\"center\" color=\"textSecondary\">\n            {this.props.description}\n          </Typography>\n        </CardContent>\n        {this.props.isEditMode ? (\n          <CardActions disableSpacing>\n            <IconButton aria-label=\"edit\" onClick={this.handleEdit}>\n              <EditIcon />\n            </IconButton>\n            <IconButton aria-label=\"delete\" onClick={this.handleDelete}>\n              <DeleteIcon />\n            </IconButton>\n          </CardActions>\n        ) : null}\n        {/* <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions> */}\n      </Card>\n    );\n  }\n}\n\nexport default WidgetPreviewPie;\n","import React, { forwardRef } from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTable from \"material-table\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n// import sampleData from \"./agg__time.hour__event.detector.People.state.json\";\nimport {\n  TableState,\n  QueryFilterKey,\n  TimePeriod,\n  PossibleValues,\n  EventFieldOp,\n  EventField,\n  PossibleValueDictionary,\n} from \"../WidgetEditor/types\";\nimport * as Immutable from \"immutable\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n  IconButton,\n  DialogContent,\n  DialogTitle,\n  Dialog,\n  Toolbar,\n  Container,\n  CardActions,\n  Paper,\n} from \"@material-ui/core\";\nimport moment from \"moment\";\n\n// const useStyles = makeStyles({\n//   table: {\n//     minWidth: 650,\n//   },\n// });\n\nconst icon = (MatIcon: any) =>\n  forwardRef<SVGSVGElement>((props, ref) => <MatIcon {...props} ref={ref} />);\n\nconst tableIcons = {\n  Add: icon(AddBox),\n  Check: icon(Check),\n  Clear: icon(Clear),\n  Delete: icon(DeleteOutline),\n  DetailPanel: icon(ChevronRight),\n  Edit: icon(Edit),\n  Export: icon(SaveAlt),\n  Filter: icon(FilterList),\n  FirstPage: icon(FirstPage),\n  LastPage: icon(LastPage),\n  NextPage: icon(ChevronRight),\n  PreviousPage: icon(ChevronLeft),\n  ResetSearch: icon(Clear),\n  Search: icon(Search),\n  SortArrow: icon(ArrowDownward),\n  ThirdStateCheck: icon(Remove),\n  ViewColumn: icon(ViewColumn),\n};\n\n// const rows = sampleData.result; //.slice(0, 10);\n\ntype Props = {\n  isEditMode: boolean;\n  api: string;\n  token: string;\n  refreshTime?: Date;\n\n  id: string;\n  title?: string;\n  description?: string;\n  tableState: TableState;\n  groupBy: Immutable.List<string>;\n  groupByAvailable: EventField[];\n  filterItems: Immutable.List<QueryFilterKey>;\n  period: TimePeriod;\n  possibleValues: PossibleValues;\n\n  onEditWidget?: ((id: string) => void) | undefined;\n  onDeleteWidget?: ((id: string) => void) | undefined;\n};\n\ntype State = {\n  rows?: any;\n  err?: string;\n  openFullscreen: boolean;\n  selected?: string;\n};\n\nclass WidgetAggregationTable extends React.Component<Props, State> {\n  state: State = {\n    rows: undefined,\n    err: undefined,\n    openFullscreen: false,\n    selected: undefined,\n  };\n\n  handleFullscreenOpen = () => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        openFullscreen: true,\n      };\n    });\n  };\n\n  handleFullscreenClose = () => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        openFullscreen: false,\n      };\n    });\n  };\n\n  handleEdit = () => {\n    console.log(\"handleEdit \" + this.props.id);\n    if (this.props.onEditWidget) {\n      this.props.onEditWidget(this.props.id);\n    }\n  };\n  handleDelete = () => {\n    console.log(\"handleDelete \" + this.props.id);\n    if (this.props.onDeleteWidget) {\n      this.props.onDeleteWidget(this.props.id);\n    }\n  };\n\n  loadData = () => {\n    console.log(\"WidgetAggregationTable loadData\");\n    this.setState({ rows: undefined, err: undefined });\n    //Simple POST request with a JSON body using fetch\n    const url1 = this.props.api + \"/api/v2/ad-query/aggregation/table\";\n\n    const itemByName = (name: string) => {\n      return this.props.groupByAvailable.find((x) => x.name === name);\n    };\n\n    const groupByItems = Immutable.List(this.props.groupBy)\n      .map((x) => itemByName(x))\n      .filter((x) => !!x)\n      .map((x) => x!);\n\n    const aggregateByField =\n      this.props.tableState.field ??\n      Immutable.List(this.props.groupBy).first() ??\n      \"\";\n    const aggregateByFieldType: string =\n      groupByItems\n        .filter((x) => x.name === aggregateByField)\n        .map((x) => x.descriptor.type)\n        .first() ?? \"\";\n\n    const groupBy = this.props.tableState.isAggregationFieldInGroupBy\n      ? this.props.groupBy.toArray()\n      : this.props.groupBy.filter((x) => x !== aggregateByField).toArray();\n\n    const valueOpHardcoded: EventFieldOp[] = [\n      \"count\",\n      \"avg\",\n      \"sum\",\n      \"min\",\n      \"max\",\n    ];\n    const availableOp =\n      aggregateByFieldType !== \"number\" ? [\"count\"] : valueOpHardcoded;\n    const currentOpAvailable = availableOp.includes(\n      this.props.tableState.op ?? \"\"\n    );\n    const aggregateByFieldOp: EventFieldOp = currentOpAvailable\n      ? this.props.tableState.op ?? \"count\"\n      : \"count\";\n\n    const d = {\n      filter: {\n        keys: this.props.filterItems.filter(\n          (x) => x.type === \"set\" || x.type === \"dictionary\"\n        ),\n        numbers: this.props.filterItems\n          .filter((x) => x.type === \"number\")\n          .map((x) => {\n            return {\n              field: x.field,\n              op: x.op,\n              value: Number.parseFloat(x.value),\n            };\n          }),\n        lists: [],\n        period: this.props.period,\n      },\n      groupBy: groupBy,\n      fields: [\n        {\n          field: aggregateByField,\n          op: aggregateByFieldOp,\n        },\n      ],\n    };\n    const requestOptions: RequestInit = {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.props.token,\n      },\n      body: JSON.stringify(d), //JSON.stringify({ title: 'React POST Request Example' })\n    };\n    fetch(url1, requestOptions)\n      //.then(r => r.json().then(json => ({ok: r.ok, status: r.status, json})))\n      //.then( r => r.ok ? r.json: Promise.reject(r))\n      .then((response) => response.json())\n      .then((data) => {\n        //this.props.onChangeEventFields(data);\n        if (data.result == null) {\n          throw Error(\"no rows in result\" + JSON.stringify(data));\n        } else {\n          const r = data.result.map((item: any) => {\n            return item;\n          });\n          this.setState({ rows: r });\n        }\n        console.log(\"WidgetAggregationTable data=\" + JSON.stringify(data));\n      })\n      .catch((e) => {\n        this.setState({ err: e.message });\n      });\n  };\n  componentDidMount() {\n    console.log(\n      \"WidgetAggregationTable componentDidMount \" + this.props.tableState.field\n    );\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    console.log(\n      \"WidgetAggregationTable componentDidUpdate \" + this.props.tableState.field\n    );\n    if (JSON.stringify(this.props) !== JSON.stringify(prevProps)) {\n      // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\n      this.loadData();\n    }\n  }\n\n  render() {\n    const itemByName = (name: string) => {\n      return this.props.groupByAvailable.find((x) => x.name === name);\n    };\n\n    const groupByItems = Immutable.List(this.props.groupBy)\n      .map((x) => itemByName(x))\n      .filter((x) => !!x)\n      .map((x) => x!);\n\n    const aggregateByField =\n      this.props.tableState.field ??\n      Immutable.List(this.props.groupBy).first() ??\n      \"\";\n    const aggregateByFieldType: string =\n      groupByItems\n        .filter((x) => x.name === aggregateByField)\n        .map((x) => x.descriptor.type)\n        .first() ?? \"\";\n    const aggregateByFieldTranslation: string =\n      groupByItems\n        .filter((x) => x.name === aggregateByField)\n        .map((x) => x.translation)\n        .first() ?? aggregateByField;\n\n    const valueOpHardcoded: EventFieldOp[] = [\n      \"count\",\n      \"avg\",\n      \"sum\",\n      \"min\",\n      \"max\",\n    ];\n    const availableOp =\n      aggregateByFieldType !== \"number\" ? [\"count\"] : valueOpHardcoded;\n    const currentOpAvailable = availableOp.includes(\n      this.props.tableState.op ?? \"\"\n    );\n    const aggregateByFieldOp: EventFieldOp = currentOpAvailable\n      ? this.props.tableState.op ?? \"count\"\n      : \"count\";\n\n    const columns = groupByItems\n      .filter((x) =>\n        this.props.tableState.isAggregationFieldInGroupBy\n          ? true\n          : x.name !== aggregateByField\n      )\n      .map((item) => {\n        var itemValues: PossibleValueDictionary[] = [];\n        if (item.descriptor.type === \"dictionary\") {\n          itemValues =\n            this.props.possibleValues.dictionary.get(item.name) || [];\n          itemValues = itemValues.map((xx) => {\n            return {\n              key: xx.key,\n              value: xx.value && xx.value !== \"\" ? xx.value : xx.key,\n            };\n          });\n        }\n        const itemLookup = itemValues.reduce((coll: any, item: any) => {\n          const currentX = item.key;\n          const valueForX = item.value;\n          coll.set(currentX, valueForX);\n          return coll;\n        }, new Map());\n        const itemLookupObject = Object.fromEntries(itemLookup.entries());\n        console.log(itemLookupObject);\n\n        return {\n          field: item.name,\n          title: item.translation,\n          lookup:\n            item.descriptor.type === \"dictionary\"\n              ? itemLookupObject\n              : undefined,\n        };\n      });\n\n    const aggColumn: any = {\n      field: aggregateByFieldOp + \"_\" + aggregateByField,\n      title: aggregateByFieldOp + \"(\" + aggregateByFieldTranslation + \")\",\n    };\n    const allColumns = columns.toArray().concat(aggColumn);\n\n    if (this.state.err) {\n      return (\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>Error: {this.state.err}</Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    const theTable = (\n      <MaterialTable\n        icons={tableIcons}\n        columns={allColumns}\n        // localization={{\n        //   toolbar: { exportName: \"Export\" },\n        // }}\n        onColumnDragged={(sourceIndex: number, destinationIndex: number) => {\n          console.log(\n            \"Dropped column from \" +\n              sourceIndex +\n              \" to position \" +\n              destinationIndex\n          );\n        }}\n        options={{\n          showTitle: false,\n          padding: \"dense\",\n          exportAllData: true,\n          exportButton: true,\n          exportFileName:\n            this.props.title + \".\" + moment().format(\"YYYYMMDDTHHmmss\"),\n          // exportCsv: (columns, data) => {\n          //   alert(\n          //     \"You should develop a code to export \" + data.length + \" rows\"\n          //   );\n          // },\n          rowStyle: (rowData) => ({\n            backgroundColor:\n              this.state.selected === rowData.tableData.id ? \"#EEE\" : \"#FFF\",\n          }),\n        }}\n        onRowClick={(evt, selectedRow: any) =>\n          this.setState({ selected: selectedRow?.tableData.id })\n        }\n        title={this.props.title}\n        isLoading={!this.state.rows && !this.state.err}\n        data={this.state.rows}\n        components={{\n          Container: (props) => <Paper {...props} elevation={0} />,\n        }}\n      />\n    );\n\n    return (\n      <div id={this.props.id}>\n        <Card variant=\"outlined\" title={this.props.title}>\n          <CardHeader\n            action={\n              <IconButton\n                aria-label=\"fullscreen\"\n                onClick={this.handleFullscreenOpen}\n              >\n                <FullscreenIcon />\n              </IconButton>\n              // <IconButton aria-label=\"settings\">\n              //   <MoreVertIcon />\n              // </IconButton>\n            }\n            title={this.props.title}\n            subheader={this.props.description}\n          />\n          <CardContent>{theTable}</CardContent>\n          {this.props.isEditMode ? (\n            <CardActions disableSpacing>\n              <IconButton aria-label=\"edit\" onClick={this.handleEdit}>\n                <EditIcon />\n              </IconButton>\n              <IconButton aria-label=\"delete\" onClick={this.handleDelete}>\n                <DeleteIcon />\n              </IconButton>\n            </CardActions>\n          ) : null}\n        </Card>\n        <Dialog\n          fullScreen\n          open={this.state.openFullscreen}\n          onClose={this.handleFullscreenClose}\n        >\n          <DialogTitle id=\"editor-dialog-title\">\n            <Toolbar variant=\"dense\">\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={this.handleFullscreenClose}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\">{this.props.title}</Typography>\n              {/* <Button color=\"inherit\" onClick={this.handleDownloadPdf}>\n                PDF\n              </Button>\n              <Button color=\"inherit\" onClick={this.handleDownloadSvg}>\n                SVG\n              </Button>\n              <Button color=\"inherit\" onClick={this.handleDownloadPng}>\n                PNG\n              </Button> */}\n            </Toolbar>\n          </DialogTitle>\n          <DialogContent>\n            <Typography variant=\"h6\">{this.props.description}</Typography>\n            {theTable}\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n\n    // return (\n    //   <Card variant=\"outlined\" title={this.props.title}>\n    //     <CardContent>\n    //       <MaterialTable\n    //         icons={tableIcons}\n    //         columns={allColumns}\n    //         data={this.state.rows}\n    //         title={\n    //           <Container>\n    //             <Typography variant=\"h5\" component=\"h5\">\n    //               {this.props.title}\n    //             </Typography>\n    //             <Typography color=\"textSecondary\">\n    //               {this.props.description}\n    //             </Typography>\n    //           </Container>\n    //         }\n    //       />\n    //     </CardContent>\n    //   </Card>\n    // );\n  }\n}\n\nexport default WidgetAggregationTable;\n","import React, { forwardRef } from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTable, { MTableCell } from \"material-table\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport LabelIcon from \"@material-ui/icons/Label\";\n// import sampleData from \"./agg__time.hour__event.detector.People.state.json\";\nimport {\n  TableState,\n  QueryFilterKey,\n  TimePeriod,\n  PossibleValues,\n} from \"../WidgetEditor/types\";\nimport * as Immutable from \"immutable\";\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  Container,\n  IconButton,\n  DialogContent,\n  DialogTitle,\n  Dialog,\n  Toolbar,\n  CardActions,\n  Tooltip,\n  ListItemText,\n  ListItem,\n  Paper,\n} from \"@material-ui/core\";\nimport moment from \"moment\";\nimport { NavLink } from \"react-router-dom\";\n\n// const useStyles = makeStyles({\n//   table: {\n//     minWidth: 650,\n//   },\n// });\n\nconst icon = (MatIcon: any) =>\n  forwardRef<SVGSVGElement>((props, ref) => <MatIcon {...props} ref={ref} />);\n\nconst tableIcons = {\n  Add: icon(AddBox),\n  Check: icon(Check),\n  Clear: icon(Clear),\n  Delete: icon(DeleteOutline),\n  DetailPanel: icon(ChevronRight),\n  Edit: icon(Edit),\n  Export: icon(SaveAlt),\n  Filter: icon(FilterList),\n  FirstPage: icon(FirstPage),\n  LastPage: icon(LastPage),\n  NextPage: icon(ChevronRight),\n  PreviousPage: icon(ChevronLeft),\n  ResetSearch: icon(Clear),\n  Search: icon(Search),\n  SortArrow: icon(ArrowDownward),\n  ThirdStateCheck: icon(Remove),\n  ViewColumn: icon(ViewColumn),\n};\n\ntype Props = {\n  isEditMode: boolean;\n  api: string;\n  token: string;\n  refreshTime?: Date;\n\n  limit: number;\n\n  id: string;\n  dashboardId: string;\n  title?: string;\n  description?: string;\n  filterItems: Immutable.List<QueryFilterKey>;\n  period: TimePeriod;\n  possibleValues: PossibleValues;\n\n  onColumnDragged?:\n    | ((sourceIndex: number, destinationIndex: number) => void)\n    | undefined;\n\n  onEditWidget?: ((id: string) => void) | undefined;\n  onDeleteWidget?: ((id: string) => void) | undefined;\n};\n\ntype State = {\n  rows?: any;\n  err?: string;\n  openEventFullscreen: boolean;\n  openFullscreen: boolean;\n  selected?: string;\n  selectedEvent?: any;\n};\n\nclass WidgetEvents extends React.Component<Props, State> {\n  state: State = {\n    rows: undefined,\n    err: undefined,\n    openEventFullscreen: false,\n    openFullscreen: false,\n    selected: undefined,\n  };\n\n  handleEventFullscreenOpen = () => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        openEventFullscreen: true,\n      };\n    });\n  };\n\n  handleEventFullscreenClose = () => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        openEventFullscreen: false,\n      };\n    });\n  };\n\n  handleFullscreenOpen = () => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        openFullscreen: true,\n      };\n    });\n  };\n\n  handleFullscreenClose = () => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        openFullscreen: false,\n      };\n    });\n  };\n\n  handleEdit = () => {\n    console.log(\"handleEdit \" + this.props.id);\n    if (this.props.onEditWidget) {\n      this.props.onEditWidget(this.props.id);\n    }\n  };\n  handleDelete = () => {\n    console.log(\"handleDelete \" + this.props.id);\n    if (this.props.onDeleteWidget) {\n      this.props.onDeleteWidget(this.props.id);\n    }\n  };\n\n  loadData = () => {\n    console.log(\"WidgetEvents loadData\");\n    this.setState({ rows: undefined, err: undefined });\n    //Simple POST request with a JSON body using fetch\n    const url1 = this.props.api + \"/api/v2/ad-query/events\";\n\n    const d = {\n      filter: {\n        keys: this.props.filterItems.filter(\n          (x) => x.type === \"set\" || x.type === \"dictionary\"\n        ),\n        numbers: this.props.filterItems\n          .filter((x) => x.type === \"number\")\n          .map((x) => {\n            return {\n              field: x.field,\n              op: x.op,\n              value: Number.parseFloat(x.value),\n            };\n          }),\n        lists: [],\n        period: this.props.period,\n      },\n      limit: this.props.limit,\n    };\n    const requestOptions: RequestInit = {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.props.token,\n      },\n      body: JSON.stringify(d), //JSON.stringify({ title: 'React POST Request Example' })\n    };\n    fetch(url1, requestOptions)\n      //.then(r => r.json().then(json => ({ok: r.ok, status: r.status, json})))\n      //.then( r => r.ok ? r.json: Promise.reject(r))\n      .then((response) => response.json())\n      .then((data) => {\n        //this.props.onChangeEventFields(data);\n        if (data.events == null) {\n          throw Error(\"no events in result\" + JSON.stringify(data));\n        } else {\n          const r = data.events ?? [];\n          this.setState({ rows: r });\n        }\n        console.log(\"WidgetEvents data=\" + JSON.stringify(data));\n      })\n      .catch((e) => {\n        this.setState({ err: e.message });\n      });\n  };\n  componentDidMount() {\n    console.log(\"WidgetEvents componentDidMount \");\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    console.log(\"WidgetEvents componentDidUpdate \");\n    if (JSON.stringify(this.props) !== JSON.stringify(prevProps)) {\n      // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\n      this.loadData();\n    }\n  }\n\n  render() {\n    //TODO: need to set required columns in request. from possibleFields list\n\n    if (this.state.err) {\n      return (\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>Error: {this.state.err}</Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    // if (!this.state.rows) {\n    //   return (\n    //     <Card variant=\"outlined\">\n    //       <CardContent>\n    //         <Typography>No rows</Typography>\n    //       </CardContent>\n    //     </Card>\n    //   );\n    // }\n\n    const columns: any = [\n      { field: \"id\", title: \"id\", hidden: true },\n      { field: \"time_date\", title: \"date\", type: \"date\" },\n      { field: \"time_time\", title: \"time\", type: \"time\" },\n\n      { field: \"source_video_name\", title: \"video\" },\n      { field: \"source_server_name\", title: \"server\" },\n      { field: \"source_detector_name\", title: \"detector\" },\n      { field: \"event_detector_type_name\", title: \"detector_type\" },\n      {\n        field: \"link\",\n        title: \"sample link\",\n        render: (rowData: any) => {\n          //return <NavLink to={\"/id/\"+rowData.id} color=\"primary\">link to event {rowData.id}</NavLink>;\n          return (\n            <ListItem\n              button\n              component={NavLink}\n              to={\"/id/\" + rowData.id}\n              //to show currently selected use //activeClassName=\"Mui-selected\"\n              //onClick={() => handleListItemClick(board.title, board.raw)}\n              //onClick={handleClose}\n              //key={board.id}\n            >\n              <ListItemText primary=\"sample link\" />\n              {/* <ListItemText primary=\"sample link\" />               */}\n            </ListItem>\n          );\n        },\n        // render: (rowData: { favNumbers: any[] }) => {\n        //   return rowData.favNumbers.map(m => {\n        //     return <Chip variant=\"outlined\" color=\"primary\" label={m} />;\n        //   });\n        // }\n      },\n      //custom search\n      // {\n      //   title: 'Name',\n      //   render: rowData => rowData.name + ' ' + rowData.surname,\n      //   customFilterAndSearch: (term, rowData) => (rowData.name + ' ' + rowData.surname).indexOf(term) != -1\n      // },\n      //cellStyle https://github.com/mbrn/material-table/issues/656\n      //cellStyle: { textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden', maxWidth: 100}\n      // {\n      //   title: \"something\",\n      //   field: \"something\",\n      //   cellStyle: (cellValue: any, rowData: any) => {\n      //     // OPEN YOUR CONSOLE\n      //     console.log({ cellValue, rowData });\n      //     // `rowData.color` will not be defined...\n      //     // neither will `rowData.tableData.color`...\n      //     return { backgroundColor: 'purple' }\n      //   }\n      // },\n      // {\n      //   field: 'url',\n      //   title: 'Avatar',\n      //   render: (rowData: any) => <img src={rowData.url} style={{width: 50, borderRadius: '50%'}}/>\n      // },\n      {\n        field: \"raw\",\n        title: \"raw\",\n        headerStyle: { font: \"bold\" },\n        render: (rowData: any) => JSON.stringify(rowData),\n      },\n    ];\n\n    const theTable = (\n      <MaterialTable\n        icons={tableIcons}\n        columns={columns}\n        // localization={{\n        //   toolbar: { exportName: \"Export\" },\n        // }}\n        onColumnDragged={(sourceIndex: number, destinationIndex: number) => {\n          console.log(\n            \"Dropped column from \" +\n              sourceIndex +\n              \" to position \" +\n              destinationIndex\n          );\n        }}\n        options={{\n          selection: true,\n          toolbarButtonAlignment: \"left\",\n          showTitle: false,\n          padding: \"dense\",\n          exportAllData: true,\n          exportButton: true,\n          draggable: this.props.isEditMode,\n          exportFileName:\n            this.props.title + \".\" + moment().format(\"YYYYMMDDTHHmmss\"),\n          //TODO: some export buttons https://github.com/mbrn/material-table/issues/1886\n          // exportCsv: (columns, data) => {\n          //   alert(\n          //     \"You should develop a code to export \" + data.length + \" rows\"\n          //   );\n          // },\n          rowStyle: (rowData) => ({\n            backgroundColor:\n              this.state.selected === rowData.tableData.id ? \"#EEE\" : \"#FFF\",\n          }),\n        }}\n        actions={[\n          {\n            tooltip: \"Tag\",\n            icon: () => {\n              return <LabelIcon />;\n            },\n            onClick: (evt, data: any) => {\n              const selectedCount: any = data?.length;\n              alert(\n                \"You want to add tag to \" +\n                  selectedCount +\n                  \" rows. Not implemented in backend yet.\"\n              );\n            },\n          },\n        ]}\n        // actions={[\n        //   {\n        //     icon: 'more_vert', position:'row',\n        //     tooltip: 'More action',\n        //     onClick: (event, rowData) => {\n        //       setOpenDialog(!openDialog); setPosition(event);\n        //     }\n        //   }\n        // ]}\n        onRowClick={(evt, selectedRow: any) => {\n          // const t: any = evt?.target;\n          // console.log(t.getAttribute('value'));\n          //this.setState({ selected: selectedRow?.tableData.id });\n\n          this.setState({\n            openEventFullscreen: true,\n            selectedEvent: selectedRow,\n          });\n        }}\n        title={this.props.title}\n        isLoading={!this.state.rows && !this.state.err}\n        data={this.state.rows}\n        components={{\n          Container: (props) => <Paper {...props} elevation={0} />,\n        }}\n        // components={{\n        //   Cell: (props) =>\n        //     <Tooltip title={props.value} arrow>\n        //       <MTableCell {...props} />\n        //     </Tooltip>\n        // }}\n        // components={{\n        //   Cell: props => {\n        //     console.log(props);\n        //     return (\n        //       <MTableCell\n        //         style={{\n        //           background:\n        //             props.value === \"George\" // For the specific value\n        //               ? \"red\"\n        //               : props.rowData.id === 3 // For cell with the specific rowData\n        //               ? \"blue\"\n        //               : \"white\"\n        //         }}\n        //         {...props}\n        //       />\n        //     );\n        //   }\n        // }}\n      />\n    );\n\n    return (\n      <div id={this.props.id}>\n        <Card variant=\"outlined\" title={this.props.title}>\n          <CardHeader\n            action={\n              <IconButton\n                aria-label=\"fullscreen\"\n                onClick={this.handleFullscreenOpen}\n              >\n                <FullscreenIcon />\n              </IconButton>\n              // <IconButton aria-label=\"settings\">\n              //   <MoreVertIcon />\n              // </IconButton>\n            }\n            title={this.props.title}\n            subheader={this.props.description}\n          />\n          <CardContent>{theTable}</CardContent>\n          {this.props.isEditMode ? (\n            <CardActions disableSpacing>\n              <IconButton aria-label=\"edit\" onClick={this.handleEdit}>\n                <EditIcon />\n              </IconButton>\n              <IconButton aria-label=\"delete\" onClick={this.handleDelete}>\n                <DeleteIcon />\n              </IconButton>\n            </CardActions>\n          ) : null}\n        </Card>\n        <Dialog\n          fullScreen\n          open={this.state.openFullscreen}\n          onClose={this.handleFullscreenClose}\n        >\n          <DialogTitle id=\"editor-dialog-title\">\n            <Toolbar variant=\"dense\">\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={this.handleFullscreenClose}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\">{this.props.title}</Typography>\n              {/* <Button color=\"inherit\" onClick={this.handleDownloadPdf}>\n                PDF\n              </Button>\n              <Button color=\"inherit\" onClick={this.handleDownloadSvg}>\n                SVG\n              </Button>\n              <Button color=\"inherit\" onClick={this.handleDownloadPng}>\n                PNG\n              </Button> */}\n            </Toolbar>\n          </DialogTitle>\n          <DialogContent>\n            <Typography variant=\"h6\">{this.props.description}</Typography>\n            {theTable}\n          </DialogContent>\n        </Dialog>\n        <Dialog\n          fullScreen\n          open={this.state.openEventFullscreen}\n          onClose={this.handleEventFullscreenClose}\n        >\n          <DialogTitle id=\"event-dialog-title\">\n            <Toolbar variant=\"dense\">\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={this.handleEventFullscreenClose}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\">Event</Typography>\n            </Toolbar>\n          </DialogTitle>\n          <DialogContent>\n            <Typography variant=\"h6\">\n              TODO: show snapshot / video player\n            </Typography>\n            <pre>{JSON.stringify(this.state.selectedEvent, undefined, 2)}</pre>\n            {/* {theTable} */}\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default WidgetEvents;\n","import React, { forwardRef } from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport MaterialTable, { MTableCell } from \"material-table\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n// import sampleData from \"./agg__time.hour__event.detector.People.state.json\";\nimport {\n  TableState,\n  QueryFilterKey,\n  TimePeriod,\n  PossibleValues,\n  PivotTableState,\n  EventField,\n  PossibleValueDictionary,\n} from \"../WidgetEditor/types\";\nimport * as Immutable from \"immutable\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n  IconButton,\n  DialogContent,\n  DialogTitle,\n  Dialog,\n  Toolbar,\n  Container,\n  CardActions,\n  Paper,\n} from \"@material-ui/core\";\nimport moment from \"moment\";\n\n// const useStyles = makeStyles({\n//   table: {\n//     minWidth: 650,\n//   },\n// });\n\nconst icon = (MatIcon: any) =>\n  forwardRef<SVGSVGElement>((props, ref) => <MatIcon {...props} ref={ref} />);\n\nconst tableIcons = {\n  Add: icon(AddBox),\n  Check: icon(Check),\n  Clear: icon(Clear),\n  Delete: icon(DeleteOutline),\n  DetailPanel: icon(ChevronRight),\n  Edit: icon(Edit),\n  Export: icon(SaveAlt),\n  Filter: icon(FilterList),\n  FirstPage: icon(FirstPage),\n  LastPage: icon(LastPage),\n  NextPage: icon(ChevronRight),\n  PreviousPage: icon(ChevronLeft),\n  ResetSearch: icon(Clear),\n  Search: icon(Search),\n  SortArrow: icon(ArrowDownward),\n  ThirdStateCheck: icon(Remove),\n  ViewColumn: icon(ViewColumn),\n};\n\ntype Props = {\n  isEditMode: boolean;\n  api: string;\n  token: string;\n  refreshTime?: Date;\n\n  id: string;\n  title?: string;\n  description?: string;\n  tableState: PivotTableState;\n  filterItems: Immutable.List<QueryFilterKey>;\n  period: TimePeriod;\n  possibleValues: PossibleValues;\n  groupByAvailable: EventField[];\n\n  onEditWidget?: ((id: string) => void) | undefined;\n  onDeleteWidget?: ((id: string) => void) | undefined;\n};\n\ntype State = {\n  rows?: any;\n  err?: string;\n  openFullscreen: boolean;\n  selected?: string;\n};\n\nclass WidgetPivotTable extends React.Component<Props, State> {\n  state: State = {\n    rows: undefined,\n    err: undefined,\n    openFullscreen: false,\n    selected: undefined,\n  };\n\n  handleFullscreenOpen = () => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        openFullscreen: true,\n      };\n    });\n  };\n\n  handleFullscreenClose = () => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        openFullscreen: false,\n      };\n    });\n  };\n\n  handleEdit = () => {\n    console.log(\"handleEdit \" + this.props.id);\n    if (this.props.onEditWidget) {\n      this.props.onEditWidget(this.props.id);\n    }\n  };\n  handleDelete = () => {\n    console.log(\"handleDelete \" + this.props.id);\n    if (this.props.onDeleteWidget) {\n      this.props.onDeleteWidget(this.props.id);\n    }\n  };\n\n  loadData = () => {\n    console.log(\"WidgetPivotTable loadData\");\n    this.setState({ rows: undefined, err: undefined });\n    //Simple POST request with a JSON body using fetch\n    const url1 = this.props.api + \"/api/v2/ad-query/aggregation/table\";\n\n    const { rows, columns, values, op } = this.props.tableState;\n\n    const d = {\n      filter: {\n        keys: this.props.filterItems.filter(\n          (x) => x.type === \"set\" || x.type === \"dictionary\"\n        ),\n        numbers: this.props.filterItems\n          .filter((x) => x.type === \"number\")\n          .map((x) => {\n            return {\n              field: x.field,\n              op: x.op,\n              value: Number.parseFloat(x.value),\n            };\n          }),\n        lists: [],\n        period: this.props.period,\n      },\n      groupBy: [rows, columns, values],\n      fields: [\n        {\n          field: values,\n          op: op,\n        },\n      ],\n    };\n    const requestOptions: RequestInit = {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.props.token,\n      },\n      body: JSON.stringify(d), //JSON.stringify({ title: 'React POST Request Example' })\n    };\n    fetch(url1, requestOptions)\n      //.then(r => r.json().then(json => ({ok: r.ok, status: r.status, json})))\n      //.then( r => r.ok ? r.json: Promise.reject(r))\n      .then((response) => response.json())\n      .then((data) => {\n        //this.props.onChangeEventFields(data);\n        if (data.result == null) {\n          throw Error(\"no rows in result\" + JSON.stringify(data));\n        } else {\n          const r = data.result.map((item: any) => {\n            return item;\n          });\n          this.setState({ rows: r });\n        }\n        console.log(\"WidgetPivotTable data=\" + JSON.stringify(data));\n      })\n      .catch((e) => {\n        this.setState({ err: e.message });\n      });\n  };\n  componentDidMount() {\n    console.log(\"WidgetPivotTable componentDidMount \");\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    console.log(\"WidgetPivotTable componentDidUpdate \");\n    if (JSON.stringify(this.props) !== JSON.stringify(prevProps)) {\n      // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\n      this.loadData();\n    }\n  }\n\n  render() {\n    const { rows, columns, values, op } = this.props.tableState;\n\n    if (!rows || !columns || !op || !values) {\n      return (\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>\n              Error: state is not complete, content{\" \"}\n              {JSON.stringify(this.props.tableState!)}\n            </Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    if (this.state.err) {\n      return (\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>Error: {this.state.err}</Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    if (!this.state.rows) {\n      return (\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>No rows</Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    const data = this.state.rows!;\n\n    const columnsField = this.props.groupByAvailable.filter(\n      (xx) => xx.name === columns\n    );\n    const columnsFieldName: string = columns;\n    const columnsFieldType: string = columnsField[0].descriptor.type;\n\n    const rowsField = this.props.groupByAvailable.filter(\n      (xx) => xx.name === rows\n    );\n    const rowsFieldName: string = rows;\n    const rowsFieldType: string = rowsField[0].descriptor.type;\n    const rowsFieldTranslation: string = rowsField[0].translation;\n\n    var columnsValues: PossibleValueDictionary[] = [];\n    if (columnsFieldType === \"set\") {\n      columnsValues =\n        this.props.possibleValues.set.get(columnsFieldName)?.map((xx) => {\n          return {\n            key: xx,\n            value: xx,\n          };\n        }) || [];\n    } else if (columnsFieldType === \"dictionary\") {\n      columnsValues =\n        this.props.possibleValues.dictionary.get(columnsFieldName) || [];\n      columnsValues = columnsValues.map((xx) => {\n        return {\n          key: xx.key,\n          value: xx.value && xx.value !== \"\" ? xx.value : xx.key,\n        };\n      });\n    }\n\n    console.log(\"columnsValues = \" + JSON.stringify(columnsValues));\n\n    var rowsValues: PossibleValueDictionary[] = [];\n    if (rowsFieldType === \"set\") {\n      rowsValues =\n        this.props.possibleValues.set.get(rowsFieldName)?.map((xx) => {\n          return {\n            key: xx,\n            value: xx,\n          };\n        }) || [];\n    } else if (rowsFieldType === \"dictionary\") {\n      rowsValues =\n        this.props.possibleValues.dictionary.get(rowsFieldName) || [];\n      rowsValues = rowsValues.map((xx) => {\n        return {\n          key: xx.key,\n          value: xx.value && xx.value !== \"\" ? xx.value : xx.key,\n        };\n      });\n    }\n\n    console.log(\"rowsValues = \" + JSON.stringify(rowsValues));\n\n    //filter to series in data\n    const columnsInDataValues: Set<string> = data.reduce(\n      (coll: any, item: any) => {\n        const s: string = item[columns];\n        coll.add(s);\n        return coll;\n      },\n      new Set()\n    );\n    const rowsInDataValues: Set<string> = data.reduce(\n      (coll: any, item: any) => {\n        const s: string = item[rows];\n        coll.add(s);\n        return coll;\n      },\n      new Set()\n    );\n\n    console.log(\"columnsInDataValues = \" + JSON.stringify(columnsInDataValues));\n    console.log(\"rowsInDataValues = \" + JSON.stringify(rowsInDataValues));\n\n    columnsValues = columnsValues.filter((sv) => {\n      return columnsInDataValues.has(sv.key);\n    });\n    rowsValues = rowsValues.filter((sv) => {\n      return rowsInDataValues.has(sv.key);\n    });\n\n    console.log(\"columnsValues = \" + JSON.stringify(columnsValues));\n    console.log(\"rowsValues = \" + JSON.stringify(rowsValues));\n\n    const v = data.reduce((coll: any, item: any) => {\n      const currentX = item[rows];\n      const valueForX = coll.get(currentX) || { x: currentX };\n\n      valueForX[item[columns]] = item[op + \"_\" + values];\n      coll.set(currentX, valueForX);\n\n      return coll;\n    }, new Map());\n\n    console.log(v);\n\n    \n\n    const vv = Immutable.List(v.values()).sortBy((i: any) => i.x);\n\n    var dd: any[] = vv.toArray();\n    console.log(\"dd = \" + JSON.stringify(dd));\n\n    const withDelta = this.props.tableState.delta && this.props.tableState.deltaA && this.props.tableState.deltaB;\n    const deltaTitle = this.props.tableState.deltaTitle ?? \"Δ\";\n    const onlyDeltaColumn = withDelta && this.props.tableState.deltaOnly;\n\n    if(withDelta) {\n      const deltaA = this.props.tableState.deltaA!;\n      const deltaB = this.props.tableState.deltaB!;\n      \n      const vvv = Immutable.List(dd).map((item: any) => {\n        const a = Number(item[deltaA]);\n        const b = Number(item[deltaB]);\n        \n        const value = item;\n        value[deltaTitle] = a - b;\n        return value;\n      });\n\n      dd = vvv.toArray();\n      console.log(\"dd with delta = \" + JSON.stringify(dd));\n    }\n\n    if(this.props.tableState.referenceValue && this.props.tableState.referenceOp) {\n      const referenceColumn = this.props.tableState.referenceColumn ?? \"*\";\n      const referenceValue = this.props.tableState.referenceValue!;\n      const referenceOp = this.props.tableState.referenceOp!;\n\n      const vvv = Immutable.List(dd).map((item: any) => {\n        const value = Number(item[referenceColumn]);\n        var highlight = false;\n        switch (referenceOp) {\n          case \"eq\":\n            highlight = value === referenceValue;\n            break;\n          case \"neq\":\n            highlight = value !== referenceValue;\n            break;\n          case \"gt\":\n            highlight = value > referenceValue;\n            break;\n          case \"lt\":\n            highlight = value < referenceValue;\n            break;\n          case \"gte\":\n            highlight = value >= referenceValue;\n            break;\n          case \"lte\":\n            highlight = value <= referenceValue;\n            break;\n          default:\n            break;\n        }\n\n        const res = item;\n        res[\"highlight\"] = highlight;\n        return res;\n      });\n\n      dd = vvv.toArray();\n      console.log(\"dd with highlight = \" + JSON.stringify(dd));\n    }\n\n    // const columns = this.props.tableState.order.map((item) => {\n    //   return {\n    //     field: item,\n    //     title: item,\n    //   };\n    // });\n\n    const rowsLookup = rowsValues.reduce((coll: any, item: any) => {\n      const currentX = item.key;\n      const valueForX = item.value;\n      coll.set(currentX, valueForX);\n      return coll;\n    }, new Map());\n    const rowsLookupObject = Object.fromEntries(rowsLookup.entries());\n    console.log(rowsLookupObject);\n\n    const xColumn: any = {\n      field: \"x\",\n      title: rowsFieldTranslation,\n      lookup: rowsFieldType === \"dictionary\" ? rowsLookupObject : undefined,\n    };\n    const tableColumns: any[] = columnsValues.map((item) => {\n      return {\n        field: item.key,\n        title: item.value,\n      };\n    });\n    const deltaColumn: any = {\n      field: deltaTitle,\n      title: deltaTitle,\n    };\n    const highlightColumn: any = {\n      field: \"highlight\",\n      title: \"highlight\",\n      hidden: true\n    };\n    const allColumns = [xColumn].\n      concat(onlyDeltaColumn ? []: tableColumns)\n      .concat(withDelta ? deltaColumn : [])\n      .concat([highlightColumn]);\n    const tableRows = dd;\n\n    const theTable = (\n      <MaterialTable\n        icons={tableIcons}\n        columns={allColumns}\n        // localization={{\n        //   toolbar: { exportName: \"Export\" },\n        // }}\n        onColumnDragged={(sourceIndex: number, destinationIndex: number) => {\n          console.log(\n            \"Dropped column from \" +\n              sourceIndex +\n              \" to position \" +\n              destinationIndex\n          );\n        }}\n        options={{\n          showTitle: false,\n          padding: \"dense\",\n          exportAllData: true,\n          exportButton: true,\n          exportFileName:\n            this.props.title + \".\" + moment().format(\"YYYYMMDDTHHmmss\"),\n          fixedColumns: {\n            left: this.props.tableState.fixed1 ? 1 : 0,\n            right: 0,\n          },\n          // exportCsv: (columns, data) => {\n          //   alert(\n          //     \"You should develop a code to export \" + data.length + \" rows\"\n          //   );\n          // },\n          rowStyle: (rowData) => {\n            //console.log(\"rowStyle \" + JSON.stringify(rowData));\n            return {\n              backgroundColor:\n              this.state.selected === rowData.tableData.id ? \"#EEE\" : \"#FFF\",\n            color:\n              rowData.highlight ? \"#F00\" : \"#000\",\n            };            \n          },\n        }}\n        onRowClick={(evt, selectedRow: any) =>\n          this.setState({ selected: selectedRow?.tableData.id })\n        }\n        //title={this.props.title}\n        title={\n          <Container>\n            <Typography variant=\"h5\" component=\"h5\">\n              {this.props.title}\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {this.props.description}\n            </Typography>\n          </Container>\n        }\n        isLoading={!this.state.rows && !this.state.err}\n        data={tableRows}\n        components={{\n          Container: (props) => <Paper {...props} elevation={0} />,\n          //doesn't work\n          // Cell: props => {\n          //   console.log(\"MTableCell \" + props.value + \" > 100 = \" + (props.value > 100));\n          //   return (\n          //     <MTableCell\n          //       style={{\n          //         color:\n          //           props.value > 100 // For the specific value\n          //             ? \"#0FF\"\n          //             : \"white\"\n          //       }}\n          //       {...props}\n          //     />\n          //   );\n          // }\n        }}\n      />\n    );\n\n    return (\n      <div id={this.props.id}>\n        <Card variant=\"outlined\" title={this.props.title}>\n          <CardHeader\n            action={\n              <IconButton\n                aria-label=\"fullscreen\"\n                onClick={this.handleFullscreenOpen}\n              >\n                <FullscreenIcon />\n              </IconButton>\n              // <IconButton aria-label=\"settings\">\n              //   <MoreVertIcon />\n              // </IconButton>\n            }\n            title={this.props.title}\n            subheader={this.props.description}\n          />\n          <CardContent>{theTable}</CardContent>\n          {this.props.isEditMode ? (\n            <CardActions disableSpacing>\n              <IconButton aria-label=\"edit\" onClick={this.handleEdit}>\n                <EditIcon />\n              </IconButton>\n              <IconButton aria-label=\"delete\" onClick={this.handleDelete}>\n                <DeleteIcon />\n              </IconButton>\n            </CardActions>\n          ) : null}\n        </Card>\n        <Dialog\n          fullScreen\n          open={this.state.openFullscreen}\n          onClose={this.handleFullscreenClose}\n        >\n          <DialogTitle id=\"editor-dialog-title\">\n            <Toolbar variant=\"dense\">\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={this.handleFullscreenClose}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\">{this.props.title}</Typography>\n              {/* <Button color=\"inherit\" onClick={this.handleDownloadPdf}>\n                PDF\n              </Button>\n              <Button color=\"inherit\" onClick={this.handleDownloadSvg}>\n                SVG\n              </Button>\n              <Button color=\"inherit\" onClick={this.handleDownloadPng}>\n                PNG\n              </Button> */}\n            </Toolbar>\n          </DialogTitle>\n          <DialogContent>\n            <Typography variant=\"h6\">{this.props.description}</Typography>\n            {theTable}\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default WidgetPivotTable;\n","import React from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n//import Button from '@material-ui/core/Button';\nimport Typography from \"@material-ui/core/Typography\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport {\n  CounterState,\n  QueryFilterKey,\n  TimePeriod,\n  QueryFilterNumberOperation,\n} from \"../WidgetEditor/types\";\nimport * as Immutable from \"immutable\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport FullscreenIcon from \"@material-ui/icons/Fullscreen\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {\n  Card,\n  CardContent,\n  IconButton,\n  CardHeader,\n  Dialog,\n  AppBar,\n  Toolbar,\n  List,\n  Button,\n  DialogTitle,\n  DialogContent,\n  CardActions,\n} from \"@material-ui/core\";\n// const useStyles = makeStyles({\n//   root: {\n//     minWidth: 275,\n//   },\n//   bullet: {\n//     display: \"inline-block\",\n//     margin: \"0 2px\",\n//     transform: \"scale(0.8)\",\n//   },\n//   title: {\n//     fontSize: 14,\n//   },\n//   pos: {\n//     marginBottom: 12,\n//   },\n// });\n\n//const classes = useStyles();\n\ntype Props = {\n  isEditMode: boolean;\n  api: string;\n  token: string;\n  refreshTime?: Date;\n\n  id: string;\n  title?: string;\n  description?: string;\n  counterState: CounterState;\n  filterItems: Immutable.List<QueryFilterKey>;\n  period: TimePeriod;\n  onEditWidget?: ((id: string) => void) | undefined;\n  onDeleteWidget?: ((id: string) => void) | undefined;\n};\n\ntype State = {\n  value?: string;\n  err?: string;\n  openFullscreen: boolean;\n};\n\nclass WidgetCounter extends React.Component<Props, State> {\n  state: State = {\n    value: undefined,\n    err: undefined,\n    openFullscreen: false,\n  };\n\n  handleFullscreenOpen = () => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        openFullscreen: true,\n      };\n    });\n  };\n\n  handleFullscreenClose = () => {\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        openFullscreen: false,\n      };\n    });\n  };\n\n  handleEdit = () => {\n    console.log(\"handleEdit \" + this.props.id);\n    if (this.props.onEditWidget) {\n      this.props.onEditWidget(this.props.id);\n    }\n  };\n  handleDelete = () => {\n    console.log(\"handleDelete \" + this.props.id);\n    if (this.props.onDeleteWidget) {\n      this.props.onDeleteWidget(this.props.id);\n    }\n  };\n\n  handleRefresh = () => {\n    console.log(\"handleRefresh\");\n    this.loadCounter();\n  };\n\n  loadCounter = () => {\n    console.log(\"WidgetCounter loadCounter \" + this.props.counterState.field);\n    this.setState({ value: undefined, err: undefined });\n    //Simple POST request with a JSON body using fetch\n    const url1 = this.props.api + \"/api/v2/ad-query/aggregation/table\";\n\n    const d = {\n      filter: {\n        keys: this.props.filterItems.filter(\n          (x) => x.type === \"set\" || x.type === \"dictionary\"\n        ),\n        numbers: this.props.filterItems\n          .filter((x) => x.type === \"number\")\n          .map((x) => {\n            return {\n              field: x.field,\n              op: x.op,\n              value: Number.parseFloat(x.value),\n            };\n          }),\n        lists: [],\n        period: this.props.period,\n      },\n      groupBy: [\n        this.props.counterState.fieldGroupBy ?? this.props.counterState.field,\n      ],\n      fields: [\n        {\n          field: this.props.counterState.field,\n          op: this.props.counterState.op,\n        },\n      ],\n    };\n    const requestOptions: RequestInit = {\n      method: \"POST\",\n      //mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.props.token,\n      },\n      body: JSON.stringify(d), //JSON.stringify({ title: 'React POST Request Example' })\n    };\n    fetch(url1, requestOptions)\n      //.then(r => r.json().then(json => ({ok: r.ok, status: r.status, json})))\n      //.then( r => r.ok ? r.json: Promise.reject(r))\n      .then((response) => response.json())\n      .then((data) => {\n        //this.props.onChangeEventFields(data);\n        if (data.result.length !== 1) {\n          throw Error(\n            \"rows in result == \" +\n              data.result.length +\n              \" \" +\n              JSON.stringify(data.result)\n          );\n        } else {\n          let item = data.result[0];\n          let value =\n            item[\n              this.props.counterState.op + \"_\" + this.props.counterState.field\n            ];\n          this.setState({ value: value });\n          console.log({ id: this.props.id, value: value });\n        }\n        console.log(\"WidgetCounter data=\" + JSON.stringify(data));\n      })\n      .catch((e) => {\n        this.setState({ err: e.message });\n      });\n  };\n  componentDidMount() {\n    console.log(\n      \"WidgetCounter componentDidMount \" + this.props.counterState.field\n    );\n    this.loadCounter();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    console.log(\n      \"WidgetCounter componentDidUpdate \" + this.props.counterState.field\n    );\n    if (JSON.stringify(this.props) !== JSON.stringify(prevProps)) {\n      // Check if it's a new user, you can also use some unique property, like the ID  (this.props.user.id !== prevProps.user.id)\n      this.loadCounter();\n    }\n  }\n\n  render() {\n    //const { classes } = this.props;\n    //const classes = useStyles();\n    //const bull = <span className={classes.bullet}>•</span>;\n\n    if (this.state.err) {\n      return (\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>Error: {this.state.err}</Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    const withReferenceValue: boolean =\n      this.props.counterState.referenceValue !== undefined;\n\n    var isAlert = false;\n    if (withReferenceValue && this.props.counterState.referenceOp) {\n      const referenceValue: number = this.props.counterState.referenceValue!;\n      switch (this.props.counterState.referenceOp!) {\n        case \"eq\":\n          isAlert = Number(this.state.value) === referenceValue;\n          break;\n        case \"neq\":\n          isAlert = Number(this.state.value) !== referenceValue;\n          break;\n        case \"gt\":\n          isAlert = Number(this.state.value) > referenceValue;\n          break;\n        case \"lt\":\n          isAlert = Number(this.state.value) < referenceValue;\n          break;\n        case \"gte\":\n          isAlert = Number(this.state.value) >= referenceValue;\n          break;\n        case \"lte\":\n          isAlert = Number(this.state.value) <= referenceValue;\n          break;\n        default:\n          break;\n      }\n    }\n    return (\n      <div id={this.props.id}>\n        <Card variant=\"outlined\">\n          <CardHeader\n            action={\n              <IconButton\n                aria-label=\"fullscreen\"\n                onClick={this.handleFullscreenOpen}\n              >\n                <FullscreenIcon />\n              </IconButton>\n            }\n            color={isAlert ? \"error\" : \"textSecondary\"}\n            title={this.props.title}\n          />\n          <CardContent>\n            {/* <Typography\n              align=\"center\"\n              color={isAlert ? \"error\" : \"textSecondary\"}\n              gutterBottom\n            >\n              {this.props.title}\n            </Typography> */}\n            <Typography\n              align=\"center\"\n              variant=\"h4\"\n              component=\"h4\"\n              color={isAlert ? \"error\" : \"inherit\"}\n            >\n              {this.state.value ?? \"...\"}\n            </Typography>\n            <Typography\n              align=\"center\"\n              color={isAlert ? \"error\" : \"textSecondary\"}\n            >\n              {this.props.description}\n            </Typography>\n          </CardContent>\n          {this.props.isEditMode ? (\n            <CardActions disableSpacing>\n              <IconButton aria-label=\"edit\" onClick={this.handleEdit}>\n                <EditIcon />\n              </IconButton>\n              <IconButton aria-label=\"delete\" onClick={this.handleDelete}>\n                <DeleteIcon />\n              </IconButton>\n            </CardActions>\n          ) : null}\n        </Card>\n        <Dialog\n          fullScreen\n          open={this.state.openFullscreen}\n          onClose={this.handleFullscreenClose}\n        >\n          <DialogTitle id=\"editor-dialog-title\">\n            <Toolbar variant=\"dense\">\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={this.handleFullscreenClose}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\">{this.props.title}</Typography>\n              <IconButton\n                aria-label=\"refresh\"\n                aria-haspopup=\"true\"\n                edge=\"end\"\n                color=\"inherit\"\n                onClick={this.handleRefresh}\n              >\n                <RefreshIcon />\n              </IconButton>\n            </Toolbar>\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                height: \"90vh\",\n                margin: 0,\n                padding: 0,\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <div>\n                <Typography\n                  align=\"center\"\n                  variant=\"h1\"\n                  component=\"h1\"\n                  color={isAlert ? \"error\" : \"inherit\"}\n                >\n                  {this.state.value ?? \"...\"}\n                </Typography>\n                <Typography\n                  align=\"center\"\n                  color={isAlert ? \"error\" : \"textSecondary\"}\n                >\n                  {this.props.description}\n                </Typography>\n              </div>\n            </div>\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default WidgetCounter;\n","import React from \"react\";\nimport Markdown from \"markdown-to-jsx\";\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\n//import CardActions from '@material-ui/core/CardActions';\nimport CardContent from \"@material-ui/core/CardContent\";\n//import Button from '@material-ui/core/Button';\n// import Typography from \"@material-ui/core/Typography\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { CardActions, IconButton } from \"@material-ui/core\";\n\ntype Props = {\n  isEditMode: boolean;\n  id: string;\n  title?: string;\n  description?: string;\n\n  onEditWidget?: ((id: string) => void) | undefined;\n  onDeleteWidget?: ((id: string) => void) | undefined;\n};\n\nclass WidgetMarkdown extends React.Component<Props> {\n  handleEdit = () => {\n    console.log(\"handleEdit \" + this.props.id);\n    if (this.props.onEditWidget) {\n      this.props.onEditWidget(this.props.id);\n    }\n  };\n  handleDelete = () => {\n    console.log(\"handleDelete \" + this.props.id);\n    if (this.props.onDeleteWidget) {\n      this.props.onDeleteWidget(this.props.id);\n    }\n  };\n\n  render() {\n    return (\n      <Card variant=\"outlined\" title={this.props.title}>\n        <CardContent>\n          {/* <Typography align=\"center\" color=\"textSecondary\" gutterBottom>\n            {this.props.title}\n          </Typography>           */}\n          <Markdown>{this.props.description ?? \"\"}</Markdown>\n        </CardContent>\n        {this.props.isEditMode ? (\n          <CardActions disableSpacing>\n            <IconButton aria-label=\"edit\" onClick={this.handleEdit}>\n              <EditIcon />\n            </IconButton>\n            <IconButton aria-label=\"delete\" onClick={this.handleDelete}>\n              <DeleteIcon />\n            </IconButton>\n          </CardActions>\n        ) : null}\n      </Card>\n    );\n  }\n}\n\nexport default WidgetMarkdown;\n","import * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CodeIcon from '@material-ui/icons/Code';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, IconButton, Tooltip } from \"@material-ui/core\";\n\ntype WidgetEditorRawProps = {\n  raw: string;\n  onChangeRaw: (raw: string) => void;\n};\n\nfunction WidgetEditorRaw(props: WidgetEditorRawProps) {\n\n  const [open, setOpen] = React.useState(false);\n  const [rawValue, setRawValue] = React.useState(\"\");\n\n  const handleSelectRawValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value && event.target.value !== \"\" ? event.target.value : \"\";\n    console.log(\"new rawValue \" + newValue);\n    setRawValue(newValue);\n  };\n\n  const handleClickRawOpen = () => {\n    setOpen(true);\n    setRawValue(props.raw);\n  };\n\n  const handleRawCancel = () => {\n    setOpen(false);\n    setRawValue(\"\");\n  };\n\n  const handleRawSet = () => {\n    setOpen(false);\n\n    props.onChangeRaw(rawValue);\n    setRawValue(\"\");    \n  };\n\n\n  return (\n    <Paper variant=\"elevation\" elevation={0}>\n\n      <Tooltip title=\"Show the full source of widget internals. Copy/Paste enabled.\">\n        <IconButton\n          aria-label=\"raw\"\n          aria-haspopup=\"true\"\n          color=\"primary\"\n          onClick={handleClickRawOpen}\n        >\n          <CodeIcon />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        maxWidth=\"xs\"\n        fullWidth\n        aria-labelledby=\"confirmation-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">Raw</DialogTitle>\n        <DialogContent dividers>\n          <TextField\n            id=\"value-textfield\"\n            label=\"Value\"\n            size=\"small\"\n            fullWidth\n            multiline\n            value={rawValue}\n            onChange={handleSelectRawValue}\n            variant=\"outlined\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleRawCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleRawSet} color=\"primary\">\n            Set\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Paper>\n  );\n}\n\nexport default WidgetEditorRaw;\n","import * as React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n// import { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport WidgetEditorTitle from \"./WidgetEditorTitle\";\nimport WidgetEditorLoadingEventFields from \"./WidgetEditorLoadingEventFields\";\nimport WidgetEditorLoadingPossibleValues from \"./WidgetEditorLoadingPossibleValues\";\nimport WidgetEditorLoadingPossiblePeriods from \"./WidgetEditorLoadingPossiblePeriods\";\nimport QueryEditor from \"../../components/QueryEditor\";\nimport VisualizeEditor from \"../../components/VisualizeEditor\";\nimport WidgetPreviewChart from \"../WidgetPreview/WidgetPreviewChart\";\nimport WidgetPreviewPie from \"../WidgetPreview/WidgetPreviewPie\";\n// import WidgetPreviewTable from \"../../components/WidgetPreview/WidgetPreviewTable\";\nimport WidgetAggregationTable from \"../../components/WidgetPreview/WidgetAggregationTable\";\nimport WidgetEvents from \"../../components/WidgetPreview/WidgetEvents\";\nimport WidgetPivotTable from \"../../components/WidgetPreview/WidgetPivotTable\";\nimport WidgetCounter from \"../WidgetPreview/WidgetCounter\";\nimport WidgetMarkdown from \"../../components/WidgetPreview/WidgetMarkdown\";\n// import Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  // Toolbar,\n  // IconButton,\n  Typography,\n  Button,\n  // Dialog,\n  DialogTitle,\n  DialogContent,\n  // DialogContentText,\n  // TextField,\n  DialogActions,\n  Breadcrumbs,\n  IconButton,\n  Toolbar,\n  Paper,\n  // MenuItem,\n} from \"@material-ui/core\";\n//import Paper from '@material-ui/core/Paper';\n//import List from '@material-ui/core/List';\nimport Container from \"@material-ui/core/Container\";\nimport {\n  // AggregationRequest,\n  EventField,\n  // EventFieldOp,\n  ChartState,\n  TableState,\n  PivotTableState,\n  CounterState,\n  // QueryAggregationField,\n  QueryFilterKey,\n  PossibleValues,\n  // PossibleValueDictionary,\n  TimePeriod,\n  Lang,\n  WidgetEditorRealState,\n  WidgetEditorInternalState,\n  WidgetType,\n} from \"./types\";\n//import eventFields from \"./events-fields.json\";\nimport * as Immutable from \"immutable\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\n// import { Typography, Dialog, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport WidgetEditorRaw from \"./WidgetEditorRaw\";\n\ntype WidgetEditorProps = {\n  dashboardId: string;\n  api: string;\n  token: string;\n  lang: Lang;\n\n  internal: WidgetEditorInternalState;\n  onLoadEventFields: (values: EventField[]) => void;\n  onLoadPossibleValues: (values: PossibleValues) => void;\n  onLoadPossiblePeriods: (values: TimePeriod[]) => void;\n  onChangeWidgetEditorState: (widget: WidgetEditorRealState) => void;\n  onClose: () => void;\n};\n\ntype WidgetEditorState = {\n  real: WidgetEditorRealState;\n  // isHelpOn: boolean;\n};\n\nclass WidgetEditor extends React.Component<\n  WidgetEditorProps,\n  WidgetEditorState\n> {\n  state: WidgetEditorState = {\n    real: {\n      id: uuidv4(),\n      title: \"New Widget 1\",\n      visualizeType: \"Chart\",\n\n      groupBy: Immutable.List(),\n      filterItems: Immutable.List([]),\n      period: {\n        type: \"forever\",\n      },\n    },\n    // isHelpOn: false\n  };\n\n  handleChangeTitle = (title: string) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      real: {\n        ...prevState.real,\n        title: title,\n      },\n    }));\n  };\n\n  handleChangeDescription = (description: string) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      real: {\n        ...prevState.real,\n        description: description,\n      },\n    }));\n  };\n\n  handleChange = (event: any) => {\n    console.log(event.target.value);\n    const visualizeType: WidgetType = event.target.value;\n    // const isCounter = visualizeType === \"Counter\";\n    // const isTable = visualizeType === \"Table\";\n    // const isChart = visualizeType === \"Chart\" || visualizeType === \"Pie\";\n\n    this.setState((prevState) => ({\n      ...prevState,\n      real: {\n        ...prevState.real,\n        visualizeType: visualizeType,\n        // counter: isCounter ? prevState.real.counter : undefined,\n        // chart: isChart ? prevState.real.chart : undefined,\n        // table: isTable ? prevState.real.table : undefined,\n      },\n    }));\n  };\n\n  handleTimeperiod = (item: TimePeriod) => {\n    console.log(\"handleTimeperiod \" + item.type);\n    this.setState((prevState) => ({\n      ...prevState,\n      real: {\n        ...prevState.real,\n        period: { type: item.type },\n      },\n    }));\n  };\n\n  handleAddField = (item: EventField) => {\n    console.log(\"handleAddField \" + item.name);\n    this.setState((prevState) => ({\n      ...prevState,\n      real: {\n        ...prevState.real,\n        groupBy: Immutable.List(prevState.real.groupBy).push(item.name),\n      },\n    }));\n  };\n\n  handleRemoveField = (item: EventField) => {\n    console.log(\"handleRemoveField \" + item.name);\n    this.setState((prevState) => ({\n      ...prevState,\n      real: {\n        ...prevState.real,\n        groupBy: prevState.real.groupBy.filter((x) => x !== item.name),\n      },\n    }));\n  };\n\n  handleChartChange = (chart: ChartState) => {\n    console.log(\"handleChartChange \" + JSON.stringify(chart));\n    this.setState((prevState) => ({\n      ...prevState,\n      real: {\n        ...prevState.real,\n        chart: chart,\n      },\n    }));\n  };\n  handleTableChange = (table: TableState) => {\n    console.log(\"handleTableChange \" + JSON.stringify(table));\n    this.setState((prevState) => ({\n      ...prevState,\n      real: {\n        ...prevState.real,\n        table: table,\n      },\n    }));\n  };\n  handlePivotTableChange = (pivot: PivotTableState) => {\n    console.log(\"handlePivotTableChange \" + JSON.stringify(pivot));\n    this.setState((prevState) => ({\n      ...prevState,\n      real: {\n        ...prevState.real,\n        pivot: pivot,\n      },\n    }));\n  };\n  handleCounterChange = (counter: CounterState) => {\n    console.log(\"handleCounterChange \" + JSON.stringify(counter));\n    this.setState((prevState) => ({\n      ...prevState,\n      real: {\n        ...prevState.real,\n        counter: counter,\n      },\n    }));\n  };\n  handleMarkdownBottomChange = (bottom: boolean) => {\n    console.log(\"handleMarkdownBottomChange \" + bottom);\n    this.setState((prevState) => ({\n      ...prevState,\n      real: {\n        ...prevState.real,\n        bottom: bottom,\n      },\n    }));\n  };\n  handleAddFilterItem = (item: QueryFilterKey) => {\n    console.log(\"handleAddFilterItem \" + JSON.stringify(item));\n    //    this.setState({ filterItems: this.state.filterItems.push(item) });\n    this.setState((prevState) => ({\n      ...prevState,\n      real: {\n        ...prevState.real,\n        filterItems: Immutable.List(prevState.real.filterItems).push(item),\n      },\n    }));\n  };\n  handleRemoveFilterItem = (item: QueryFilterKey) => {\n    console.log(\"handleRemoveFilterItem \" + JSON.stringify(item));\n    this.setState((prevState) => ({\n      ...prevState,\n      real: {\n        ...prevState.real,\n        filterItems: prevState.real.filterItems.filter(\n          (x) => JSON.stringify(x) !== JSON.stringify(item)\n        ),\n      },\n    }));\n  };\n  // handleLoadEventFields = (values: EventField[]) => {\n  //   console.log(\"handleLoadEventFields \" + JSON.stringify(values));\n  //   const valuesSorted = values.sort(function (a, b) {\n  //     const bandA = a.translation.toUpperCase();\n  //     const bandB = b.translation.toUpperCase();\n\n  //     let comparison = 0;\n  //     if (bandA > bandB) {\n  //       comparison = 1;\n  //     } else if (bandA < bandB) {\n  //       comparison = -1;\n  //     }\n  //     return comparison;\n  //   });\n\n  //   this.setState((prevState) => ({\n  //     ...prevState, internal: {\n  //         ...prevState.internal,\n  //         groupByAvailableLoaded: true,\n  //         groupByAvailable: valuesSorted,\n  //       }\n  //   }));\n  // };\n  // handleLoadPossibleValues = (values: PossibleValues) => {\n  //   console.log(\"handleLoadPossibleValues \" + JSON.stringify(values));\n  //   //this.setState({ possibleValuesLoaded: true, possibleValues: values });\n  //   this.setState((prevState) => ({\n  //     ...prevState, internal: {\n  //         ...prevState.internal,\n  //         possibleValuesLoaded: true,\n  //         possibleValues: values,\n  //       }\n  //   }));\n  // };\n  handleRaw = (raw: string) => {\n    const x: WidgetEditorRealState = JSON.parse(raw);\n    //TODO: тут что-то идёт не так. для полного восстановления\n    //this.setState({ title: x.title, description: x.description });\n    this.setState((prevState) => ({\n      ...prevState,\n      real: x,\n    }));\n  };\n\n  handleEditorDialogSave = () => {\n    this.props.onChangeWidgetEditorState(this.state.real);\n  };\n\n  // handleHelpModeSwitch = () => {\n  //   this.setState((prevState) => ({\n  //     ...prevState,\n  //     isHelpOn: !prevState.isHelpOn,\n  //   }));\n  // };\n\n  render() {\n    if (!this.props.internal.possiblePeriodsLoaded) {\n      return (\n        <WidgetEditorLoadingPossiblePeriods\n          api={this.props.api}\n          token={this.props.token}\n          lang={this.props.lang}\n          onLoadPossiblePeriods={this.props.onLoadPossiblePeriods}\n        />\n      );\n    }\n\n    if (!this.props.internal.groupByAvailableLoaded) {\n      return (\n        <WidgetEditorLoadingEventFields\n          api={this.props.api}\n          token={this.props.token}\n          lang={this.props.lang}\n          onChangeEventFields={this.props.onLoadEventFields}\n        />\n      );\n    }\n\n    if (!this.props.internal.possibleValuesLoaded) {\n      return (\n        <WidgetEditorLoadingPossibleValues\n          api={this.props.api}\n          token={this.props.token}\n          eventFields={this.props.internal.groupByAvailable}\n          onChangePossibleValues={this.props.onLoadPossibleValues}\n        />\n      );\n    }\n\n    return (\n      <div>\n        <DialogTitle id=\"editor-dialog-title\">\n          <Toolbar variant=\"dense\">\n            <Breadcrumbs separator=\"›\" aria-label=\"breadcrumb\">\n              <Typography color=\"textPrimary\" title=\"Create title and subtitle for the widget\">\n                title\n              </Typography>\n              <Typography color=\"textPrimary\" title=\"Prepare query by selecting fields and filtering them\">\n                query\n              </Typography>\n              <Typography color=\"textPrimary\" title=\"Visualize the result dataset with number of perdefined widgets\">\n                visualize\n              </Typography>\n              <Typography color=\"textPrimary\" title=\"Preview the result dataset in widget\">\n                preview\n              </Typography>\n              <Typography color=\"textPrimary\" title=\"Save to add widget to current dashboard\">\n                save\n              </Typography>\n            </Breadcrumbs>\n            <IconButton\n              edge=\"end\"\n              color=\"inherit\"\n              aria-label=\"help\"\n              title=\"All controls have tooltips\"\n            >            \n              <HelpOutlineIcon />\n            </IconButton>\n          </Toolbar>\n        </DialogTitle>\n        <DialogContent>\n          <Container>\n            <Grid container spacing={2} alignItems=\"stretch\">\n              <Grid item xs={12}>\n                <WidgetEditorTitle\n                  title={this.state.real.title}\n                  description={this.state.real.description}\n                  onChangeTitle={this.handleChangeTitle}\n                  onChangeDescription={this.handleChangeDescription}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <WidgetEditorRaw\n                  raw={JSON.stringify(this.state.real, undefined, 2)}\n                  onChangeRaw={this.handleRaw}\n                />\n              </Grid>\n              {this.state.real.visualizeType !== \"Markdown\" ? (\n                <Grid item xs={12}>\n                  <QueryEditor\n                    groupBy={this.state.real.groupBy}\n                    groupByAvailable={this.props.internal.groupByAvailable}\n                    possibleValues={this.props.internal.possibleValues}\n                    filterItems={this.state.real.filterItems}\n                    period={this.state.real.period}\n                    possiblePeriods={this.props.internal.possiblePeriods}\n                    onAddField={this.handleAddField}\n                    onRemoveField={this.handleRemoveField}\n                    onTimeperiod={this.handleTimeperiod}\n                    onAddFilterItem={this.handleAddFilterItem}\n                    onRemoveFilterItem={this.handleRemoveFilterItem}\n                  />\n                </Grid>\n              ) : null}\n              <Grid item xs={12} sm={6}>\n                <VisualizeEditor\n                  visualizeType={this.state.real.visualizeType}\n                  chart={this.state.real.chart}\n                  table={this.state.real.table}\n                  pivot={this.state.real.pivot}\n                  bottom={this.state.real.bottom}\n                  counter={this.state.real.counter}\n                  groupBy={this.state.real.groupBy}\n                  groupByAvailable={this.props.internal.groupByAvailable}\n                  possibleValues={this.props.internal.possibleValues}\n                  onChange={this.handleChange}\n                  onChartChange={this.handleChartChange}\n                  onTableChange={this.handleTableChange}\n                  onPivotTableChange={this.handlePivotTableChange}\n                  onCounterChange={this.handleCounterChange}\n                  onMarkdownBottomChange={this.handleMarkdownBottomChange}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                {this.state.real.visualizeType === \"Chart\" &&\n                this.state.real.chart ? (\n                  <WidgetPreviewChart\n                    isEditMode={false}\n                    api={this.props.api}\n                    token={this.props.token}\n                    id={this.state.real.id}\n                    title={this.state.real.title}\n                    description={this.state.real.description}\n                    chartState={this.state.real.chart!}\n                    filterItems={this.state.real.filterItems}\n                    period={this.state.real.period}\n                    possibleValues={this.props.internal.possibleValues}\n                    groupByAvailable={this.props.internal.groupByAvailable}\n                  />\n                ) : null}\n                {this.state.real.visualizeType === \"Pie\" &&\n                this.state.real.chart ? (\n                  <WidgetPreviewPie\n                    isEditMode={false}\n                    api={this.props.api}\n                    token={this.props.token}\n                    id={this.state.real.id}\n                    title={this.state.real.title}\n                    description={this.state.real.description}\n                    chartState={this.state.real.chart!}\n                    filterItems={this.state.real.filterItems}\n                    period={this.state.real.period}\n                    possibleValues={this.props.internal.possibleValues}\n                    groupByAvailable={this.props.internal.groupByAvailable}\n                  />\n                ) : null}\n                {this.state.real.visualizeType === \"Table\" &&\n                this.state.real.table ? (\n                  <WidgetAggregationTable\n                    isEditMode={false}\n                    api={this.props.api}\n                    token={this.props.token}\n                    id={this.state.real.id}\n                    title={this.state.real.title}\n                    description={this.state.real.description}\n                    tableState={this.state.real.table!}\n                    groupBy={this.state.real.groupBy}\n                    groupByAvailable={this.props.internal.groupByAvailable}\n                    filterItems={this.state.real.filterItems}\n                    period={this.state.real.period}\n                    possibleValues={this.props.internal.possibleValues}\n                  />\n                ) : null}\n                {this.state.real.visualizeType === \"PivotTable\" &&\n                this.state.real.pivot ? (\n                  <WidgetPivotTable\n                    isEditMode={false}\n                    api={this.props.api}\n                    token={this.props.token}\n                    id={this.state.real.id}\n                    title={this.state.real.title}\n                    description={this.state.real.description}\n                    tableState={this.state.real.pivot!}\n                    filterItems={this.state.real.filterItems}\n                    period={this.state.real.period}\n                    possibleValues={this.props.internal.possibleValues}\n                    groupByAvailable={this.props.internal.groupByAvailable}\n                  />\n                ) : null}\n                {this.state.real.visualizeType === \"Events\" ? (\n                  <WidgetEvents\n                    isEditMode={false}\n                    api={this.props.api}\n                    token={this.props.token}\n                    limit={5}\n                    id={this.state.real.id}\n                    dashboardId={this.props.dashboardId}\n                    title={this.state.real.title}\n                    description={this.state.real.description}\n                    filterItems={this.state.real.filterItems}\n                    period={this.state.real.period}\n                    possibleValues={this.props.internal.possibleValues}\n                  />\n                ) : null}\n                {this.state.real.visualizeType === \"Counter\" &&\n                this.state.real.counter ? (\n                  <WidgetCounter\n                    isEditMode={false}\n                    api={this.props.api}\n                    token={this.props.token}\n                    id={this.state.real.id}\n                    title={this.state.real.title}\n                    description={this.state.real.description}\n                    counterState={this.state.real.counter!}\n                    filterItems={this.state.real.filterItems}\n                    period={this.state.real.period}\n                  />\n                ) : null}\n                {this.state.real.visualizeType === \"Markdown\" ? (\n                  <WidgetMarkdown\n                    isEditMode={false}\n                    id={this.state.real.id}\n                    title={this.state.real.title}\n                    description={this.state.real.description}\n                  />\n                ) : null}\n              </Grid>\n            </Grid>\n          </Container>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={this.handleEditorDialogSave} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </div>\n    );\n  }\n}\n\nexport default WidgetEditor;\n","import * as React from \"react\";\nimport * as Immutable from \"immutable\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Lang, WidgetEditorInternalState, WidgetEditorRealState, PossibleValues, EventField, QueryFilterKey, TimePeriod } from \"../WidgetEditor/types\";\nimport { Card, CardContent, Typography, Tooltip } from \"@material-ui/core\";\nimport WidgetEditorLoadingEventFields from \"../../components/WidgetEditor/WidgetEditorLoadingEventFields\";\nimport WidgetEditorLoadingPossibleValues from \"../../components/WidgetEditor/WidgetEditorLoadingPossibleValues\";\nimport WidgetMarkdown from \"../WidgetPreview/WidgetMarkdown\";\nimport WidgetAggregationTable from \"../WidgetPreview/WidgetAggregationTable\";\nimport WidgetPivotTable from \"../WidgetPreview/WidgetPivotTable\";\nimport WidgetEvents from \"../WidgetPreview/WidgetEvents\";\nimport WidgetPreviewPie from \"../WidgetPreview/WidgetPreviewPie\";\nimport WidgetCounter from \"../WidgetPreview/WidgetCounter\";\nimport WidgetPreviewChart from \"../WidgetPreview/WidgetPreviewChart\";\nimport QueryEditorTimeperiod from \"../QueryEditor/QueryEditorTimeperiod\";\nimport QueryEditorFilter from \"../QueryEditor/QueryEditorFilter\";\nimport WidgetEditorLoadingPossiblePeriods from \"../WidgetEditor/WidgetEditorLoadingPossiblePeriods\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\ntype DashboardProps = {\n  id: string;\n  api: string;\n  token: string;\n  lang: Lang;\n  isCommonFilterEnabled: boolean;\n  isEditMode: boolean;\n  refreshTime: Date;\n\n  widgets: WidgetEditorRealState[];\n  internal: WidgetEditorInternalState;\n\n  onLoadEventFields: (values: EventField[]) => void;\n  onLoadPossibleValues: (values: PossibleValues) => void;\n  onLoadPossiblePeriods: (values: TimePeriod[]) => void;\n\n  onEditWidget: ((id: string) => void) | undefined;\n  onDeleteWidget: ((id: string) => void) | undefined;\n};\n\ntype DashboardState = {\n  filterItems: Immutable.List<QueryFilterKey>;\n  period: TimePeriod;\n};\n\nclass Dashboard extends React.Component<DashboardProps, DashboardState> {\n\n  state: DashboardState = {\n    filterItems: Immutable.List([]),\n    period: {\n      type: \"forever\",\n    },\n  }\n  handleAddFilterItem = (item: QueryFilterKey) => {\n    console.log(\"Dashboard handleAddFilterItem \" + JSON.stringify(item));\n    this.setState((prevState) => ({ \n      ...prevState, \n      filterItems: Immutable.List(prevState.filterItems).push(item)\n    }));\n  };\n  handleRemoveFilterItem = (item: QueryFilterKey) => {\n    console.log(\"Dashboard handleRemoveFilterItem \" + JSON.stringify(item));\n    this.setState((prevState) => ({ \n      ...prevState, \n      filterItems: prevState.filterItems.filter(\n        (x) => JSON.stringify(x) !== JSON.stringify(item)\n      )\n    }));\n  };\n  handleTimeperiod = (item: TimePeriod) => {\n    console.log(\"Dashboard handleTimeperiod \" + item.type);\n    this.setState((prevState) => ({ \n      ...prevState, \n      period: { type: item.type }\n    }));\n  };\n  \n  render() {\n    if (this.props.widgets.length === 0) {\n      return ( \n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>No widgets created</Typography>\n            <Typography>Use <MenuIcon /> button to select dashboard</Typography>\n            <Typography>Or turn on edit mode with <EditIcon/> and use <AddCircleOutlineOutlinedIcon /> button to add widget</Typography>\n            <Typography>&nbsp;</Typography>\n            <Typography>If something is unclear use <Link to={\"/dashboard/11111111-1111-1111-1111-111111111111\"}>Tutorial</Link> </Typography>\n            <Typography>&nbsp;</Typography>\n            <Typography>Dashboards can be loaded from external file url, in url encoded format</Typography>\n            <Typography>Example: \"#/inbox/dashboard/file/https%3A%2F%2Fraw.githubusercontent.com%2Favgx%2Fadd%2Fgh-pages%2Fdashboards.json\"</Typography>\n            <Typography>\n              <Link to={\"/inbox/dashboard/file/https%3A%2F%2Fraw.githubusercontent.com%2Favgx%2Fadd%2Fgh-pages%2Fdashboards.json\"}>Click this link to see an example</Link> \n            </Typography>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    if (!this.props.internal.possiblePeriodsLoaded) {\n      return (\n        <WidgetEditorLoadingPossiblePeriods\n          api={this.props.api}\n          token={this.props.token}\n          lang={this.props.lang}\n          onLoadPossiblePeriods={this.props.onLoadPossiblePeriods}\n        />\n      );\n    }\n    \n    if (!this.props.internal.groupByAvailableLoaded) {\n      return (\n        <WidgetEditorLoadingEventFields\n          api={this.props.api}\n          token={this.props.token}\n          lang={this.props.lang}\n          onChangeEventFields={this.props.onLoadEventFields}\n        />\n      );\n    }\n\n    if (!this.props.internal.possibleValuesLoaded) {\n      return (\n        <WidgetEditorLoadingPossibleValues\n          api={this.props.api}\n          token={this.props.token}\n          eventFields={this.props.internal.groupByAvailable}\n          onChangePossibleValues={this.props.onLoadPossibleValues}\n        />\n      );\n    }\n\n    console.log(\"Dashboard widgets: \" + JSON.stringify(this.props.widgets, undefined, 2));\n\n    const markdownTopWidgets = Immutable.List(this.props.widgets).filter((x) => x.visualizeType === \"Markdown\" && !x.bottom);\n    const markdownBottomWidgets = Immutable.List(this.props.widgets).filter((x) => x.visualizeType === \"Markdown\" && x.bottom);\n    const chartWidgets = Immutable.List(this.props.widgets).filter((x) => x.visualizeType === \"Chart\");\n    const pieWidgets = Immutable.List(this.props.widgets).filter((x) => x.visualizeType === \"Pie\");\n    const counterWidgets = Immutable.List(this.props.widgets).filter((x) => x.visualizeType === \"Counter\");\n    const tableWidgets = Immutable.List(this.props.widgets).filter((x) => x.visualizeType === \"Table\");\n    const pivotWidgets = Immutable.List(this.props.widgets).filter((x) => x.visualizeType === \"PivotTable\");\n    const eventsWidgets = Immutable.List(this.props.widgets).filter((x) => x.visualizeType === \"Events\");\n\n    return (\n      <div>\n        {/* <Card variant=\"outlined\">\n          <CardContent>\n            <Typography>Dashboard with {this.props.widgets.length} widgets</Typography>\n          </CardContent>\n        </Card> */}\n        \n        <Typography variant=\"subtitle2\">&nbsp;</Typography>\n        {this.props.isCommonFilterEnabled ? (\n          <Tooltip title=\"Dashboard common filter that will be applied to every widget\">\n          <Grid container spacing={2} direction=\"row\" alignItems=\"stretch\" alignContent=\"center\">\n            <Grid item>\n              <QueryEditorTimeperiod\n                period={this.state.period}\n                possiblePeriods={this.props.internal.possiblePeriods}\n                onTimeperiod={this.handleTimeperiod}\n              />\n            </Grid>          \n            <Grid item>\n              <QueryEditorFilter\n                filterItems={this.state.filterItems}\n                possibleValues={this.props.internal.possibleValues}\n                groupByAvailable={this.props.internal.groupByAvailable}\n                onAddFilterItem={this.handleAddFilterItem}\n                onRemoveFilterItem={this.handleRemoveFilterItem}\n              />\n            </Grid>\n          </Grid>\n          </Tooltip>\n        ) : null }\n        \n        <Grid container spacing={2} alignItems=\"stretch\">\n        {markdownTopWidgets.map((item) => (\n          <Grid item xs={12}>\n            <WidgetMarkdown\n              isEditMode={this.props.isEditMode}\n              id={item.id}\n              title={item.title}\n              description={item.description} \n              onEditWidget={this.props.onEditWidget}\n              onDeleteWidget={this.props.onDeleteWidget}    \n            />\n          </Grid>\n        ))}\n        </Grid>\n        <Grid container spacing={2} alignItems=\"stretch\">\n        {counterWidgets.map((item) => (\n          <Grid item xs={12} sm={3}>\n            <WidgetCounter\n              isEditMode={this.props.isEditMode}\n              api={this.props.api}\n              token={this.props.token}\n              id={item.id}\n              title={item.title}\n              description={item.description}\n              counterState={item.counter!}\n              filterItems={this.props.isCommonFilterEnabled ? Immutable.List(item.filterItems).concat(this.state.filterItems) : item.filterItems}\n              period={this.props.isCommonFilterEnabled ? this.state.period : item.period}\n              refreshTime={this.props.refreshTime}\n              onEditWidget={this.props.onEditWidget}\n              onDeleteWidget={this.props.onDeleteWidget}              \n            />\n          </Grid>\n        ))}\n        </Grid>\n        <Grid container spacing={2} alignItems=\"stretch\">\n        {chartWidgets.map((item) => (\n          <Grid item xs={12} sm={6}>\n            <WidgetPreviewChart \n              isEditMode={this.props.isEditMode}\n              api={this.props.api}\n              token={this.props.token}\n              id={item.id}\n              title={item.title}\n              description={item.description}\n              chartState={item.chart!}\n              filterItems={this.props.isCommonFilterEnabled ? Immutable.List(item.filterItems).concat(this.state.filterItems) : item.filterItems}\n              period={this.props.isCommonFilterEnabled ? this.state.period : item.period}\n              possibleValues={this.props.internal.possibleValues}\n              groupByAvailable={this.props.internal.groupByAvailable} \n              refreshTime={this.props.refreshTime}\n              onEditWidget={this.props.onEditWidget}\n              onDeleteWidget={this.props.onDeleteWidget}    \n            />\n          </Grid>\n        ))}        \n        {pieWidgets.map((item) => (\n          <Grid item xs={12} sm={6}>\n            <WidgetPreviewPie\n              isEditMode={this.props.isEditMode}\n              api={this.props.api}\n              token={this.props.token}\n              id={item.id}\n              title={item.title}\n              description={item.description}\n              chartState={item.chart!}\n              filterItems={this.props.isCommonFilterEnabled ? Immutable.List(item.filterItems).concat(this.state.filterItems) : item.filterItems}\n              period={this.props.isCommonFilterEnabled ? this.state.period : item.period}\n              possibleValues={this.props.internal.possibleValues}\n              groupByAvailable={this.props.internal.groupByAvailable} \n              refreshTime={this.props.refreshTime}\n              onEditWidget={this.props.onEditWidget}\n              onDeleteWidget={this.props.onDeleteWidget}    \n            />\n          </Grid>\n        ))}\n        </Grid>\n        <Typography variant=\"subtitle2\">&nbsp;</Typography>\n        <Grid container spacing={2} alignItems=\"stretch\">\n        {tableWidgets.map((item) => (\n          <Grid item xs={12}>\n            <WidgetAggregationTable\n              isEditMode={this.props.isEditMode}\n              api={this.props.api}\n              token={this.props.token}\n              id={item.id}\n              title={item.title}\n              description={item.description}\n              tableState={item.table!}\n              groupBy={item.groupBy}\n              groupByAvailable={this.props.internal.groupByAvailable}\n              filterItems={this.props.isCommonFilterEnabled ? Immutable.List(item.filterItems).concat(this.state.filterItems) : item.filterItems}\n              period={this.props.isCommonFilterEnabled ? this.state.period : item.period}\n              possibleValues={this.props.internal.possibleValues}\n              refreshTime={this.props.refreshTime}\n              onEditWidget={this.props.onEditWidget}\n              onDeleteWidget={this.props.onDeleteWidget}    \n            />\n          </Grid>\n        ))}\n        {pivotWidgets.map((item) => (\n          <Grid item xs={12}>\n            <WidgetPivotTable\n              isEditMode={this.props.isEditMode}\n              api={this.props.api}\n              token={this.props.token}\n              id={item.id}\n              title={item.title}\n              description={item.description}\n              tableState={item.pivot!}\n              filterItems={this.props.isCommonFilterEnabled ? Immutable.List(item.filterItems).concat(this.state.filterItems) : item.filterItems}\n              period={this.props.isCommonFilterEnabled ? this.state.period : item.period}\n              possibleValues={this.props.internal.possibleValues}\n              groupByAvailable={this.props.internal.groupByAvailable} \n              refreshTime={this.props.refreshTime}\n              onEditWidget={this.props.onEditWidget}\n              onDeleteWidget={this.props.onDeleteWidget}    \n            />\n          </Grid>\n        ))}\n        {eventsWidgets.map((item) => (\n          <Grid item xs={12}>\n            <WidgetEvents\n              isEditMode={this.props.isEditMode}\n              api={this.props.api}\n              token={this.props.token}\n              limit={200}\n              id={item.id}\n              dashboardId={this.props.id}\n              title={item.title}\n              description={item.description}\n              filterItems={this.props.isCommonFilterEnabled ? Immutable.List(item.filterItems).concat(this.state.filterItems) : item.filterItems}\n              period={this.props.isCommonFilterEnabled ? this.state.period : item.period}\n              possibleValues={this.props.internal.possibleValues}\n              refreshTime={this.props.refreshTime}\n              onEditWidget={this.props.onEditWidget}\n              onDeleteWidget={this.props.onDeleteWidget}    \n            />\n          </Grid>\n        ))}\n        </Grid>\n        <Grid container spacing={2} alignItems=\"stretch\">\n        {markdownBottomWidgets.map((item) => (\n          <Grid item xs={12}>\n            <WidgetMarkdown\n              isEditMode={this.props.isEditMode}\n              id={item.id}\n              title={item.title}\n              description={item.description} \n              onEditWidget={this.props.onEditWidget}\n              onDeleteWidget={this.props.onDeleteWidget}    \n            />\n          </Grid>\n        ))}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;","import * as React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CodeIcon from '@material-ui/icons/Code';\n// import Paper from \"@material-ui/core/Paper\";\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, IconButton, Tooltip } from \"@material-ui/core\";\n\ntype DashboardRawProps = {\n  isReadonly: boolean;\n  raw: string;\n  onChangeRaw: (raw: string) => void;\n};\n\nfunction DashboardRaw(props: DashboardRawProps) {\n\n  const [open, setOpen] = React.useState(false);\n  const [rawValue, setRawValue] = React.useState(\"\");\n\n  const handleSelectRawValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue =\n      event.target.value && event.target.value !== \"\" ? event.target.value : \"\";\n    console.log(\"new rawValue \" + newValue);\n    setRawValue(newValue);\n  };\n\n  const handleClickRawOpen = () => {\n    setOpen(true);\n    setRawValue(props.raw);\n  };\n\n  const handleRawCancel = () => {\n    setOpen(false);\n    setRawValue(\"\");\n  };\n\n  const handleRawSet = () => {\n    setOpen(false);\n\n    props.onChangeRaw(rawValue);\n    setRawValue(\"\");    \n  };\n\n\n  return (\n    <div>\n      <Tooltip title=\"Show the full source of dashboard internals. Copy/Paste enabled.\">\n        <IconButton\n          aria-label=\"raw\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          onClick={handleClickRawOpen}\n        >\n          <CodeIcon />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        maxWidth=\"xs\"\n        fullWidth\n        aria-labelledby=\"confirmation-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">Raw</DialogTitle>\n        <DialogContent dividers>\n          <TextField\n            id=\"value-textfield\"\n            label=\"Value\"\n            size=\"small\"\n            fullWidth\n            multiline\n            value={rawValue}\n            onChange={handleSelectRawValue}\n            variant=\"outlined\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleRawCancel} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleRawSet} color=\"primary\" disabled={props.isReadonly}>\n            Set\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default DashboardRaw;\n","import * as React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { NavLink } from \"react-router-dom\";\n// import TextField from \"@material-ui/core/TextField\";\n// import Paper from \"@material-ui/core/Paper\";\nimport {\n  // Button,\n  Dialog,\n  DialogTitle,\n  // DialogContent,\n  // DialogActions,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListSubheader,\n  Divider,\n  Tooltip,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { WidgetEditorRealState, DashboardState } from \"../WidgetEditor/types\";\n\ntype Props = {\n  list: DashboardState[];\n  isEditMode: boolean;\n  onSelectWidgets: (title: string, widgets: WidgetEditorRealState[]) => void;\n};\n\nfunction DashboardListDialog(props: Props) {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleListItemClick = (\n    title: string,\n    widgets: WidgetEditorRealState[]\n  ) => {\n    setOpen(false);\n\n    props.onSelectWidgets(title, widgets);\n  };\n\n  return (\n    <div>\n      <Tooltip title=\"Create new or select one of the predefined dashboards\">\n        <IconButton\n          edge=\"start\"\n          disabled={props.isEditMode}\n          color=\"inherit\"\n          aria-label=\"menu\"\n          onClick={handleClickOpen}\n        >\n          <MenuIcon />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        onClose={handleClose}\n        aria-labelledby=\"simple-dialog-title\"\n        maxWidth=\"xs\"\n        fullWidth\n        open={open}\n      >\n        <DialogTitle id=\"simple-dialog-title\">Dashboard</DialogTitle>\n        <List>\n          <ListItem\n            button\n            component={NavLink}\n            to={\"/dashboard\"}\n            onClick={() => handleListItemClick(\"Dashboard\", [])}\n            key={uuidv4()}\n          >\n            <ListItemText primary={\"Create new ...\"} />\n          </ListItem>\n          <Divider />\n          <ListSubheader>or select</ListSubheader>\n          {props.list.map((board) => (\n            <ListItem\n              button\n              component={NavLink}\n              to={\"/dashboard/\" + board.id}\n              //to show currently selected use //activeClassName=\"Mui-selected\"\n              //onClick={() => handleListItemClick(board.title, board.raw)}\n              onClick={handleClose}\n              key={board.id}\n            >\n              <ListItemText primary={board.title} />\n            </ListItem>\n          ))}\n        </List>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default DashboardListDialog;\n","import * as React from \"react\";\nimport { DashboardState } from \"../WidgetEditor/types\";\nimport {\n  Switch as RouterSwitch,\n  Route,\n  Link,\n  Redirect,\n  useParams,\n  useLocation,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport { Container, Typography } from \"@material-ui/core\";\n\ntype Props = {\n  dashboardsJsonUrl: string;\n  onLoadedDashboards: (list: DashboardState[]) => void;\n};\n\ntype State = {\n  data?: DashboardState[];\n  err?: string;\n};\n\nfunction waitMs<T>(ms: number, value: T) {     \n  return new Promise<T>((resolve) => setTimeout(resolve, ms, value));   \n}\n\nclass LoadingDashboards extends React.Component<Props, State> {\n  state: State = {\n    data: undefined,\n    err: undefined,\n  };\n  \n  componentDidMount() {\n    fetch(this.props.dashboardsJsonUrl)      \n      .then((response) => response.json())      \n      .then(value => waitMs(2000, value))\n      .then((data) => {\n        if(data.length > 0){\n          this.props.onLoadedDashboards(data);\n          this.setState({ data: data });\n        } else {\n          this.setState({ err: \"No dashboards found in \" + this.props.dashboardsJsonUrl });\n        }        \n      })\n      .catch((e) => {\n        this.setState({ err: e.message });\n      });\n  }\n\n  render() {\n    if (this.state.err) {\n      return (\n        <div>\n          <Container>\n            <Typography>Error: {this.state.err}</Typography>\n            <Typography><Link to=\"/\">Return to dashboards</Link></Typography>\n          </Container>\n        </div>\n      );\n    }\n\n    if (this.state.data) {\n      return <Redirect to=\"/\" />;\n    }\n\n    return (\n      <div style={{\n        height: '90vh', margin: 0, padding: 0,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}>\n        <DashboardIcon/>&nbsp;&nbsp;Loading dashboard from {this.props.dashboardsJsonUrl}...\n      </div>\n      // <div>\n      //   <Container>\n      //     <Typography>\n      //       Loading dashboard from {this.props.dashboardsJsonUrl} ...\n      //     </Typography>\n      //   </Container>\n      // </div>\n    );\n  }\n}\n\nexport default LoadingDashboards;\n","import React from \"react\";\nimport * as Immutable from \"immutable\";\n//import logo from \"./logo.svg\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\n\nimport WidgetEditor from \"../../components/WidgetEditor\";\nimport Dashboard from \"../../components/Dashboard\";\nimport DashboardRaw from \"../../components/Dashboard/DashboardRaw\";\nimport DashboardListDialog from \"../../components/Dashboard/DashboardListDialog\";\n// import WidgetEditorTitle from \"../../components/WidgetEditor/WidgetEditorTitle\";\nimport {\n  Toolbar,\n  IconButton,\n  Typography,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  TextField,\n  DialogActions,\n  // Breadcrumbs,\n  MenuItem,\n  Switch,\n  FormControlLabel,\n  Grid,\n  Box,\n  Tooltip,\n} from \"@material-ui/core\";\n// import Grid from \"@material-ui/core/Grid\";\n//import Paper from '@material-ui/core/Paper';\n//import List from '@material-ui/core/List';\n// import Container from \"@material-ui/core/Container\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddCircleOutlineOutlinedIcon from \"@material-ui/icons/AddCircleOutlineOutlined\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\n// import MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport {\n  Lang,\n  EventField,\n  PossibleValues,\n  WidgetEditorInternalState,\n  WidgetEditorRealState,\n  TimePeriod,\n  DashboardState,\n} from \"../WidgetEditor/types\";\n// import Box from '@material-ui/core/Box';\nimport pdfMake from \"pdfmake/build/pdfmake\";\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\nimport {\n//  Switch as RouterSwitch,\n//  Route,\n  Link,\n  Redirect,\n  useParams,\n//  useLocation,\n//  useRouteMatch\n} from \"react-router-dom\";\nimport LoadingDashboards from \"./LoadingDashboards\";\nimport dashboardListData from \"./dashboards.json\";\nimport tutorialData from \"./tutorial.json\";\nimport moment from \"moment\";\n\n//TODO: вот сюда зашиваются нужные шрифты!\npdfMake.vfs = pdfFonts.pdfMake.vfs;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    // root: {\n    //   '& .MuiTextField-root': {\n    //     margin: theme.spacing(1),\n    //     width: '25ch',\n    //   },\n    // },\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\n// React.useEffect(() => {\n//   document.title = \"widgets sample\"\n// }, []);\n\nfunction Main() {\n  const classes = useStyles();\n  const {dashboardId, widgetId, widgetMode, eventId, dashboardFile } = useParams();\n\n\n  const defaultList: DashboardState[] = dashboardListData as any;\n  const [list, setList] = React.useState<DashboardState[]>(defaultList);\n  const tutorial: DashboardState[] = tutorialData as any;\n  //document.title = \"widgets sample\";\n\n  \n  //const [currentDashboardId, setCurrentDashboardId] = React.useState();\n  const [appTitle, setAppTitle] = React.useState(\"Dashboards\");\n  const [isEditMode, setEditMode] = React.useState<boolean>(false);\n  const [api, setApi] = React.useState(\n    \"https://axxoncloud-test2.axxonnet.com\"\n    //\"http://127.0.0.1:8787/https://etisalat-test3.axxoncloud.com\"\n  );\n  const [token, setToken] = React.useState(\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySUQiOjIsIlVzZXJOYW1lIjoic2hhdWx1a2hvdjEyQGdtYWlsLmNvbSIsIkNsaWVudElEIjoiNmNlZGQ2OTJjNTNiNWRmMGNkZGVjNjlmMmYxNzZhMDgiLCJUeXBlIjoiYWNjZXNzVG9rZW4iLCJWZXJzaW9uIjoidjIiLCJDcmVhdGVkQXQiOiIyMDIwLTA2LTI5VDA2OjQwOjA5Ljg2MjQwNDEwMloiLCJleHAiOjE1OTM0OTkyMDksImlhdCI6MTU5MzQxMjgwOSwiaXNzIjoiQ2xvdWQifQ.qPs77wT72mO4LD1iP2NUZZBoD9lXeTS9nbzC7366mAw\",\n  );\n  const [lang, setLang] = React.useState<Lang>(\"en\");\n  const [isCommonFilterEnabled, setCommonFilterEnabled] = React.useState<\n    boolean\n  >(true);\n  const [refreshTime, setRefreshTime] = React.useState<Date>(new Date());\n\n  const [openBackendDialog, setOpenBackendDialog] = React.useState(false);\n  const [openEditorDialog, setOpenEditorDialog] = React.useState(false);\n\n  const handleApi = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //setName(event.target.value);\n    console.log(\"handleApi \" + event.target.value);\n    setApi(event.target.value);\n  };\n\n  const handleToken = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //setName(event.target.value);\n    console.log(\"handleToken \" + event.target.value);\n    setToken(event.target.value);\n  };\n\n  const handleLang = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleLang \" + event.target.value);\n    const x: Lang = event.target.value as Lang;\n    setLang(x);\n  };\n\n  const handleCommonFilter = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"handleCommonFilter \" + event.target.value);\n    const x: boolean = event.target.checked;\n    setCommonFilterEnabled(x);\n  };\n\n  const handleBackendClickOpen = () => {\n    setOpenBackendDialog(true);\n  };\n\n  const handleBackendDialogClose = () => {\n    setOpenBackendDialog(false);\n  };\n\n  const handleRefresh = () => {\n    setRefreshTime(new Date());\n  };\n\n  const handleEditorClickOpen = () => {\n    setOpenEditorDialog(true);\n  };\n\n  const handleEditorDialogClose = () => {\n    setOpenEditorDialog(false);\n  };\n\n  //const [currentEditedWidget, setCurrentEditedWidget] = React.useState<WidgetEditorRealState>();\n  const handleChangeWidgetEditorState = (widget: WidgetEditorRealState) => {\n    \n    console.log(\"handleChangeWidgetEditorState \" + dashboardId + \" \" + JSON.stringify(widget));\n    setWidgets(Immutable.List(widgets).push(widget).toArray());\n    setOpenEditorDialog(false);\n  };\n\n  const parseJwt = (token: string): any => {\n    try {\n      return JSON.parse(atob(token.split(\".\")[1]));\n    } catch (e) {\n      return null;\n    }\n  };\n\n  const tokenParsed = parseJwt(token);\n  console.log(\"tokenParsed: \" + JSON.stringify(tokenParsed));\n  // Version v2\n  // CreatedAt 2020-04-13T15:19:17.780311755Z\n  // exp 1586877557\n  // iat 1586791157\n  // var exp = (tokenParsed[\"exp\"] as number) * 1000;\n  // console.log(new Date(exp));\n\n  // const tokenDescription = \"Version: \" + tokenParsed[\"Version\"]\n  //   + \" User: \" + tokenParsed[\"UserName\"]\n  //   + \" Expire at: \" + (new Date(exp).toISOString());\n  const tokenDescription = JSON.stringify(tokenParsed);\n\n  const [widgets, setWidgets] = React.useState<WidgetEditorRealState[]>([]);\n\n  const [\n    widgetEditorInternalState,\n    setWidgetEditorInternalState,\n  ] = React.useState<WidgetEditorInternalState>({\n    groupByAvailableLoaded: false,\n    groupByAvailable: [],\n    possibleValuesLoaded: false,\n    possibleValues: {\n      set: Immutable.fromJS({}),\n      dictionary: Immutable.fromJS({}),\n    },\n    possiblePeriodsLoaded: false,\n    possiblePeriods: [],\n  });\n\n  const handleLoadEventFields = (values: EventField[]) => {\n    console.log(\"handleLoadEventFields \" + JSON.stringify(values));\n    const valuesSorted = values.sort(function (a, b) {\n      const bandA = a.translation.toUpperCase();\n      const bandB = b.translation.toUpperCase();\n\n      let comparison = 0;\n      if (bandA > bandB) {\n        comparison = 1;\n      } else if (bandA < bandB) {\n        comparison = -1;\n      }\n      return comparison;\n    });\n\n    setWidgetEditorInternalState({\n      ...widgetEditorInternalState,\n      groupByAvailableLoaded: true,\n      groupByAvailable: valuesSorted,\n    });\n  };\n\n  const handleLoadPossibleValues = (values: PossibleValues) => {\n    console.log(\"handleLoadPossibleValues \" + JSON.stringify(values));\n\n    setWidgetEditorInternalState({\n      ...widgetEditorInternalState,\n      possibleValuesLoaded: true,\n      possibleValues: values,\n    });\n  };\n\n  const handleLoadPossiblePeriods = (values: TimePeriod[]) => {\n    console.log(\"handleLoadPossiblePeriods \" + JSON.stringify(values));\n\n    setWidgetEditorInternalState({\n      ...widgetEditorInternalState,\n      possiblePeriodsLoaded: true,\n      possiblePeriods: values,\n    });\n  };\n\n  const handleonLoadedDashboards = (loadedList: DashboardState[]) => {\n    //setName(event.target.value);\n    console.log(\"handleonLoadedDashboards length=\" + loadedList.length);\n    setList(loadedList);\n  };\n\n  if (dashboardFile) {\n    return (\n      <LoadingDashboards\n        dashboardsJsonUrl={decodeURIComponent(dashboardFile)}\n        onLoadedDashboards={handleonLoadedDashboards}\n      />\n    );\n  }\n\n  const handleRaw = (raw: string) => {\n    const x: WidgetEditorRealState[] = JSON.parse(raw);\n    setWidgets(x);\n  };\n  const handleWidgets = (title: string, w: WidgetEditorRealState[]) => {\n    setWidgets(w);\n    setAppTitle(title);\n  };\n  const handleExport = () => {\n    console.log(\"TODO: EXPORT\");\n\n    // const svgDocs = widgets.map((w) => {\n    //   if (!w.id) {\n    //     return \"no id for \" + w.visualizeType + \" \" + w.title;\n    //   }\n    //   var widgetRoot = document.getElementById(w.id);\n    //   console.log(widgetRoot);\n    //   if (!widgetRoot) {\n    //     return \"no widgetRoot for \" + w.visualizeType + \" \"+ w.title;\n    //   }\n    //   let chartSVG = widgetRoot!.querySelector(\"svg.recharts-surface\");\n    //   console.log(chartSVG);\n    //   if(chartSVG != null) {\n    //     let svgURL = new XMLSerializer().serializeToString(chartSVG);\n    //     return {\n    //       svg: svgURL,\n    //       width: 500,\n    //     };\n    //   } else {\n    //     return \"no svg for \" + w.visualizeType + \" \"+ w.title;\n    //   }\n\n    // });\n\n    const content: object[] = [];\n    for (let i = 0; i < widgets.length; i++) {\n      const w = widgets[i];\n      if (!w.id) {\n        content.push({\n          text: \"no id for \" + w.visualizeType + \" \" + w.title,\n        });\n        continue;\n      }\n      var widgetRoot = document.getElementById(w.id);\n      console.log(widgetRoot);\n      if (!widgetRoot) {\n        content.push({\n          text: \"no widgetRoot for \" + w.visualizeType + \" \" + w.title,\n        });\n        continue;\n      }\n      let chartSVG = widgetRoot!.querySelector(\"svg.recharts-surface\");\n      console.log(chartSVG);\n      if (chartSVG != null) {\n        let svgURL = new XMLSerializer().serializeToString(chartSVG);\n        content.push(\n          {\n            text: w.title,\n          },\n          {\n            text: w.description ?? \"\",\n          },\n          {\n            text: \"raw: \" + JSON.stringify(w),\n          },\n          {\n            svg: svgURL,\n            width: 500,\n          }\n        );\n      } else {\n        content.push({\n          text: \"no svg for \" + w.visualizeType + \" \" + w.title,\n        });\n      }\n    }\n\n    //если есть анимация то валится рендеринг в pdf\n    //REPLACE stroke-dasharray=\"660.372314453125px 0px\"\n    //WITH    stroke-dasharray=\"660.372314453125px 1px\"\n    //при отключенной анимации всё норм.\n\n    // let width = chartSVG.getAttribute('width') ?? \"1920\";\n    // let height = chartSVG.getAttribute('height') ?? \"1080\";\n\n    var docDefinition: any = {\n      header: \"Export (ugly but fixing is in progress)\",\n      footer: function (currentPage: any, pageCount: any) {\n        return { text: \"Created at \" + new Date(), alignment: \"center\" };\n      },\n      content: content,\n    };\n\n    pdfMake\n      .createPdf(docDefinition)\n      .download(appTitle + \".\" + moment().format('YYYYMMDDTHHmmss') + \".pdf\");\n  };\n\n  const DashboardRawWrapper = () => {\n    let { dashboardId } = useParams();\n\n    if (!dashboardId) {\n      return (\n        <DashboardRaw\n          isReadonly={false}\n          raw={JSON.stringify(widgets, undefined, 2)}\n          onChangeRaw={handleRaw}\n        />\n      );\n    }\n    \n\n    let ww = Immutable.List(list).find((l) => l.id === dashboardId);\n    if(!ww) {\n      return null;\n    }\n\n    let w1 = ww.raw;\n\n    return (\n      <DashboardRaw\n        isReadonly={true}\n        raw={JSON.stringify(w1, undefined, 2)}\n        onChangeRaw={handleRaw}\n      />\n    );\n  };\n\n  const handleEditWidget = (id: string) => {\n    console.log(\"TODO: implement handleEditWidget\");\n  };\n\n  const handleDeleteWidget = (id: string) => {\n    setWidgets(widgets.filter((x) => x.id !== id));\n  };\n\n  const DashboardWrapper = () => {\n\n    if(!dashboardId) {\n      return (\n        <Dashboard\n          id=\"custom\"\n          api={api}\n          token={token}\n          lang={lang}\n          isCommonFilterEnabled={isCommonFilterEnabled}\n          isEditMode={isEditMode}\n          refreshTime={refreshTime}\n          widgets={widgets}\n          internal={widgetEditorInternalState}\n          onLoadEventFields={handleLoadEventFields}\n          onLoadPossibleValues={handleLoadPossibleValues}\n          onLoadPossiblePeriods={handleLoadPossiblePeriods}\n          onEditWidget={handleEditWidget}\n          onDeleteWidget={handleDeleteWidget}\n        />\n      );      \n    }\n    //let { url } = useRouteMatch();\n    // let { dashboardId } = useParams();\n    // let location = useLocation();\n    // console.log(location.pathname);\n    //let person = find(parseInt(id));\n    let ww = Immutable.List(list).find((l) => l.id === dashboardId)\n      ?? Immutable.List(tutorial).find((l) => l.id === dashboardId);\n\n    if(!ww) {\n      return (\n        <Typography>Dashboard {dashboardId} not found</Typography>\n      );\n    }\n\n    let w1 = ww.raw;\n    //Это плохой путь, делать тут сайд эффекты!!!\n    // setAppTitle(ww.title);\n    // setWidgets(w1); //And here I can't get why I need this anymore??\n    // setCurrentDashboardId(dashboardId);\n    //TODO: here we must do the same as from select from list\n    //now I see bug: no buttons are updated.\n\n    return (\n      // <Typography>Route {dashboardId}</Typography>\n      <Dashboard\n        id={ww.id}\n        api={api}\n        token={token}\n        lang={lang}\n        isCommonFilterEnabled={isCommonFilterEnabled}\n        isEditMode={isEditMode}\n        refreshTime={refreshTime}\n        widgets={w1}\n        internal={widgetEditorInternalState}\n        onLoadEventFields={handleLoadEventFields}\n        onLoadPossibleValues={handleLoadPossibleValues}\n        onLoadPossiblePeriods={handleLoadPossiblePeriods}\n        onEditWidget={handleEditWidget}\n        onDeleteWidget={handleDeleteWidget}\n      />\n    );\n  }\n\n  return (\n    <div className={classes.root}>\n      <Box display=\"block\" displayPrint=\"none\">\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          {/* <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton> */}\n          <DashboardListDialog list={list} isEditMode={isEditMode} onSelectWidgets={handleWidgets} />\n          <Typography variant=\"h6\" className={classes.title}>\n            {appTitle} {isEditMode ? \" : Edit\" : \"\"}\n          </Typography>\n          {isEditMode && !dashboardId ? (\n            <Tooltip title=\"Add widget\">\n              <IconButton \n                edge=\"end\" \n                color=\"inherit\"\n                aria-label=\"add widget\" \n                onClick={handleEditorClickOpen}>\n                <AddCircleOutlineOutlinedIcon />\n              </IconButton>\n            </Tooltip>\n          ) : null}\n          {isEditMode ? (\n            <DashboardRawWrapper/>\n          ) : null}\n          {widgets.length > 0 ? (\n            <Tooltip title=\"Refresh data\">\n              <IconButton\n                aria-label=\"refresh\"\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n                onClick={handleRefresh}\n              >\n                <RefreshIcon />\n              </IconButton>\n            </Tooltip>\n          ) : null}\n          {!isEditMode && widgets.length > 0 ? (\n            // <Button color=\"inherit\" onClick={handleExport}>\n            //   Export\n            // </Button>\n            <Tooltip title=\"Export\">\n              <IconButton\n                aria-label=\"export\"\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n                onClick={handleExport}\n              >\n                <GetAppIcon />\n              </IconButton>\n            </Tooltip>\n            \n          ) : null}\n          {isEditMode ? (\n            <Tooltip title=\"Show settings dialog\">\n              <IconButton\n                aria-label=\"backend\"\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n                onClick={handleBackendClickOpen}\n              >\n                <SettingsIcon />\n              </IconButton>\n            </Tooltip>\n          ) : null}\n          <Tooltip title=\"Toggle edit mode\">\n            <IconButton\n              aria-label=\"edit-mode\"\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n              onClick={() => {\n                setEditMode(!isEditMode);\n              }}\n            >\n              <EditIcon color={isEditMode ? \"secondary\" : \"inherit\"} />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </AppBar>\n      </Box>\n\n      {/* <div style={{ height: '90vh', margin: 0, padding: 0 }}> */}\n      {/* <Box style={{height: \"90vh\", backgroundColor:\"green\"}}>\n      {/* </Box> */}\n      {/* </div> */}\n\n      <DashboardWrapper/>\n      \n      <Dialog\n        open={openBackendDialog}\n        onClose={handleBackendDialogClose}\n        aria-labelledby=\"backend-dialog-title\"\n      >\n        <DialogTitle id=\"backend-dialog-title\">Backend</DialogTitle>\n        <DialogContent>\n          <DialogContentText>To get data need url and token</DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"backend-api\"\n            label=\"API\"\n            type=\"url\"\n            value={api}\n            fullWidth\n            onChange={handleApi}\n          />\n          <TextField\n            id=\"op-value-textfield\"\n            margin=\"dense\"\n            label=\"lang\"\n            size=\"small\"\n            select\n            fullWidth\n            value={lang}\n            onChange={handleLang}\n          >\n            <MenuItem key=\"en\" value=\"en\">\n              en\n            </MenuItem>\n            <MenuItem key=\"ru\" value=\"ru\">\n              ru\n            </MenuItem>\n          </TextField>\n          <FormControlLabel\n            control={\n              <Switch\n                checked={isCommonFilterEnabled}\n                onChange={handleCommonFilter}\n                size=\"small\"\n              />\n            }\n            label=\"Dashboard common filter\"\n          />\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"backend-token\"\n            label=\"Access token\"\n            value={token}\n            multiline\n            fullWidth\n            helperText={tokenDescription}\n            onChange={handleToken}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleBackendDialogClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleBackendDialogClose} color=\"primary\">\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog\n        fullScreen\n        open={openEditorDialog}\n        onClose={handleEditorDialogClose}\n        fullWidth={true}\n        maxWidth={\"xl\"}\n        aria-labelledby=\"editor-dialog-title\"\n      >\n        <WidgetEditor\n          dashboardId={dashboardId ?? \"custom\"}\n          api={api}\n          token={token}\n          lang={lang}\n          internal={widgetEditorInternalState}\n          onLoadEventFields={handleLoadEventFields}\n          onLoadPossibleValues={handleLoadPossibleValues}\n          onLoadPossiblePeriods={handleLoadPossiblePeriods}\n          onChangeWidgetEditorState={handleChangeWidgetEditorState}\n          onClose={handleEditorDialogClose}\n        />\n      </Dialog>\n    </div>\n  );\n}\n\nexport default Main;\n"],"sourceRoot":""}